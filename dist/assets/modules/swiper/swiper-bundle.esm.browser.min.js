function _defineProperties(a, e) {
  for (var t, r = 0; r < e.length; r++) t = e[r], t.enumerable = t.enumerable || !1, t.configurable = !0, "value" in t && (t.writable = !0), Object.defineProperty(a, t.key, t);
}

function _createClass(a, e, t) {
  return e && _defineProperties(a.prototype, e), t && _defineProperties(a, t), a;
}

function _extends() {
  return (_extends = Object.assign || function (a) {
    for (var e, r = 1; r < arguments.length; r++) for (var l in e = arguments[r], e) Object.prototype.hasOwnProperty.call(e, l) && (a[l] = e[l]);

    return a;
  }).apply(this, arguments);
}

function isObject(a) {
  return null !== a && "object" == typeof a && "constructor" in a && a.constructor === Object;
}

function extend(a, s) {
  void 0 === a && (a = {}), void 0 === s && (s = {}), Object.keys(s).forEach(function (e) {
    void 0 === a[e] ? a[e] = s[e] : isObject(s[e]) && isObject(a[e]) && 0 < Object.keys(s[e]).length && extend(a[e], s[e]);
  });
}

var ssrDocument = {
  body: {},
  addEventListener: function () {},
  removeEventListener: function () {},
  activeElement: {
    blur: function () {},
    nodeName: ""
  },
  querySelector: function () {
    return null;
  },
  querySelectorAll: function () {
    return [];
  },
  getElementById: function () {
    return null;
  },
  createEvent: function () {
    return {
      initEvent: function () {}
    };
  },
  createElement: function () {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute: function () {},
      getElementsByTagName: function () {
        return [];
      }
    };
  },
  createElementNS: function () {
    return {};
  },
  importNode: function () {
    return null;
  },
  location: {
    hash: "",
    host: "",
    hostname: "",
    href: "",
    origin: "",
    pathname: "",
    protocol: "",
    search: ""
  }
};

function getDocument() {
  var a = "undefined" == typeof document ? {} : document;
  return extend(a, ssrDocument), a;
}

var ssrWindow = {
  document: ssrDocument,
  navigator: {
    userAgent: ""
  },
  location: {
    hash: "",
    host: "",
    hostname: "",
    href: "",
    origin: "",
    pathname: "",
    protocol: "",
    search: ""
  },
  history: {
    replaceState: function () {},
    pushState: function () {},
    go: function () {},
    back: function () {}
  },
  CustomEvent: function () {
    return this;
  },
  addEventListener: function () {},
  removeEventListener: function () {},
  getComputedStyle: function () {
    return {
      getPropertyValue: function () {
        return "";
      }
    };
  },
  Image: function () {},
  Date: function () {},
  screen: {},
  setTimeout: function () {},
  clearTimeout: function () {},
  matchMedia: function () {
    return {};
  },
  requestAnimationFrame: function (a) {
    return "undefined" == typeof setTimeout ? (a(), null) : setTimeout(a, 0);
  },
  cancelAnimationFrame: function (a) {
    "undefined" != typeof setTimeout && clearTimeout(a);
  }
};

function getWindow() {
  var a = "undefined" == typeof window ? {} : window;
  return extend(a, ssrWindow), a;
}

function _inheritsLoose(a, e) {
  a.prototype = Object.create(e.prototype), a.prototype.constructor = a, a.__proto__ = e;
}

function _getPrototypeOf(a) {
  return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (a) {
    return a.__proto__ || Object.getPrototypeOf(a);
  })(a);
}

function _setPrototypeOf(a, e) {
  return (_setPrototypeOf = Object.setPrototypeOf || function (a, e) {
    return a.__proto__ = e, a;
  })(a, e);
}

function _isNativeReflectConstruct() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;

  try {
    return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
  } catch (a) {
    return !1;
  }
}

function _construct() {
  return (_construct = _isNativeReflectConstruct() ? Reflect.construct : function (r, e, t) {
    var i = [null];
    i.push.apply(i, e);
    var s = new (Function.bind.apply(r, i))();
    return t && _setPrototypeOf(s, t.prototype), s;
  }).apply(null, arguments);
}

function _isNativeFunction(a) {
  return -1 !== Function.toString.call(a).indexOf("[native code]");
}

function _wrapNativeSuper(a) {
  var s = "function" == typeof Map ? new Map() : void 0;
  return (_wrapNativeSuper = function (a) {
    function e() {
      return _construct(a, arguments, _getPrototypeOf(this).constructor);
    }

    if (null === a || !_isNativeFunction(a)) return a;
    if ("function" != typeof a) throw new TypeError("Super expression must either be null or a function");

    if (void 0 !== s) {
      if (s.has(a)) return s.get(a);
      s.set(a, e);
    }

    return e.prototype = Object.create(a.prototype, {
      constructor: {
        value: e,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), _setPrototypeOf(e, a);
  })(a);
}

function _assertThisInitialized(a) {
  if (void 0 === a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return a;
}

function makeReactive(a) {
  var s = a.__proto__;
  Object.defineProperty(a, "__proto__", {
    get: function () {
      return s;
    },
    set: function (a) {
      s.__proto__ = a;
    }
  });
}

var Dom7 = function (a) {
  function e(e) {
    var t;
    return makeReactive(_assertThisInitialized(t = a.call.apply(a, [this].concat(e)) || this)), t;
  }

  return _inheritsLoose(e, a), e;
}(_wrapNativeSuper(Array));

function arrayFlat(a) {
  void 0 === a && (a = []);
  var s = [];
  return a.forEach(function (a) {
    Array.isArray(a) ? s.push.apply(s, arrayFlat(a)) : s.push(a);
  }), s;
}

function arrayFilter(a, e) {
  return Array.prototype.filter.call(a, e);
}

function arrayUnique(a) {
  for (var e = [], t = 0; t < a.length; t += 1) -1 === e.indexOf(a[t]) && e.push(a[t]);

  return e;
}

function qsa(r, e) {
  if ("string" != typeof r) return [r];

  for (var t = [], i = e.querySelectorAll(r), s = 0; s < i.length; s += 1) t.push(i[s]);

  return t;
}

function $(d, e) {
  var t = getWindow(),
      i = getDocument(),
      s = [];
  if (!e && d instanceof Dom7) return d;
  if (!d) return new Dom7(s);

  if ("string" == typeof d) {
    var p = d.trim();

    if (0 <= p.indexOf("<") && 0 <= p.indexOf(">")) {
      var r = "div";
      0 === p.indexOf("<li") && (r = "ul"), 0 === p.indexOf("<tr") && (r = "tbody"), 0 !== p.indexOf("<td") && 0 !== p.indexOf("<th") || (r = "tr"), 0 === p.indexOf("<tbody") && (r = "table"), 0 === p.indexOf("<option") && (r = "select");
      var c = i.createElement(r);
      c.innerHTML = p;

      for (var o = 0; o < c.childNodes.length; o += 1) s.push(c.childNodes[o]);
    } else s = qsa(d.trim(), e || i);
  } else if (d.nodeType || d === t || d === i) s.push(d);else if (Array.isArray(d)) {
    if (d instanceof Dom7) return d;
    s = d;
  }

  return new Dom7(arrayUnique(s));
}

function addClass() {
  for (var a = arguments.length, e = Array(a), t = 0; t < a; t++) e[t] = arguments[t];

  var r = arrayFlat(e.map(function (a) {
    return a.split(" ");
  }));
  return this.forEach(function (a) {
    var e;
    (e = a.classList).add.apply(e, r);
  }), this;
}

function removeClass() {
  for (var a = arguments.length, e = Array(a), t = 0; t < a; t++) e[t] = arguments[t];

  var r = arrayFlat(e.map(function (a) {
    return a.split(" ");
  }));
  return this.forEach(function (a) {
    var e;
    (e = a.classList).remove.apply(e, r);
  }), this;
}

function toggleClass() {
  for (var a = arguments.length, e = Array(a), t = 0; t < a; t++) e[t] = arguments[t];

  var r = arrayFlat(e.map(function (a) {
    return a.split(" ");
  }));
  this.forEach(function (a) {
    r.forEach(function (e) {
      a.classList.toggle(e);
    });
  });
}

function hasClass() {
  for (var a = arguments.length, e = Array(a), t = 0; t < a; t++) e[t] = arguments[t];

  var r = arrayFlat(e.map(function (a) {
    return a.split(" ");
  }));
  return 0 < arrayFilter(this, function (a) {
    return 0 < r.filter(function (e) {
      return a.classList.contains(e);
    }).length;
  }).length;
}

function attr(a, e) {
  if (1 === arguments.length && "string" == typeof a) return this[0] ? this[0].getAttribute(a) : void 0;

  for (var t = 0; t < this.length; t += 1) if (2 === arguments.length) this[t].setAttribute(a, e);else for (var r in a) this[t][r] = a[r], this[t].setAttribute(r, a[r]);

  return this;
}

function removeAttr(a) {
  for (var e = 0; e < this.length; e += 1) this[e].removeAttribute(a);

  return this;
}

function transform(a) {
  for (var e = 0; e < this.length; e += 1) this[e].style.transform = a;

  return this;
}

function transition(a) {
  for (var e = 0; e < this.length; e += 1) this[e].style.transition = "string" == typeof a ? a : a + "ms";

  return this;
}

function on() {
  function m(a) {
    var e = a.target;

    if (e) {
      var t = a.target.dom7EventData || [];
      if (0 > t.indexOf(a) && t.unshift(a), $(e).is(f)) w.apply(e, t);else for (var i = $(e).parents(), s = 0; s < i.length; s += 1) $(i[s]).is(f) && w.apply(i[s], t);
    }
  }

  function o(a) {
    var e = a && a.target && a.target.dom7EventData || [];
    0 > e.indexOf(a) && e.unshift(a), w.apply(this, e);
  }

  for (var l = arguments.length, e = Array(l), t = 0; t < l; t++) e[t] = arguments[t];

  var g = e[0],
      f = e[1],
      w = e[2],
      b = e[3];
  "function" == typeof e[1] && (g = e[0], w = e[1], b = e[2], f = void 0), b || (b = !1);

  for (var y, E, x = g.split(" "), h = 0; h < this.length; h += 1) if (E = this[h], f) for (y = 0; y < x.length; y += 1) {
    var T = x[y];
    E.dom7LiveListeners || (E.dom7LiveListeners = {}), E.dom7LiveListeners[T] || (E.dom7LiveListeners[T] = []), E.dom7LiveListeners[T].push({
      listener: w,
      proxyListener: m
    }), E.addEventListener(T, m, b);
  } else for (y = 0; y < x.length; y += 1) {
    var c = x[y];
    E.dom7Listeners || (E.dom7Listeners = {}), E.dom7Listeners[c] || (E.dom7Listeners[c] = []), E.dom7Listeners[c].push({
      listener: w,
      proxyListener: o
    }), E.addEventListener(c, o, b);
  }

  return this;
}

function off() {
  for (var m = arguments.length, e = Array(m), t = 0; t < m; t++) e[t] = arguments[t];

  var g = e[0],
      f = e[1],
      w = e[2],
      b = e[3];
  "function" == typeof e[1] && (g = e[0], w = e[1], b = e[2], f = void 0), b || (b = !1);

  for (var y = g.split(" "), o = 0; o < y.length; o += 1) for (var E = y[o], d = 0; d < this.length; d += 1) {
    var x = this[d],
        p = void 0;
    if (!f && x.dom7Listeners ? p = x.dom7Listeners[E] : f && x.dom7LiveListeners && (p = x.dom7LiveListeners[E]), p && p.length) for (var T, C = p.length - 1; 0 <= C; C -= 1) T = p[C], w && T.listener === w || w && T.listener && T.listener.dom7proxy && T.listener.dom7proxy === w ? (x.removeEventListener(E, T.proxyListener, b), p.splice(C, 1)) : w || (x.removeEventListener(E, T.proxyListener, b), p.splice(C, 1));
  }

  return this;
}

function trigger() {
  for (var p = getWindow(), e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];

  for (var c = t[0].split(" "), a = t[1], r = 0; r < c.length; r += 1) for (var u, m = c[r], o = 0; o < this.length; o += 1) if (u = this[o], p.CustomEvent) {
    var g = new p.CustomEvent(m, {
      detail: a,
      bubbles: !0,
      cancelable: !0
    });
    u.dom7EventData = t.filter(function (a, e) {
      return 0 < e;
    }), u.dispatchEvent(g), u.dom7EventData = [], delete u.dom7EventData;
  }

  return this;
}

function transitionEnd(a) {
  var e = this;
  return a && e.on("transitionend", function t(i) {
    i.target === this && (a.call(this, i), e.off("transitionend", t));
  }), this;
}

function outerWidth(a) {
  if (0 < this.length) {
    if (a) {
      var e = this.styles();
      return this[0].offsetWidth + parseFloat(e.getPropertyValue("margin-right")) + parseFloat(e.getPropertyValue("margin-left"));
    }

    return this[0].offsetWidth;
  }

  return null;
}

function outerHeight(a) {
  if (0 < this.length) {
    if (a) {
      var e = this.styles();
      return this[0].offsetHeight + parseFloat(e.getPropertyValue("margin-top")) + parseFloat(e.getPropertyValue("margin-bottom"));
    }

    return this[0].offsetHeight;
  }

  return null;
}

function offset() {
  if (0 < this.length) {
    var d = getWindow(),
        e = getDocument(),
        t = this[0],
        i = t.getBoundingClientRect(),
        s = e.body,
        a = t.clientTop || s.clientTop || 0,
        r = t.clientLeft || s.clientLeft || 0,
        n = t === d ? d.scrollY : t.scrollTop,
        o = t === d ? d.scrollX : t.scrollLeft;
    return {
      top: i.top + n - a,
      left: i.left + o - r
    };
  }

  return null;
}

function styles() {
  var a = getWindow();
  return this[0] ? a.getComputedStyle(this[0], null) : {};
}

function css(r, e) {
  var t,
      l = getWindow();

  if (1 === arguments.length) {
    if ("string" != typeof r) {
      for (t = 0; t < this.length; t += 1) for (var s in r) this[t].style[s] = r[s];

      return this;
    }

    if (this[0]) return l.getComputedStyle(this[0], null).getPropertyValue(r);
  }

  if (2 === arguments.length && "string" == typeof r) {
    for (t = 0; t < this.length; t += 1) this[t].style[r] = e;

    return this;
  }

  return this;
}

function each(a) {
  return a ? (this.forEach(function (e, t) {
    a.apply(e, [e, t]);
  }), this) : this;
}

function filter(a) {
  return $(arrayFilter(this, a));
}

function html(a) {
  if (void 0 === a) return this[0] ? this[0].innerHTML : null;

  for (var e = 0; e < this.length; e += 1) this[e].innerHTML = a;

  return this;
}

function text(a) {
  if (void 0 === a) return this[0] ? this[0].textContent.trim() : null;

  for (var e = 0; e < this.length; e += 1) this[e].textContent = a;

  return this;
}

function is(l) {
  var e,
      n,
      o = getWindow(),
      s = getDocument(),
      a = this[0];
  if (!a || void 0 === l) return !1;

  if ("string" == typeof l) {
    if (a.matches) return a.matches(l);
    if (a.webkitMatchesSelector) return a.webkitMatchesSelector(l);
    if (a.msMatchesSelector) return a.msMatchesSelector(l);

    for (e = $(l), n = 0; n < e.length; n += 1) if (e[n] === a) return !0;

    return !1;
  }

  if (l === s) return a === s;
  if (l === o) return a === o;

  if (l.nodeType || l instanceof Dom7) {
    for (e = l.nodeType ? [l] : l, n = 0; n < e.length; n += 1) if (e[n] === a) return !0;

    return !1;
  }

  return !1;
}

function index() {
  var a,
      s = this[0];

  if (s) {
    for (a = 0; null !== (s = s.previousSibling);) 1 === s.nodeType && (a += 1);

    return a;
  }
}

function eq(a) {
  if (void 0 === a) return this;
  var e = this.length;
  if (a > e - 1) return $([]);

  if (0 > a) {
    var t = e + a;
    return $(0 > t ? [] : [this[t]]);
  }

  return $([this[a]]);
}

function append() {
  for (var l, n = getDocument(), t = 0; t < arguments.length; t += 1) {
    l = 0 > t || arguments.length <= t ? void 0 : arguments[t];

    for (var o = 0; o < this.length; o += 1) if ("string" == typeof l) {
      var d = n.createElement("div");

      for (d.innerHTML = l; d.firstChild;) this[o].appendChild(d.firstChild);
    } else if (l instanceof Dom7) for (var a = 0; a < l.length; a += 1) this[o].appendChild(l[a]);else this[o].appendChild(l);
  }

  return this;
}

function prepend(r) {
  var e,
      l,
      n = getDocument();

  for (e = 0; e < this.length; e += 1) if ("string" == typeof r) {
    var s = n.createElement("div");

    for (s.innerHTML = r, l = s.childNodes.length - 1; 0 <= l; l -= 1) this[e].insertBefore(s.childNodes[l], this[e].childNodes[0]);
  } else if (r instanceof Dom7) for (l = 0; l < r.length; l += 1) this[e].insertBefore(r[l], this[e].childNodes[0]);else this[e].insertBefore(r, this[e].childNodes[0]);

  return this;
}

function next(a) {
  return 0 < this.length ? a ? this[0].nextElementSibling && $(this[0].nextElementSibling).is(a) ? $([this[0].nextElementSibling]) : $([]) : this[0].nextElementSibling ? $([this[0].nextElementSibling]) : $([]) : $([]);
}

function nextAll(a) {
  var e = [],
      t = this[0];
  if (!t) return $([]);

  for (; t.nextElementSibling;) {
    var r = t.nextElementSibling;
    a ? $(r).is(a) && e.push(r) : e.push(r), t = r;
  }

  return $(e);
}

function prev(a) {
  if (0 < this.length) {
    var e = this[0];
    return a ? e.previousElementSibling && $(e.previousElementSibling).is(a) ? $([e.previousElementSibling]) : $([]) : e.previousElementSibling ? $([e.previousElementSibling]) : $([]);
  }

  return $([]);
}

function prevAll(a) {
  var e = [],
      t = this[0];
  if (!t) return $([]);

  for (; t.previousElementSibling;) {
    var r = t.previousElementSibling;
    a ? $(r).is(a) && e.push(r) : e.push(r), t = r;
  }

  return $(e);
}

function parent(a) {
  for (var e = [], t = 0; t < this.length; t += 1) null !== this[t].parentNode && (a ? $(this[t].parentNode).is(a) && e.push(this[t].parentNode) : e.push(this[t].parentNode));

  return $(e);
}

function parents(a) {
  for (var e = [], t = 0; t < this.length; t += 1) for (var r = this[t].parentNode; r;) a ? $(r).is(a) && e.push(r) : e.push(r), r = r.parentNode;

  return $(e);
}

function closest(a) {
  var e = this;
  return void 0 === a ? $([]) : (e.is(a) || (e = e.parents(a).eq(0)), e);
}

function find(r) {
  for (var e = [], t = 0; t < this.length; t += 1) for (var l = this[t].querySelectorAll(r), s = 0; s < l.length; s += 1) e.push(l[s]);

  return $(e);
}

function children(r) {
  for (var e = [], t = 0; t < this.length; t += 1) for (var l = this[t].children, s = 0; s < l.length; s += 1) r && !$(l[s]).is(r) || e.push(l[s]);

  return $(e);
}

function remove() {
  for (var a = 0; a < this.length; a += 1) this[a].parentNode && this[a].parentNode.removeChild(this[a]);

  return this;
}

$.fn = Dom7.prototype;
var support,
    device,
    browser,
    Methods = {
  addClass: addClass,
  removeClass: removeClass,
  hasClass: hasClass,
  toggleClass: toggleClass,
  attr: attr,
  removeAttr: removeAttr,
  transform: transform,
  transition: transition,
  on: on,
  off: off,
  trigger: trigger,
  transitionEnd: transitionEnd,
  outerWidth: outerWidth,
  outerHeight: outerHeight,
  styles: styles,
  offset: offset,
  css: css,
  each: each,
  html: html,
  text: text,
  is: is,
  index: index,
  eq: eq,
  append: append,
  prepend: prepend,
  next: next,
  nextAll: nextAll,
  prev: prev,
  prevAll: prevAll,
  parent: parent,
  parents: parents,
  closest: closest,
  find: find,
  children: children,
  filter: filter,
  remove: remove
};

function deleteProps(a) {
  var s = a;
  Object.keys(s).forEach(function (a) {
    try {
      s[a] = null;
    } catch (a) {}

    try {
      delete s[a];
    } catch (a) {}
  });
}

function nextTick(a, e) {
  return void 0 === e && (e = 0), setTimeout(a, e);
}

function now() {
  return Date.now();
}

function getTranslate(l, e) {
  void 0 === e && (e = "x");
  var o,
      d,
      p,
      c = getWindow(),
      r = c.getComputedStyle(l, null);
  return c.WebKitCSSMatrix ? (6 < (d = r.transform || r.webkitTransform).split(",").length && (d = d.split(", ").map(function (a) {
    return a.replace(",", ".");
  }).join(", ")), p = new c.WebKitCSSMatrix("none" === d ? "" : d)) : o = (p = r.MozTransform || r.OTransform || r.MsTransform || r.msTransform || r.transform || r.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === e && (d = c.WebKitCSSMatrix ? p.m41 : 16 === o.length ? parseFloat(o[12]) : parseFloat(o[4])), "y" === e && (d = c.WebKitCSSMatrix ? p.m42 : 16 === o.length ? parseFloat(o[13]) : parseFloat(o[5])), d || 0;
}

function isObject$1(a) {
  return "object" == typeof a && null !== a && a.constructor && a.constructor === Object;
}

function extend$1() {
  for (var l, d = Object(0 >= arguments.length ? void 0 : arguments[0]), e = 1; e < arguments.length; e += 1) if (l = 0 > e || arguments.length <= e ? void 0 : arguments[e], null != l) for (var p = Object.keys(Object(l)), s = 0, c = p.length; s < c; s += 1) {
    var r = p[s],
        n = Object.getOwnPropertyDescriptor(l, r);
    void 0 !== n && n.enumerable && (isObject$1(d[r]) && isObject$1(l[r]) ? extend$1(d[r], l[r]) : !isObject$1(d[r]) && isObject$1(l[r]) ? (d[r] = {}, extend$1(d[r], l[r])) : d[r] = l[r]);
  }

  return d;
}

function bindModuleMethods(a, e) {
  Object.keys(e).forEach(function (t) {
    isObject$1(e[t]) && Object.keys(e[t]).forEach(function (i) {
      "function" == typeof e[t][i] && (e[t][i] = e[t][i].bind(a));
    }), a[t] = e[t];
  });
}

function calcSupport() {
  var a = getWindow(),
      e = getDocument();
  return {
    touch: !!("ontouchstart" in a || a.DocumentTouch && e instanceof a.DocumentTouch),
    pointerEvents: !!a.PointerEvent && "maxTouchPoints" in a.navigator && 0 <= a.navigator.maxTouchPoints,
    observer: "MutationObserver" in a || "WebkitMutationObserver" in a,
    passiveListener: function () {
      var e = !1;

      try {
        var s = Object.defineProperty({}, "passive", {
          get: function () {
            e = !0;
          }
        });
        a.addEventListener("testPassiveListener", null, s);
      } catch (a) {}

      return e;
    }(),
    gestures: "ongesturestart" in a
  };
}

function getSupport() {
  return support || (support = calcSupport()), support;
}

function calcDevice(c) {
  var e = (void 0 === c ? {} : c).userAgent,
      t = getSupport(),
      i = getWindow(),
      s = i.navigator.platform,
      a = e || i.navigator.userAgent,
      r = {
    ios: !1,
    android: !1
  },
      n = i.screen.width,
      o = i.screen.height,
      l = a.match(/(Android);?[\s\/]+([\d.]+)?/),
      d = a.match(/(iPad).*OS\s([\d_]+)/),
      m = a.match(/(iPod)(.*OS\s([\d_]+))?/),
      p = !d && a.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
      u = "MacIntel" === s;
  return !d && u && t.touch && 0 <= ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(n + "x" + o) && ((d = a.match(/(Version)\/([\d.]+)/)) || (d = [0, 1, "13_0_0"]), u = !1), l && !("Win32" === s) && (r.os = "android", r.android = !0), (d || p || m) && (r.os = "ios", r.ios = !0), r;
}

function getDevice(a) {
  return void 0 === a && (a = {}), device || (device = calcDevice(a)), device;
}

function calcBrowser() {
  var a,
      s = getWindow();
  return {
    isEdge: !!s.navigator.userAgent.match(/Edge/g),
    isSafari: (a = s.navigator.userAgent.toLowerCase(), 0 <= a.indexOf("safari") && 0 > a.indexOf("chrome") && 0 > a.indexOf("android")),
    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(s.navigator.userAgent)
  };
}

function getBrowser() {
  return browser || (browser = calcBrowser()), browser;
}

Object.keys(Methods).forEach(function (a) {
  $.fn[a] = Methods[a];
});
var Resize = {
  name: "resize",
  create: function () {
    var a = this;
    extend$1(a, {
      resize: {
        resizeHandler: function () {
          a && !a.destroyed && a.initialized && (a.emit("beforeResize"), a.emit("resize"));
        },
        orientationChangeHandler: function () {
          a && !a.destroyed && a.initialized && a.emit("orientationchange");
        }
      }
    });
  },
  on: {
    init: function (a) {
      var e = getWindow();
      e.addEventListener("resize", a.resize.resizeHandler), e.addEventListener("orientationchange", a.resize.orientationChangeHandler);
    },
    destroy: function (a) {
      var e = getWindow();
      e.removeEventListener("resize", a.resize.resizeHandler), e.removeEventListener("orientationchange", a.resize.orientationChangeHandler);
    }
  }
},
    Observer = {
  attach: function (r, e) {
    void 0 === e && (e = {});
    var l = getWindow(),
        i = this,
        s = new (l.MutationObserver || l.WebkitMutationObserver)(function (a) {
      if (1 !== a.length) {
        var e = function () {
          i.emit("observerUpdate", a[0]);
        };

        l.requestAnimationFrame ? l.requestAnimationFrame(e) : l.setTimeout(e, 0);
      } else i.emit("observerUpdate", a[0]);
    });
    s.observe(r, {
      attributes: void 0 === e.attributes || e.attributes,
      childList: void 0 === e.childList || e.childList,
      characterData: void 0 === e.characterData || e.characterData
    }), i.observer.observers.push(s);
  },
  init: function () {
    if (this.support.observer && this.params.observer) {
      if (this.params.observeParents) for (var a = this.$el.parents(), e = 0; e < a.length; e += 1) this.observer.attach(a[e]);
      this.observer.attach(this.$el[0], {
        childList: this.params.observeSlideChildren
      }), this.observer.attach(this.$wrapperEl[0], {
        attributes: !1
      });
    }
  },
  destroy: function () {
    this.observer.observers.forEach(function (a) {
      a.disconnect();
    }), this.observer.observers = [];
  }
},
    Observer$1 = {
  name: "observer",
  params: {
    observer: !1,
    observeParents: !1,
    observeSlideChildren: !1
  },
  create: function () {
    bindModuleMethods(this, {
      observer: _extends(_extends({}, Observer), {}, {
        observers: []
      })
    });
  },
  on: {
    init: function (a) {
      a.observer.init();
    },
    destroy: function (a) {
      a.observer.destroy();
    }
  }
},
    modular = {
  useParams: function (a) {
    var e = this;
    e.modules && Object.keys(e.modules).forEach(function (t) {
      var i = e.modules[t];
      i.params && extend$1(a, i.params);
    });
  },
  useModules: function (r) {
    void 0 === r && (r = {});
    var l = this;
    l.modules && Object.keys(l.modules).forEach(function (e) {
      var t = l.modules[e],
          s = r[e] || {};
      t.on && l.on && Object.keys(t.on).forEach(function (a) {
        l.on(a, t.on[a]);
      }), t.create && t.create.bind(l)(s);
    });
  }
},
    eventsEmitter = {
  on: function (r, l, e) {
    var t = this;
    if ("function" != typeof l) return t;
    var s = e ? "unshift" : "push";
    return r.split(" ").forEach(function (a) {
      t.eventsListeners[a] || (t.eventsListeners[a] = []), t.eventsListeners[a][s](l);
    }), t;
  },
  once: function (l, e, t) {
    function o() {
      a.off(l, o), o.__emitterProxy && delete o.__emitterProxy;

      for (var t = arguments.length, s = Array(t), i = 0; i < t; i++) s[i] = arguments[i];

      e.apply(a, s);
    }

    var a = this;
    return "function" == typeof e ? (o.__emitterProxy = e, a.on(l, o, t)) : a;
  },
  onAny: function (a, e) {
    if ("function" != typeof a) return this;
    var t = e ? "unshift" : "push";
    return 0 > this.eventsAnyListeners.indexOf(a) && this.eventsAnyListeners[t](a), this;
  },
  offAny: function (a) {
    if (!this.eventsAnyListeners) return this;
    var e = this.eventsAnyListeners.indexOf(a);
    return 0 <= e && this.eventsAnyListeners.splice(e, 1), this;
  },
  off: function (a, r) {
    var t = this;
    return t.eventsListeners ? (a.split(" ").forEach(function (i) {
      void 0 === r ? t.eventsListeners[i] = [] : t.eventsListeners[i] && t.eventsListeners[i].forEach(function (e, s) {
        (e === r || e.__emitterProxy && e.__emitterProxy === r) && t.eventsListeners[i].splice(s, 1);
      });
    }), t) : t;
  },
  emit: function () {
    var l,
        d,
        p,
        c = this;
    if (!c.eventsListeners) return c;

    for (var s = arguments.length, a = Array(s), r = 0; r < s; r++) a[r] = arguments[r];

    "string" == typeof a[0] || Array.isArray(a[0]) ? (l = a[0], d = a.slice(1, a.length), p = c) : (l = a[0].events, d = a[0].data, p = a[0].context || c), d.unshift(p);
    var u = Array.isArray(l) ? l : l.split(" ");
    return u.forEach(function (t) {
      if (c.eventsAnyListeners && c.eventsAnyListeners.length && c.eventsAnyListeners.forEach(function (e) {
        e.apply(p, [t].concat(d));
      }), c.eventsListeners && c.eventsListeners[t]) {
        var s = [];
        c.eventsListeners[t].forEach(function (a) {
          s.push(a);
        }), s.forEach(function (a) {
          a.apply(p, d);
        });
      }
    }), c;
  }
};

function updateSize() {
  var a,
      s,
      r = this.$el;
  a = void 0 !== this.params.width && null !== this.params.width ? this.params.width : r[0].clientWidth, s = void 0 !== this.params.height && null !== this.params.width ? this.params.height : r[0].clientHeight, 0 === a && this.isHorizontal() || 0 === s && this.isVertical() || (a = a - parseInt(r.css("padding-left") || 0, 10) - parseInt(r.css("padding-right") || 0, 10), s = s - parseInt(r.css("padding-top") || 0, 10) - parseInt(r.css("padding-bottom") || 0, 10), Number.isNaN(a) && (a = 0), Number.isNaN(s) && (s = 0), extend$1(this, {
    width: a,
    height: s,
    size: this.isHorizontal() ? a : s
  }));
}

function updateSlides() {
  function de(a, e) {
    return !pe.cssMode || e !== n.length - 1;
  }

  var c = getWindow(),
      pe = this.params,
      e = this.$wrapperEl,
      t = this.size,
      s = this.rtlTranslate,
      a = this.wrongRTL,
      i = this.virtual && pe.virtual.enabled,
      r = i ? this.virtual.slides.length : this.slides.length,
      n = e.children("." + this.params.slideClass),
      l = i ? this.virtual.slides.length : n.length,
      o = [],
      d = [],
      p = [],
      u = pe.slidesOffsetBefore;
  "function" == typeof u && (u = pe.slidesOffsetBefore.call(this));
  var ce = pe.slidesOffsetAfter;
  "function" == typeof ce && (ce = pe.slidesOffsetAfter.call(this));
  var ue = this.snapGrid.length,
      m = this.snapGrid.length,
      g = pe.spaceBetween,
      me = -u,
      he = 0,
      ge = 0;

  if (void 0 !== t) {
    var ve, fe;
    "string" == typeof g && 0 <= g.indexOf("%") && (g = parseFloat(g.replace("%", "")) / 100 * t), this.virtualSize = -g, s ? n.css({
      marginLeft: "",
      marginTop: ""
    }) : n.css({
      marginRight: "",
      marginBottom: ""
    }), 1 < pe.slidesPerColumn && (ve = Math.floor(l / pe.slidesPerColumn) === l / this.params.slidesPerColumn ? l : Math.ceil(l / pe.slidesPerColumn) * pe.slidesPerColumn, "auto" !== pe.slidesPerView && "row" === pe.slidesPerColumnFill && (ve = Math.max(ve, pe.slidesPerView * pe.slidesPerColumn)));

    for (var we, be = pe.slidesPerColumn, S = ve / be, M = Math.floor(l / pe.slidesPerColumn), $ = 0; $ < l; $ += 1) {
      fe = 0;
      var ye = n.eq($);

      if (1 < pe.slidesPerColumn) {
        var z = void 0,
            Ee = void 0,
            xe = void 0;

        if ("row" === pe.slidesPerColumnFill && 1 < pe.slidesPerGroup) {
          var Te = Math.floor($ / (pe.slidesPerGroup * pe.slidesPerColumn)),
              D = $ - pe.slidesPerColumn * pe.slidesPerGroup * Te,
              O = 0 === Te ? pe.slidesPerGroup : Math.min(Math.ceil((l - Te * be * pe.slidesPerGroup) / be), pe.slidesPerGroup);
          z = (Ee = D - (xe = Math.floor(D / O)) * O + Te * pe.slidesPerGroup) + xe * ve / be, ye.css({
            "-webkit-box-ordinal-group": z,
            "-moz-box-ordinal-group": z,
            "-ms-flex-order": z,
            "-webkit-order": z,
            order: z
          });
        } else "column" === pe.slidesPerColumnFill ? (xe = $ - (Ee = Math.floor($ / be)) * be, (Ee > M || Ee === M && xe === be - 1) && (xe += 1) >= be && (xe = 0, Ee += 1)) : Ee = $ - (xe = Math.floor($ / S)) * S;

        ye.css("margin-" + (this.isHorizontal() ? "top" : "left"), 0 !== xe && pe.spaceBetween && pe.spaceBetween + "px");
      }

      if ("none" !== ye.css("display")) {
        if ("auto" === pe.slidesPerView) {
          var A = c.getComputedStyle(ye[0], null),
              N = ye[0].style.transform,
              G = ye[0].style.webkitTransform;
          if (N && (ye[0].style.transform = "none"), G && (ye[0].style.webkitTransform = "none"), pe.roundLengths) fe = this.isHorizontal() ? ye.outerWidth(!0) : ye.outerHeight(!0);else if (this.isHorizontal()) {
            var B = parseFloat(A.getPropertyValue("width") || 0),
                H = parseFloat(A.getPropertyValue("padding-left") || 0),
                W = parseFloat(A.getPropertyValue("padding-right") || 0),
                F = parseFloat(A.getPropertyValue("margin-left") || 0),
                X = parseFloat(A.getPropertyValue("margin-right") || 0),
                _ = A.getPropertyValue("box-sizing");

            if (_ && "border-box" === _) fe = B + F + X;else {
              var R = ye[0],
                  Y = R.clientWidth;
              fe = B + H + W + F + X + (R.offsetWidth - Y);
            }
          } else {
            var V = parseFloat(A.getPropertyValue("height") || 0),
                q = parseFloat(A.getPropertyValue("padding-top") || 0),
                j = parseFloat(A.getPropertyValue("padding-bottom") || 0),
                U = parseFloat(A.getPropertyValue("margin-top") || 0),
                K = parseFloat(A.getPropertyValue("margin-bottom") || 0),
                Z = A.getPropertyValue("box-sizing");
            if (Z && "border-box" === Z) fe = V + U + K;else {
              var J = ye[0],
                  Q = J.clientHeight;
              fe = V + q + j + U + K + (J.offsetHeight - Q);
            }
          }
          N && (ye[0].style.transform = N), G && (ye[0].style.webkitTransform = G), pe.roundLengths && (fe = Math.floor(fe));
        } else fe = (t - (pe.slidesPerView - 1) * g) / pe.slidesPerView, pe.roundLengths && (fe = Math.floor(fe)), n[$] && (this.isHorizontal() ? n[$].style.width = fe + "px" : n[$].style.height = fe + "px");

        n[$] && (n[$].swiperSlideSize = fe), p.push(fe), pe.centeredSlides ? (me = me + fe / 2 + he / 2 + g, 0 === he && 0 !== $ && (me = me - t / 2 - g), 0 === $ && (me = me - t / 2 - g), .001 > Math.abs(me) && (me = 0), pe.roundLengths && (me = Math.floor(me)), 0 == ge % pe.slidesPerGroup && o.push(me), d.push(me)) : (pe.roundLengths && (me = Math.floor(me)), 0 == (ge - Math.min(this.params.slidesPerGroupSkip, ge)) % this.params.slidesPerGroup && o.push(me), d.push(me), me = me + fe + g), this.virtualSize += fe + g, he = fe, ge += 1;
      }
    }

    if (this.virtualSize = Math.max(this.virtualSize, t) + ce, s && a && ("slide" === pe.effect || "coverflow" === pe.effect) && e.css({
      width: this.virtualSize + pe.spaceBetween + "px"
    }), pe.setWrapperSize && (this.isHorizontal() ? e.css({
      width: this.virtualSize + pe.spaceBetween + "px"
    }) : e.css({
      height: this.virtualSize + pe.spaceBetween + "px"
    })), 1 < pe.slidesPerColumn && (this.virtualSize = (fe + pe.spaceBetween) * ve, this.virtualSize = Math.ceil(this.virtualSize / pe.slidesPerColumn) - pe.spaceBetween, this.isHorizontal() ? e.css({
      width: this.virtualSize + pe.spaceBetween + "px"
    }) : e.css({
      height: this.virtualSize + pe.spaceBetween + "px"
    }), pe.centeredSlides)) {
      we = [];

      for (var ee, Ce = 0; Ce < o.length; Ce += 1) ee = o[Ce], pe.roundLengths && (ee = Math.floor(ee)), o[Ce] < this.virtualSize + o[0] && we.push(ee);

      o = we;
    }

    if (!pe.centeredSlides) {
      we = [];

      for (var Se, ze = 0; ze < o.length; ze += 1) Se = o[ze], pe.roundLengths && (Se = Math.floor(Se)), o[ze] <= this.virtualSize - t && we.push(Se);

      o = we, 1 < Math.floor(this.virtualSize - t) - Math.floor(o[o.length - 1]) && o.push(this.virtualSize - t);
    }

    if (0 === o.length && (o = [0]), 0 !== pe.spaceBetween && (this.isHorizontal() ? s ? n.filter(de).css({
      marginLeft: g + "px"
    }) : n.filter(de).css({
      marginRight: g + "px"
    }) : n.filter(de).css({
      marginBottom: g + "px"
    })), pe.centeredSlides && pe.centeredSlidesBounds) {
      var Pe = 0;
      p.forEach(function (a) {
        Pe += a + (pe.spaceBetween ? pe.spaceBetween : 0);
      });
      var ke = (Pe -= pe.spaceBetween) - t;
      o = o.map(function (a) {
        return 0 > a ? -u : a > ke ? ke + ce : a;
      });
    }

    if (pe.centerInsufficientSlides) {
      var ne = 0;

      if (p.forEach(function (a) {
        ne += a + (pe.spaceBetween ? pe.spaceBetween : 0);
      }), (ne -= pe.spaceBetween) < t) {
        var $e = (t - ne) / 2;
        o.forEach(function (a, e) {
          o[e] = a - $e;
        }), d.forEach(function (a, e) {
          d[e] = a + $e;
        });
      }
    }

    extend$1(this, {
      slides: n,
      snapGrid: o,
      slidesGrid: d,
      slidesSizesGrid: p
    }), l !== r && this.emit("slidesLengthChange"), o.length !== ue && (this.params.watchOverflow && this.checkOverflow(), this.emit("snapGridLengthChange")), d.length !== m && this.emit("slidesGridLengthChange"), (pe.watchSlidesProgress || pe.watchSlidesVisibility) && this.updateSlidesOffset();
  }
}

function updateAutoHeight(l) {
  var e,
      n = [],
      i = 0;
  if (!("number" == typeof l ? this.setTransition(l) : !0 === l && this.setTransition(this.params.speed), "auto" !== this.params.slidesPerView && 1 < this.params.slidesPerView)) n.push(this.slides.eq(this.activeIndex)[0]);else if (this.params.centeredSlides) this.visibleSlides.each(function (a) {
    n.push(a);
  });else for (e = 0; e < Math.ceil(this.params.slidesPerView); e += 1) {
    var o = this.activeIndex + e;
    if (o > this.slides.length) break;
    n.push(this.slides.eq(o)[0]);
  }

  for (e = 0; e < n.length; e += 1) if (void 0 !== n[e]) {
    var a = n[e].offsetHeight;
    i = a > i ? a : i;
  }

  i && this.$wrapperEl.css("height", i + "px");
}

function updateSlidesOffset() {
  for (var a = this.slides, e = 0; e < a.length; e += 1) a[e].swiperSlideOffset = this.isHorizontal() ? a[e].offsetLeft : a[e].offsetTop;
}

function updateSlidesProgress(p) {
  void 0 === p && (p = this && this.translate || 0);
  var c = this.params,
      t = this.slides,
      i = this.rtlTranslate;

  if (0 !== t.length) {
    void 0 === t[0].swiperSlideOffset && this.updateSlidesOffset();
    var s = -p;
    i && (s = p), t.removeClass(c.slideVisibleClass), this.visibleSlidesIndexes = [], this.visibleSlides = [];

    for (var u = 0; u < t.length; u += 1) {
      var m = t[u],
          n = (s + (c.centeredSlides ? this.minTranslate() : 0) - m.swiperSlideOffset) / (m.swiperSlideSize + c.spaceBetween);

      if (c.watchSlidesVisibility || c.centeredSlides && c.autoHeight) {
        var o = -(s - m.swiperSlideOffset),
            l = o + this.slidesSizesGrid[u];
        (0 <= o && o < this.size - 1 || 1 < l && l <= this.size || 0 >= o && l >= this.size) && (this.visibleSlides.push(m), this.visibleSlidesIndexes.push(u), t.eq(u).addClass(c.slideVisibleClass));
      }

      m.progress = i ? -n : n;
    }

    this.visibleSlides = $(this.visibleSlides);
  }
}

function updateProgress(d) {
  if (void 0 === d) {
    var p = this.rtlTranslate ? -1 : 1;
    d = this && this.translate && this.translate * p || 0;
  }

  var t = this.params,
      i = this.maxTranslate() - this.minTranslate(),
      s = this.progress,
      c = this.isBeginning,
      u = this.isEnd,
      m = c,
      o = u;
  0 == i ? (s = 0, c = !0, u = !0) : (c = 0 >= (s = (d - this.minTranslate()) / i), u = 1 <= s), extend$1(this, {
    progress: s,
    isBeginning: c,
    isEnd: u
  }), (t.watchSlidesProgress || t.watchSlidesVisibility || t.centeredSlides && t.autoHeight) && this.updateSlidesProgress(d), c && !m && this.emit("reachBeginning toEdge"), u && !o && this.emit("reachEnd toEdge"), (m && !c || o && !u) && this.emit("fromEdge"), this.emit("progress", s);
}

function updateSlidesClasses() {
  var d,
      p = this.slides,
      t = this.params,
      i = this.$wrapperEl,
      s = this.activeIndex,
      a = this.realIndex,
      r = this.virtual && t.virtual.enabled;
  p.removeClass(t.slideActiveClass + " " + t.slideNextClass + " " + t.slidePrevClass + " " + t.slideDuplicateActiveClass + " " + t.slideDuplicateNextClass + " " + t.slideDuplicatePrevClass), (d = r ? this.$wrapperEl.find("." + t.slideClass + '[data-swiper-slide-index="' + s + '"]') : p.eq(s)).addClass(t.slideActiveClass), t.loop && (d.hasClass(t.slideDuplicateClass) ? i.children("." + t.slideClass + ":not(." + t.slideDuplicateClass + ')[data-swiper-slide-index="' + a + '"]').addClass(t.slideDuplicateActiveClass) : i.children("." + t.slideClass + "." + t.slideDuplicateClass + '[data-swiper-slide-index="' + a + '"]').addClass(t.slideDuplicateActiveClass));
  var n = d.nextAll("." + t.slideClass).eq(0).addClass(t.slideNextClass);
  t.loop && 0 === n.length && (n = p.eq(0)).addClass(t.slideNextClass);
  var c = d.prevAll("." + t.slideClass).eq(0).addClass(t.slidePrevClass);
  t.loop && 0 === c.length && (c = p.eq(-1)).addClass(t.slidePrevClass), t.loop && (n.hasClass(t.slideDuplicateClass) ? i.children("." + t.slideClass + ":not(." + t.slideDuplicateClass + ')[data-swiper-slide-index="' + n.attr("data-swiper-slide-index") + '"]').addClass(t.slideDuplicateNextClass) : i.children("." + t.slideClass + "." + t.slideDuplicateClass + '[data-swiper-slide-index="' + n.attr("data-swiper-slide-index") + '"]').addClass(t.slideDuplicateNextClass), c.hasClass(t.slideDuplicateClass) ? i.children("." + t.slideClass + ":not(." + t.slideDuplicateClass + ')[data-swiper-slide-index="' + c.attr("data-swiper-slide-index") + '"]').addClass(t.slideDuplicatePrevClass) : i.children("." + t.slideClass + "." + t.slideDuplicateClass + '[data-swiper-slide-index="' + c.attr("data-swiper-slide-index") + '"]').addClass(t.slideDuplicatePrevClass)), this.emitSlidesClasses();
}

function updateActiveIndex(c) {
  var e,
      m = this.rtlTranslate ? this.translate : -this.translate,
      i = this.slidesGrid,
      s = this.snapGrid,
      a = this.params,
      r = this.activeIndex,
      n = this.realIndex,
      o = this.snapIndex,
      l = c;

  if (void 0 === l) {
    for (var g = 0; g < i.length; g += 1) void 0 === i[g + 1] ? m >= i[g] && (l = g) : m >= i[g] && m < i[g + 1] - (i[g + 1] - i[g]) / 2 ? l = g : m >= i[g] && m < i[g + 1] && (l = g + 1);

    a.normalizeSlideIndex && (0 > l || void 0 === l) && (l = 0);
  }

  if (0 <= s.indexOf(m)) e = s.indexOf(m);else {
    var v = Math.min(a.slidesPerGroupSkip, l);
    e = v + Math.floor((l - v) / a.slidesPerGroup);
  }

  if (e >= s.length && (e = s.length - 1), l !== r) {
    var p = parseInt(this.slides.eq(l).attr("data-swiper-slide-index") || l, 10);
    extend$1(this, {
      snapIndex: e,
      realIndex: p,
      previousIndex: r,
      activeIndex: l
    }), this.emit("activeIndexChange"), this.emit("snapIndexChange"), n !== p && this.emit("realIndexChange"), (this.initialized || this.params.runCallbacksOnInit) && this.emit("slideChange");
  } else e !== o && (this.snapIndex = e, this.emit("snapIndexChange"));
}

function updateClickedSlide(r) {
  var e = this.params,
      t = $(r.target).closest("." + e.slideClass)[0],
      i = !1;
  if (t) for (var l = 0; l < this.slides.length; l += 1) this.slides[l] === t && (i = !0);
  return t && i ? void (this.clickedSlide = t, this.clickedIndex = this.virtual && this.params.virtual.enabled ? parseInt($(t).attr("data-swiper-slide-index"), 10) : $(t).index(), e.slideToClickedSlide && void 0 !== this.clickedIndex && this.clickedIndex !== this.activeIndex && this.slideToClickedSlide()) : (this.clickedSlide = void 0, void (this.clickedIndex = void 0));
}

var update = {
  updateSize: updateSize,
  updateSlides: updateSlides,
  updateAutoHeight: updateAutoHeight,
  updateSlidesOffset: updateSlidesOffset,
  updateSlidesProgress: updateSlidesProgress,
  updateProgress: updateProgress,
  updateSlidesClasses: updateSlidesClasses,
  updateActiveIndex: updateActiveIndex,
  updateClickedSlide: updateClickedSlide
};

function getSwiperTranslate(l) {
  void 0 === l && (l = this.isHorizontal() ? "x" : "y");
  var n = this.params,
      t = this.rtlTranslate,
      i = this.translate,
      s = this.$wrapperEl;
  if (n.virtualTranslate) return t ? -i : i;
  if (n.cssMode) return i;
  var a = getTranslate(s[0], l);
  return t && (a = -a), a || 0;
}

function setTranslate(p, e) {
  var t = this.rtlTranslate,
      i = this.params,
      s = this.$wrapperEl,
      a = this.wrapperEl,
      r = this.progress,
      n = 0,
      c = 0;
  this.isHorizontal() ? n = t ? -p : p : c = p, i.roundLengths && (n = Math.floor(n), c = Math.floor(c)), i.cssMode ? a[this.isHorizontal() ? "scrollLeft" : "scrollTop"] = this.isHorizontal() ? -n : -c : i.virtualTranslate || s.transform("translate3d(" + n + "px, " + c + "px, 0px)"), this.previousTranslate = this.translate, this.translate = this.isHorizontal() ? n : c;
  var u = this.maxTranslate() - this.minTranslate();
  (0 == u ? 0 : (p - this.minTranslate()) / u) !== r && this.updateProgress(p), this.emit("setTranslate", this.translate, e);
}

function minTranslate() {
  return -this.snapGrid[0];
}

function maxTranslate() {
  return -this.snapGrid[this.snapGrid.length - 1];
}

function translateTo(c, m, g, v, f) {
  void 0 === c && (c = 0), void 0 === m && (m = this.params.speed), void 0 === g && (g = !0), void 0 === v && (v = !0);
  var a = this,
      r = a.params,
      n = a.wrapperEl;
  if (a.animating && r.preventInteractionOnTransition) return !1;
  var o,
      w = a.minTranslate(),
      d = a.maxTranslate();

  if (o = v && c > w ? w : v && c < d ? d : c, a.updateProgress(o), r.cssMode) {
    var h,
        b = a.isHorizontal();
    return 0 === m ? n[b ? "scrollLeft" : "scrollTop"] = -o : n.scrollTo ? n.scrollTo(((h = {})[b ? "left" : "top"] = -o, h.behavior = "smooth", h)) : n[b ? "scrollLeft" : "scrollTop"] = -o, !0;
  }

  return 0 === m ? (a.setTransition(0), a.setTranslate(o), g && (a.emit("beforeTransitionStart", m, f), a.emit("transitionEnd"))) : (a.setTransition(m), a.setTranslate(o), g && (a.emit("beforeTransitionStart", m, f), a.emit("transitionStart")), a.animating || (a.animating = !0, a.onTranslateToWrapperTransitionEnd || (a.onTranslateToWrapperTransitionEnd = function (t) {
    a && !a.destroyed && t.target === this && (a.$wrapperEl[0].removeEventListener("transitionend", a.onTranslateToWrapperTransitionEnd), a.$wrapperEl[0].removeEventListener("webkitTransitionEnd", a.onTranslateToWrapperTransitionEnd), a.onTranslateToWrapperTransitionEnd = null, delete a.onTranslateToWrapperTransitionEnd, g && a.emit("transitionEnd"));
  }), a.$wrapperEl[0].addEventListener("transitionend", a.onTranslateToWrapperTransitionEnd), a.$wrapperEl[0].addEventListener("webkitTransitionEnd", a.onTranslateToWrapperTransitionEnd))), !0;
}

var translate = {
  getTranslate: getSwiperTranslate,
  setTranslate: setTranslate,
  minTranslate: minTranslate,
  maxTranslate: maxTranslate,
  translateTo: translateTo
};

function setTransition(a, e) {
  this.params.cssMode || this.$wrapperEl.transition(a), this.emit("setTransition", a, e);
}

function transitionStart(l, n) {
  void 0 === l && (l = !0);
  var t = this.activeIndex,
      i = this.params,
      s = this.previousIndex;

  if (!i.cssMode) {
    i.autoHeight && this.updateAutoHeight();
    var a = n;

    if (a || (a = t > s ? "next" : t < s ? "prev" : "reset"), this.emit("transitionStart"), l && t !== s) {
      if ("reset" === a) return void this.emit("slideResetTransitionStart");
      this.emit("slideChangeTransitionStart"), "next" === a ? this.emit("slideNextTransitionStart") : this.emit("slidePrevTransitionStart");
    }
  }
}

function transitionEnd$1(l, n) {
  void 0 === l && (l = !0);
  var t = this.activeIndex,
      i = this.previousIndex,
      s = this.params;

  if (this.animating = !1, !s.cssMode) {
    this.setTransition(0);
    var a = n;

    if (a || (a = t > i ? "next" : t < i ? "prev" : "reset"), this.emit("transitionEnd"), l && t !== i) {
      if ("reset" === a) return void this.emit("slideResetTransitionEnd");
      this.emit("slideChangeTransitionEnd"), "next" === a ? this.emit("slideNextTransitionEnd") : this.emit("slidePrevTransitionEnd");
    }
  }
}

var transition$1 = {
  setTransition: setTransition,
  transitionStart: transitionStart,
  transitionEnd: transitionEnd$1
};

function slideTo(E, T, C, S) {
  if (void 0 === E && (E = 0), void 0 === T && (T = this.params.speed), void 0 === C && (C = !0), "number" != typeof E && "string" != typeof E) throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. [" + typeof E + "] given.");

  if ("string" == typeof E) {
    var s = parseInt(E, 10);
    if (!isFinite(s)) throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. [" + E + "] given.");
    E = s;
  }

  var a = this,
      r = E;
  0 > r && (r = 0);
  var z = a.params,
      o = a.snapGrid,
      l = a.slidesGrid,
      d = a.previousIndex,
      h = a.activeIndex,
      p = a.rtlTranslate,
      u = a.wrapperEl;
  if (a.animating && z.preventInteractionOnTransition) return !1;
  var c = Math.min(a.params.slidesPerGroupSkip, r),
      v = c + Math.floor((r - c) / a.params.slidesPerGroup);
  v >= o.length && (v = o.length - 1), (h || z.initialSlide || 0) === (d || 0) && C && a.emit("beforeSlideChangeStart");
  var P,
      k = -o[v];
  if (a.updateProgress(k), z.normalizeSlideIndex) for (var g = 0; g < l.length; g += 1) -Math.floor(100 * k) >= Math.floor(100 * l[g]) && (r = g);

  if (a.initialized && r !== h) {
    if (!a.allowSlideNext && k < a.translate && k < a.minTranslate()) return !1;
    if (!a.allowSlidePrev && k > a.translate && k > a.maxTranslate() && (h || 0) !== r) return !1;
  }

  if (P = r > h ? "next" : r < h ? "prev" : "reset", p && -k === a.translate || !p && k === a.translate) return a.updateActiveIndex(r), z.autoHeight && a.updateAutoHeight(), a.updateSlidesClasses(), "slide" !== z.effect && a.setTranslate(k), "reset" !== P && (a.transitionStart(C, P), a.transitionEnd(C, P)), !1;

  if (z.cssMode) {
    var $,
        M = a.isHorizontal(),
        y = -k;
    return (p && (y = u.scrollWidth - u.offsetWidth - y), 0 === T) ? u[M ? "scrollLeft" : "scrollTop"] = y : u.scrollTo ? u.scrollTo((($ = {})[M ? "left" : "top"] = y, $.behavior = "smooth", $)) : u[M ? "scrollLeft" : "scrollTop"] = y, !0;
  }

  return 0 === T ? (a.setTransition(0), a.setTranslate(k), a.updateActiveIndex(r), a.updateSlidesClasses(), a.emit("beforeTransitionStart", T, S), a.transitionStart(C, P), a.transitionEnd(C, P)) : (a.setTransition(T), a.setTranslate(k), a.updateActiveIndex(r), a.updateSlidesClasses(), a.emit("beforeTransitionStart", T, S), a.transitionStart(C, P), a.animating || (a.animating = !0, a.onSlideToWrapperTransitionEnd || (a.onSlideToWrapperTransitionEnd = function (t) {
    a && !a.destroyed && t.target === this && (a.$wrapperEl[0].removeEventListener("transitionend", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].removeEventListener("webkitTransitionEnd", a.onSlideToWrapperTransitionEnd), a.onSlideToWrapperTransitionEnd = null, delete a.onSlideToWrapperTransitionEnd, a.transitionEnd(C, P));
  }), a.$wrapperEl[0].addEventListener("transitionend", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].addEventListener("webkitTransitionEnd", a.onSlideToWrapperTransitionEnd))), !0;
}

function slideToLoop(r, l, n, o) {
  void 0 === r && (r = 0), void 0 === l && (l = this.params.speed), void 0 === n && (n = !0);
  var s = r;
  return this.params.loop && (s += this.loopedSlides), this.slideTo(s, l, n, o);
}

function slideNext(l, n, o) {
  void 0 === l && (l = this.params.speed), void 0 === n && (n = !0);
  var i = this.params,
      s = this.animating,
      a = this.activeIndex < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup;

  if (i.loop) {
    if (s && i.loopPreventsSlide) return !1;
    this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
  }

  return this.slideTo(this.activeIndex + a, l, n, o);
}

function slidePrev(c, m, g) {
  function i(a) {
    return 0 > a ? -Math.floor(Math.abs(a)) : Math.floor(a);
  }

  void 0 === c && (c = this.params.speed), void 0 === m && (m = !0);
  var l = this.params,
      s = this.animating,
      a = this.snapGrid,
      r = this.slidesGrid,
      n = this.rtlTranslate;

  if (l.loop) {
    if (s && l.loopPreventsSlide) return !1;
    this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
  }

  var o,
      v = i(n ? this.translate : -this.translate),
      h = a.map(function (a) {
    return i(a);
  }),
      p = (a[h.indexOf(v)], a[h.indexOf(v) - 1]);
  return void 0 === p && l.cssMode && a.forEach(function (a) {
    !p && v >= a && (p = a);
  }), void 0 !== p && 0 > (o = r.indexOf(p)) && (o = this.activeIndex - 1), this.slideTo(o, c, m, g);
}

function slideReset(a, s, r) {
  return void 0 === a && (a = this.params.speed), void 0 === s && (s = !0), this.slideTo(this.activeIndex, a, s, r);
}

function slideToClosest(p, c, u, i) {
  void 0 === p && (p = this.params.speed), void 0 === c && (c = !0), void 0 === i && (i = .5);
  var m = this.activeIndex,
      h = Math.min(this.params.slidesPerGroupSkip, m),
      r = h + Math.floor((m - h) / this.params.slidesPerGroup),
      n = this.rtlTranslate ? this.translate : -this.translate;

  if (n >= this.snapGrid[r]) {
    var o = this.snapGrid[r];
    n - o > (this.snapGrid[r + 1] - o) * i && (m += this.params.slidesPerGroup);
  } else {
    var l = this.snapGrid[r - 1];
    n - l <= (this.snapGrid[r] - l) * i && (m -= this.params.slidesPerGroup);
  }

  return m = Math.max(m, 0), m = Math.min(m, this.slidesGrid.length - 1), this.slideTo(m, p, c, u);
}

function slideToClickedSlide() {
  var l,
      n = this,
      t = n.params,
      i = n.$wrapperEl,
      s = "auto" === t.slidesPerView ? n.slidesPerViewDynamic() : t.slidesPerView,
      a = n.clickedIndex;

  if (t.loop) {
    if (n.animating) return;
    l = parseInt($(n.clickedSlide).attr("data-swiper-slide-index"), 10), t.centeredSlides ? a < n.loopedSlides - s / 2 || a > n.slides.length - n.loopedSlides + s / 2 ? (n.loopFix(), a = i.children("." + t.slideClass + '[data-swiper-slide-index="' + l + '"]:not(.' + t.slideDuplicateClass + ")").eq(0).index(), nextTick(function () {
      n.slideTo(a);
    })) : n.slideTo(a) : a > n.slides.length - s ? (n.loopFix(), a = i.children("." + t.slideClass + '[data-swiper-slide-index="' + l + '"]:not(.' + t.slideDuplicateClass + ")").eq(0).index(), nextTick(function () {
      n.slideTo(a);
    })) : n.slideTo(a);
  } else n.slideTo(a);
}

var slide = {
  slideTo: slideTo,
  slideToLoop: slideToLoop,
  slideNext: slideNext,
  slidePrev: slidePrev,
  slideReset: slideReset,
  slideToClosest: slideToClosest,
  slideToClickedSlide: slideToClickedSlide
};

function loopCreate() {
  var c = this,
      e = getDocument(),
      t = c.params,
      i = c.$wrapperEl;
  i.children("." + t.slideClass + "." + t.slideDuplicateClass).remove();
  var u = i.children("." + t.slideClass);

  if (t.loopFillGroupWithBlank) {
    var s = t.slidesPerGroup - u.length % t.slidesPerGroup;

    if (s !== t.slidesPerGroup) {
      for (var r, m = 0; m < s; m += 1) r = $(e.createElement("div")).addClass(t.slideClass + " " + t.slideBlankClass), i.append(r);

      u = i.children("." + t.slideClass);
    }
  }

  "auto" !== t.slidesPerView || t.loopedSlides || (t.loopedSlides = u.length), c.loopedSlides = Math.ceil(parseFloat(t.loopedSlides || t.slidesPerView, 10)), c.loopedSlides += t.loopAdditionalSlides, c.loopedSlides > u.length && (c.loopedSlides = u.length);
  var g = [],
      l = [];
  u.each(function (e, a) {
    var t = $(e);
    a < c.loopedSlides && l.push(e), a < u.length && a >= u.length - c.loopedSlides && g.push(e), t.attr("data-swiper-slide-index", a);
  });

  for (var d = 0; d < l.length; d += 1) i.append($(l[d].cloneNode(!0)).addClass(t.slideDuplicateClass));

  for (var v = g.length - 1; 0 <= v; v -= 1) i.prepend($(g[v].cloneNode(!0)).addClass(t.slideDuplicateClass));
}

function loopFix() {
  this.emit("beforeLoopFix");
  var d,
      p = this.activeIndex,
      t = this.slides,
      i = this.loopedSlides,
      s = this.allowSlidePrev,
      a = this.allowSlideNext,
      r = this.snapGrid,
      n = this.rtlTranslate;
  this.allowSlidePrev = !0, this.allowSlideNext = !0;
  var o = -r[p] - this.getTranslate();
  p < i ? (d = t.length - 3 * i + p, d += i, this.slideTo(d, 0, !1, !0) && 0 !== o && this.setTranslate((n ? -this.translate : this.translate) - o)) : p >= t.length - i && (d = -t.length + p + i, d += i, this.slideTo(d, 0, !1, !0) && 0 !== o && this.setTranslate((n ? -this.translate : this.translate) - o)), this.allowSlidePrev = s, this.allowSlideNext = a, this.emit("loopFix");
}

function loopDestroy() {
  var a = this.$wrapperEl,
      e = this.params,
      t = this.slides;
  a.children("." + e.slideClass + "." + e.slideDuplicateClass + ",." + e.slideClass + "." + e.slideBlankClass).remove(), t.removeAttr("data-swiper-slide-index");
}

var loop = {
  loopCreate: loopCreate,
  loopFix: loopFix,
  loopDestroy: loopDestroy
};

function setGrabCursor(a) {
  if (!(this.support.touch || !this.params.simulateTouch || this.params.watchOverflow && this.isLocked || this.params.cssMode)) {
    var e = this.el;
    e.style.cursor = "move", e.style.cursor = a ? "-webkit-grabbing" : "-webkit-grab", e.style.cursor = a ? "-moz-grabbin" : "-moz-grab", e.style.cursor = a ? "grabbing" : "grab";
  }
}

function unsetGrabCursor() {
  this.support.touch || this.params.watchOverflow && this.isLocked || this.params.cssMode || (this.el.style.cursor = "");
}

var grabCursor = {
  setGrabCursor: setGrabCursor,
  unsetGrabCursor: unsetGrabCursor
};

function appendSlide(a) {
  var e = this.$wrapperEl,
      t = this.params;
  if (t.loop && this.loopDestroy(), "object" == typeof a && "length" in a) for (var i = 0; i < a.length; i += 1) a[i] && e.append(a[i]);else e.append(a);
  t.loop && this.loopCreate(), t.observer && this.support.observer || this.update();
}

function prependSlide(l) {
  var e = this.params,
      t = this.$wrapperEl,
      i = this.activeIndex;
  e.loop && this.loopDestroy();
  var s = i + 1;

  if ("object" == typeof l && "length" in l) {
    for (var n = 0; n < l.length; n += 1) l[n] && t.prepend(l[n]);

    s = i + l.length;
  } else t.prepend(l);

  e.loop && this.loopCreate(), e.observer && this.support.observer || this.update(), this.slideTo(s, 0, !1);
}

function addSlide(c, e) {
  var t = this.$wrapperEl,
      i = this.params,
      s = this.activeIndex;
  i.loop && (s -= this.loopedSlides, this.loopDestroy(), this.slides = t.children("." + i.slideClass));
  var u = this.slides.length;
  if (0 >= c) this.prependSlide(e);else if (c >= u) this.appendSlide(e);else {
    for (var r, m = s > c ? s + 1 : s, g = [], o = u - 1; o >= c; o -= 1) r = this.slides.eq(o), r.remove(), g.unshift(r);

    if ("object" == typeof e && "length" in e) {
      for (var v = 0; v < e.length; v += 1) e[v] && t.append(e[v]);

      m = s > c ? s + e.length : s;
    } else t.append(e);

    for (var f = 0; f < g.length; f += 1) t.append(g[f]);

    i.loop && this.loopCreate(), i.observer && this.support.observer || this.update(), i.loop ? this.slideTo(m + this.loopedSlides, 0, !1) : this.slideTo(m, 0, !1);
  }
}

function removeSlide(l) {
  var e = this.params,
      t = this.$wrapperEl,
      i = this.activeIndex;
  e.loop && (i -= this.loopedSlides, this.loopDestroy(), this.slides = t.children("." + e.slideClass));
  var o,
      d = i;

  if ("object" == typeof l && "length" in l) {
    for (var p = 0; p < l.length; p += 1) o = l[p], this.slides[o] && this.slides.eq(o).remove(), o < d && (d -= 1);

    d = Math.max(d, 0);
  } else o = l, this.slides[o] && this.slides.eq(o).remove(), o < d && (d -= 1), d = Math.max(d, 0);

  e.loop && this.loopCreate(), e.observer && this.support.observer || this.update(), e.loop ? this.slideTo(d + this.loopedSlides, 0, !1) : this.slideTo(d, 0, !1);
}

function removeAllSlides() {
  for (var a = [], e = 0; e < this.slides.length; e += 1) a.push(e);

  this.removeSlide(a);
}

var manipulation = {
  appendSlide: appendSlide,
  prependSlide: prependSlide,
  addSlide: addSlide,
  removeSlide: removeSlide,
  removeAllSlides: removeAllSlides
};

function onTouchStart(m) {
  var e = getDocument(),
      t = getWindow(),
      i = this.touchEventsData,
      s = this.params,
      a = this.touches;

  if (!this.animating || !s.preventInteractionOnTransition) {
    var r = m;
    r.originalEvent && (r = r.originalEvent);
    var g = $(r.target);
    if (("wrapper" !== s.touchEventsTarget || g.closest(this.wrapperEl).length) && (i.isTouchEvent = "touchstart" === r.type, i.isTouchEvent || !("which" in r) || 3 !== r.which) && !(!i.isTouchEvent && "button" in r && 0 < r.button) && (!i.isTouched || !i.isMoved)) if (!!s.noSwipingClass && "" !== s.noSwipingClass && r.target && r.target.shadowRoot && m.path && m.path[0] && (g = $(m.path[0])), s.noSwiping && g.closest(s.noSwipingSelector ? s.noSwipingSelector : "." + s.noSwipingClass)[0]) this.allowClick = !0;else if (!s.swipeHandler || g.closest(s.swipeHandler)[0]) {
      a.currentX = "touchstart" === r.type ? r.targetTouches[0].pageX : r.pageX, a.currentY = "touchstart" === r.type ? r.targetTouches[0].pageY : r.pageY;
      var v = a.currentX,
          l = a.currentY,
          d = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection,
          h = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;

      if (!d || !(v <= h || v >= t.screen.width - h)) {
        if (extend$1(i, {
          isTouched: !0,
          isMoved: !1,
          allowTouchCallbacks: !0,
          isScrolling: void 0,
          startMoving: void 0
        }), a.startX = v, a.startY = l, i.touchStartTime = now(), this.allowClick = !0, this.updateSize(), this.swipeDirection = void 0, 0 < s.threshold && (i.allowThresholdMove = !1), "touchstart" !== r.type) {
          var p = !0;
          g.is(i.formElements) && (p = !1), e.activeElement && $(e.activeElement).is(i.formElements) && e.activeElement !== g[0] && e.activeElement.blur();
          var f = p && this.allowTouchMove && s.touchStartPreventDefault;
          (s.touchStartForcePreventDefault || f) && r.preventDefault();
        }

        this.emit("touchStart", r);
      }
    }
  }
}

function onTouchMove(m) {
  var e = getDocument(),
      t = this.touchEventsData,
      i = this.params,
      s = this.touches,
      a = this.rtlTranslate,
      r = m;
  if (!(r.originalEvent && (r = r.originalEvent), t.isTouched)) t.startMoving && t.isScrolling && this.emit("touchMoveOpposite", r);else if (!t.isTouchEvent || "touchmove" === r.type) {
    var g = "touchmove" === r.type && r.targetTouches && (r.targetTouches[0] || r.changedTouches[0]),
        o = "touchmove" === r.type ? g.pageX : r.pageX,
        l = "touchmove" === r.type ? g.pageY : r.pageY;
    if (r.preventedByNestedSwiper) return s.startX = o, void (s.startY = l);
    if (!this.allowTouchMove) return this.allowClick = !1, void (t.isTouched && (extend$1(s, {
      startX: o,
      startY: l,
      currentX: o,
      currentY: l
    }), t.touchStartTime = now()));
    if (t.isTouchEvent && i.touchReleaseOnEdges && !i.loop) if (this.isVertical()) {
      if (l < s.startY && this.translate <= this.maxTranslate() || l > s.startY && this.translate >= this.minTranslate()) return t.isTouched = !1, void (t.isMoved = !1);
    } else if (o < s.startX && this.translate <= this.maxTranslate() || o > s.startX && this.translate >= this.minTranslate()) return;
    if (t.isTouchEvent && e.activeElement && r.target === e.activeElement && $(r.target).is(t.formElements)) return t.isMoved = !0, void (this.allowClick = !1);

    if (t.allowTouchCallbacks && this.emit("touchMove", r), !(r.targetTouches && 1 < r.targetTouches.length)) {
      s.currentX = o, s.currentY = l;
      var d = s.currentX - s.startX,
          h = s.currentY - s.startY;

      if (!(this.params.threshold && Math.sqrt(Math.pow(d, 2) + Math.pow(h, 2)) < this.params.threshold)) {
        var p;
        if (void 0 === t.isScrolling && (this.isHorizontal() && s.currentY === s.startY || this.isVertical() && s.currentX === s.startX ? t.isScrolling = !1 : 25 <= d * d + h * h && (p = 180 * Math.atan2(Math.abs(h), Math.abs(d)) / Math.PI, t.isScrolling = this.isHorizontal() ? p > i.touchAngle : 90 - p > i.touchAngle)), t.isScrolling && this.emit("touchMoveOpposite", r), void 0 === t.startMoving && (s.currentX === s.startX && s.currentY === s.startY || (t.startMoving = !0)), t.isScrolling) t.isTouched = !1;else if (t.startMoving) {
          this.allowClick = !1, !i.cssMode && r.cancelable && r.preventDefault(), i.touchMoveStopPropagation && !i.nested && r.stopPropagation(), t.isMoved || (i.loop && this.loopFix(), t.startTranslate = this.getTranslate(), this.setTransition(0), this.animating && this.$wrapperEl.trigger("webkitTransitionEnd transitionend"), t.allowMomentumBounce = !1, !i.grabCursor || !0 !== this.allowSlideNext && !0 !== this.allowSlidePrev || this.setGrabCursor(!0), this.emit("sliderFirstMove", r)), this.emit("sliderMove", r), t.isMoved = !0;
          var w = this.isHorizontal() ? d : h;
          s.diff = w, w *= i.touchRatio, a && (w = -w), this.swipeDirection = 0 < w ? "prev" : "next", t.currentTranslate = w + t.startTranslate;
          var b = !0,
              y = i.resistanceRatio;

          if (i.touchReleaseOnEdges && (y = 0), 0 < w && t.currentTranslate > this.minTranslate() ? (b = !1, i.resistance && (t.currentTranslate = this.minTranslate() - 1 + Math.pow(-this.minTranslate() + t.startTranslate + w, y))) : 0 > w && t.currentTranslate < this.maxTranslate() && (b = !1, i.resistance && (t.currentTranslate = this.maxTranslate() + 1 - Math.pow(this.maxTranslate() - t.startTranslate - w, y))), b && (r.preventedByNestedSwiper = !0), !this.allowSlideNext && "next" === this.swipeDirection && t.currentTranslate < t.startTranslate && (t.currentTranslate = t.startTranslate), !this.allowSlidePrev && "prev" === this.swipeDirection && t.currentTranslate > t.startTranslate && (t.currentTranslate = t.startTranslate), 0 < i.threshold) {
            if (!(Math.abs(w) > i.threshold || t.allowThresholdMove)) return void (t.currentTranslate = t.startTranslate);
            if (!t.allowThresholdMove) return t.allowThresholdMove = !0, s.startX = s.currentX, s.startY = s.currentY, t.currentTranslate = t.startTranslate, void (s.diff = this.isHorizontal() ? s.currentX - s.startX : s.currentY - s.startY);
          }

          i.followFinger && !i.cssMode && ((i.freeMode || i.watchSlidesProgress || i.watchSlidesVisibility) && (this.updateActiveIndex(), this.updateSlidesClasses()), i.freeMode && (0 === t.velocities.length && t.velocities.push({
            position: s[this.isHorizontal() ? "startX" : "startY"],
            time: t.touchStartTime
          }), t.velocities.push({
            position: s[this.isHorizontal() ? "currentX" : "currentY"],
            time: now()
          })), this.updateProgress(t.currentTranslate), this.setTranslate(t.currentTranslate));
        }
      }
    }
  }
}

function onTouchEnd(A) {
  var e = this,
      t = e.touchEventsData,
      i = e.params,
      s = e.touches,
      a = e.rtlTranslate,
      r = e.$wrapperEl,
      n = e.slidesGrid,
      o = e.snapGrid,
      l = A;
  if (l.originalEvent && (l = l.originalEvent), t.allowTouchCallbacks && e.emit("touchEnd", l), t.allowTouchCallbacks = !1, !t.isTouched) return t.isMoved && i.grabCursor && e.setGrabCursor(!1), t.isMoved = !1, void (t.startMoving = !1);
  i.grabCursor && t.isMoved && t.isTouched && (!0 === e.allowSlideNext || !0 === e.allowSlidePrev) && e.setGrabCursor(!1);
  var O,
      G = now(),
      p = G - t.touchStartTime;
  if (e.allowClick && (e.updateClickedSlide(l), e.emit("tap click", l), 300 > p && 300 > G - t.lastClickTime && e.emit("doubleTap doubleClick", l)), t.lastClickTime = now(), nextTick(function () {
    e.destroyed || (e.allowClick = !0);
  }), !t.isTouched || !t.isMoved || !e.swipeDirection || 0 === s.diff || t.currentTranslate === t.startTranslate) return t.isTouched = !1, t.isMoved = !1, void (t.startMoving = !1);
  if (t.isTouched = !1, t.isMoved = !1, t.startMoving = !1, O = i.followFinger ? a ? e.translate : -e.translate : -t.currentTranslate, !i.cssMode) if (i.freeMode) {
    if (O < -e.minTranslate()) return void e.slideTo(e.activeIndex);
    if (O > -e.maxTranslate()) return void (e.slides.length < o.length ? e.slideTo(o.length - 1) : e.slideTo(e.slides.length - 1));

    if (i.freeModeMomentum) {
      if (1 < t.velocities.length) {
        var u = t.velocities.pop(),
            c = t.velocities.pop(),
            v = u.position - c.position,
            f = u.time - c.time;
        e.velocity = v / f, e.velocity /= 2, Math.abs(e.velocity) < i.freeModeMinimumVelocity && (e.velocity = 0), (150 < f || 300 < now() - u.time) && (e.velocity = 0);
      } else e.velocity = 0;

      e.velocity *= i.freeModeMomentumVelocityRatio, t.velocities.length = 0;
      var m = 1e3 * i.freeModeMomentumRatio,
          N = e.velocity * m,
          w = e.translate + N;
      a && (w = -w);
      var B,
          H,
          X = !1,
          Y = 20 * Math.abs(e.velocity) * i.freeModeMomentumBounceRatio;
      if (w < e.maxTranslate()) i.freeModeMomentumBounce ? (w + e.maxTranslate() < -Y && (w = e.maxTranslate() - Y), B = e.maxTranslate(), X = !0, t.allowMomentumBounce = !0) : w = e.maxTranslate(), i.loop && i.centeredSlides && (H = !0);else if (w > e.minTranslate()) i.freeModeMomentumBounce ? (w - e.minTranslate() > Y && (w = e.minTranslate() + Y), B = e.minTranslate(), X = !0, t.allowMomentumBounce = !0) : w = e.minTranslate(), i.loop && i.centeredSlides && (H = !0);else if (i.freeModeSticky) {
        for (var T, V = 0; V < o.length; V += 1) if (o[V] > -w) {
          T = V;
          break;
        }

        w = -(w = Math.abs(o[T] - w) < Math.abs(o[T - 1] - w) || "next" === e.swipeDirection ? o[T] : o[T - 1]);
      }
      if (H && e.once("transitionEnd", function () {
        e.loopFix();
      }), 0 !== e.velocity) {
        if (m = a ? Math.abs((-w - e.translate) / e.velocity) : Math.abs((w - e.translate) / e.velocity), i.freeModeSticky) {
          var R = Math.abs((a ? -w : w) - e.translate),
              M = e.slidesSizesGrid[e.activeIndex];
          m = R < M ? i.speed : R < 2 * M ? 1.5 * i.speed : 2.5 * i.speed;
        }
      } else if (i.freeModeSticky) return void e.slideToClosest();
      i.freeModeMomentumBounce && X ? (e.updateProgress(B), e.setTransition(m), e.setTranslate(w), e.transitionStart(!0, e.swipeDirection), e.animating = !0, r.transitionEnd(function () {
        e && !e.destroyed && t.allowMomentumBounce && (e.emit("momentumBounce"), e.setTransition(i.speed), setTimeout(function () {
          e.setTranslate(B), r.transitionEnd(function () {
            e && !e.destroyed && e.transitionEnd();
          });
        }, 0));
      })) : e.velocity ? (e.updateProgress(w), e.setTransition(m), e.setTranslate(w), e.transitionStart(!0, e.swipeDirection), e.animating || (e.animating = !0, r.transitionEnd(function () {
        e && !e.destroyed && e.transitionEnd();
      }))) : e.updateProgress(w), e.updateActiveIndex(), e.updateSlidesClasses();
    } else if (i.freeModeSticky) return void e.slideToClosest();

    (!i.freeModeMomentum || p >= i.longSwipesMs) && (e.updateProgress(), e.updateActiveIndex(), e.updateSlidesClasses());
  } else {
    for (var $, W = 0, q = e.slidesSizesGrid[0], F = 0; F < n.length; F += F < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) $ = F < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup, void 0 === n[F + $] ? O >= n[F] && (W = F, q = n[n.length - 1] - n[n.length - 2]) : O >= n[F] && O < n[F + $] && (W = F, q = n[F + $] - n[F]);

    var _ = (O - n[W]) / q,
        I = W < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;

    if (p > i.longSwipesMs) {
      if (!i.longSwipes) return void e.slideTo(e.activeIndex);
      "next" === e.swipeDirection && (_ >= i.longSwipesRatio ? e.slideTo(W + I) : e.slideTo(W)), "prev" === e.swipeDirection && (_ > 1 - i.longSwipesRatio ? e.slideTo(W + I) : e.slideTo(W));
    } else {
      if (!i.shortSwipes) return void e.slideTo(e.activeIndex);
      e.navigation && (l.target === e.navigation.nextEl || l.target === e.navigation.prevEl) ? l.target === e.navigation.nextEl ? e.slideTo(W + I) : e.slideTo(W) : ("next" === e.swipeDirection && e.slideTo(W + I), "prev" === e.swipeDirection && e.slideTo(W));
    }
  }
}

function onResize() {
  var r = this.params,
      e = this.el;

  if (!e || 0 !== e.offsetWidth) {
    r.breakpoints && this.setBreakpoint();
    var t = this.allowSlideNext,
        i = this.allowSlidePrev,
        s = this.snapGrid;
    this.allowSlideNext = !0, this.allowSlidePrev = !0, this.updateSize(), this.updateSlides(), this.updateSlidesClasses(), ("auto" === r.slidesPerView || 1 < r.slidesPerView) && this.isEnd && !this.isBeginning && !this.params.centeredSlides ? this.slideTo(this.slides.length - 1, 0, !1, !0) : this.slideTo(this.activeIndex, 0, !1, !0), this.autoplay && this.autoplay.running && this.autoplay.paused && this.autoplay.run(), this.allowSlidePrev = i, this.allowSlideNext = t, this.params.watchOverflow && s !== this.snapGrid && this.checkOverflow();
  }
}

function onClick(a) {
  this.allowClick || (this.params.preventClicks && a.preventDefault(), this.params.preventClicksPropagation && this.animating && (a.stopPropagation(), a.stopImmediatePropagation()));
}

function onScroll() {
  var a = this.wrapperEl,
      e = this.rtlTranslate;
  this.previousTranslate = this.translate, this.translate = this.isHorizontal() ? e ? a.scrollWidth - a.offsetWidth - a.scrollLeft : -a.scrollLeft : -a.scrollTop, -0 === this.translate && (this.translate = 0), this.updateActiveIndex(), this.updateSlidesClasses();
  var t = this.maxTranslate() - this.minTranslate();
  (0 == t ? 0 : (this.translate - this.minTranslate()) / t) !== this.progress && this.updateProgress(e ? -this.translate : this.translate), this.emit("setTranslate", this.translate, !1);
}

var dummyEventAttached = !1;

function dummyEventListener() {}

function attachEvents() {
  var d = getDocument(),
      e = this.params,
      t = this.touchEvents,
      i = this.el,
      s = this.wrapperEl,
      a = this.device,
      r = this.support;
  this.onTouchStart = onTouchStart.bind(this), this.onTouchMove = onTouchMove.bind(this), this.onTouchEnd = onTouchEnd.bind(this), e.cssMode && (this.onScroll = onScroll.bind(this)), this.onClick = onClick.bind(this);
  var n = !!e.nested;
  if (!r.touch && r.pointerEvents) i.addEventListener(t.start, this.onTouchStart, !1), d.addEventListener(t.move, this.onTouchMove, n), d.addEventListener(t.end, this.onTouchEnd, !1);else {
    if (r.touch) {
      var o = "touchstart" === t.start && r.passiveListener && e.passiveListeners && {
        passive: !0,
        capture: !1
      };
      i.addEventListener(t.start, this.onTouchStart, o), i.addEventListener(t.move, this.onTouchMove, r.passiveListener ? {
        passive: !1,
        capture: n
      } : n), i.addEventListener(t.end, this.onTouchEnd, o), t.cancel && i.addEventListener(t.cancel, this.onTouchEnd, o), dummyEventAttached || (d.addEventListener("touchstart", dummyEventListener), dummyEventAttached = !0);
    }

    (e.simulateTouch && !a.ios && !a.android || e.simulateTouch && !r.touch && a.ios) && (i.addEventListener("mousedown", this.onTouchStart, !1), d.addEventListener("mousemove", this.onTouchMove, n), d.addEventListener("mouseup", this.onTouchEnd, !1));
  }
  (e.preventClicks || e.preventClicksPropagation) && i.addEventListener("click", this.onClick, !0), e.cssMode && s.addEventListener("scroll", this.onScroll), e.updateOnWindowResize ? this.on(a.ios || a.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize, !0) : this.on("observerUpdate", onResize, !0);
}

function detachEvents() {
  var d = getDocument(),
      e = this.params,
      t = this.touchEvents,
      i = this.el,
      s = this.wrapperEl,
      a = this.device,
      r = this.support,
      n = !!e.nested;
  if (!r.touch && r.pointerEvents) i.removeEventListener(t.start, this.onTouchStart, !1), d.removeEventListener(t.move, this.onTouchMove, n), d.removeEventListener(t.end, this.onTouchEnd, !1);else {
    if (r.touch) {
      var o = "onTouchStart" === t.start && r.passiveListener && e.passiveListeners && {
        passive: !0,
        capture: !1
      };
      i.removeEventListener(t.start, this.onTouchStart, o), i.removeEventListener(t.move, this.onTouchMove, n), i.removeEventListener(t.end, this.onTouchEnd, o), t.cancel && i.removeEventListener(t.cancel, this.onTouchEnd, o);
    }

    (e.simulateTouch && !a.ios && !a.android || e.simulateTouch && !r.touch && a.ios) && (i.removeEventListener("mousedown", this.onTouchStart, !1), d.removeEventListener("mousemove", this.onTouchMove, n), d.removeEventListener("mouseup", this.onTouchEnd, !1));
  }
  (e.preventClicks || e.preventClicksPropagation) && i.removeEventListener("click", this.onClick, !0), e.cssMode && s.removeEventListener("scroll", this.onScroll), this.off(a.ios || a.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize);
}

var events = {
  attachEvents: attachEvents,
  detachEvents: detachEvents
};

function setBreakpoint() {
  var m = this.activeIndex,
      e = this.initialized,
      t = this.loopedSlides,
      i = void 0 === t ? 0 : t,
      s = this.params,
      a = this.$el,
      r = s.breakpoints;

  if (r && (!r || 0 !== Object.keys(r).length)) {
    var n = this.getBreakpoint(r);

    if (n && this.currentBreakpoint !== n) {
      var o = n in r ? r[n] : void 0;
      o && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function (a) {
        var e = o[a];
        void 0 !== e && (o[a] = "slidesPerView" !== a || "AUTO" !== e && "auto" !== e ? "slidesPerView" === a ? parseFloat(e) : parseInt(e, 10) : "auto");
      });
      var l = o || this.originalParams,
          d = 1 < s.slidesPerColumn,
          h = 1 < l.slidesPerColumn;
      d && !h ? (a.removeClass(s.containerModifierClass + "multirow " + s.containerModifierClass + "multirow-column"), this.emitContainerClasses()) : !d && h && (a.addClass(s.containerModifierClass + "multirow"), "column" === l.slidesPerColumnFill && a.addClass(s.containerModifierClass + "multirow-column"), this.emitContainerClasses());
      var p = l.direction && l.direction !== s.direction,
          u = s.loop && (l.slidesPerView !== s.slidesPerView || p);
      p && e && this.changeDirection(), extend$1(this.params, l), extend$1(this, {
        allowTouchMove: this.params.allowTouchMove,
        allowSlideNext: this.params.allowSlideNext,
        allowSlidePrev: this.params.allowSlidePrev
      }), this.currentBreakpoint = n, this.emit("_beforeBreakpoint", l), u && e && (this.loopDestroy(), this.loopCreate(), this.updateSlides(), this.slideTo(m - i + this.loopedSlides, 0, !1)), this.emit("breakpoint", l);
    }
  }
}

function getBreakpoints(l) {
  var o = getWindow();

  if (l) {
    var e = !1,
        t = Object.keys(l).map(function (a) {
      if ("string" == typeof a && 0 === a.indexOf("@")) {
        var e = parseFloat(a.substr(1));
        return {
          value: o.innerHeight * e,
          point: a
        };
      }

      return {
        value: a,
        point: a
      };
    });
    t.sort(function (a, e) {
      return parseInt(a.value, 10) - parseInt(e.value, 10);
    });

    for (var s = 0; s < t.length; s += 1) {
      var d = t[s],
          r = d.point;
      d.value <= o.innerWidth && (e = r);
    }

    return e || "max";
  }
}

var breakpoints = {
  setBreakpoint: setBreakpoint,
  getBreakpoint: getBreakpoints
};

function addClasses() {
  var l = this.classNames,
      e = this.params,
      t = this.rtl,
      i = this.$el,
      s = this.device,
      a = [];
  a.push("initialized"), a.push(e.direction), e.freeMode && a.push("free-mode"), e.autoHeight && a.push("autoheight"), t && a.push("rtl"), 1 < e.slidesPerColumn && (a.push("multirow"), "column" === e.slidesPerColumnFill && a.push("multirow-column")), s.android && a.push("android"), s.ios && a.push("ios"), e.cssMode && a.push("css-mode"), a.forEach(function (a) {
    l.push(e.containerModifierClass + a);
  }), i.addClass(l.join(" ")), this.emitContainerClasses();
}

function removeClasses() {
  var a = this.$el,
      e = this.classNames;
  a.removeClass(e.join(" ")), this.emitContainerClasses();
}

var classes = {
  addClasses: addClasses,
  removeClasses: removeClasses
};

function loadImage(d, e, t, i, s, a) {
  function r() {
    a && a();
  }

  var l,
      p = getWindow();
  $(d).parent("picture")[0] || d.complete && s ? r() : e ? ((l = new p.Image()).onload = r, l.onerror = r, i && (l.sizes = i), t && (l.srcset = t), e && (l.src = e)) : r();
}

function preloadImages() {
  function a() {
    null != t && t && !t.destroyed && (void 0 !== t.imagesLoaded && (t.imagesLoaded += 1), t.imagesLoaded === t.imagesToLoad.length && (t.params.updateOnImagesReady && t.update(), t.emit("imagesReady")));
  }

  var t = this;
  t.imagesToLoad = t.$el.find("img");

  for (var e, r = 0; r < t.imagesToLoad.length; r += 1) e = t.imagesToLoad[r], t.loadImage(e, e.currentSrc || e.getAttribute("src"), e.srcset || e.getAttribute("srcset"), e.sizes || e.getAttribute("sizes"), !0, a);
}

var images = {
  loadImage: loadImage,
  preloadImages: preloadImages
};

function checkOverflow() {
  var a = this.params,
      e = this.isLocked,
      t = 0 < this.slides.length && a.slidesOffsetBefore + a.spaceBetween * (this.slides.length - 1) + this.slides[0].offsetWidth * this.slides.length;
  this.isLocked = a.slidesOffsetBefore && a.slidesOffsetAfter && t ? t <= this.size : 1 === this.snapGrid.length, this.allowSlideNext = !this.isLocked, this.allowSlidePrev = !this.isLocked, e !== this.isLocked && this.emit(this.isLocked ? "lock" : "unlock"), e && e !== this.isLocked && (this.isEnd = !1, this.navigation && this.navigation.update());
}

var checkOverflow$1 = {
  checkOverflow: checkOverflow
},
    defaults = {
  init: !0,
  direction: "horizontal",
  touchEventsTarget: "container",
  initialSlide: 0,
  speed: 300,
  cssMode: !1,
  updateOnWindowResize: !0,
  nested: !1,
  width: null,
  height: null,
  preventInteractionOnTransition: !1,
  userAgent: null,
  url: null,
  edgeSwipeDetection: !1,
  edgeSwipeThreshold: 20,
  freeMode: !1,
  freeModeMomentum: !0,
  freeModeMomentumRatio: 1,
  freeModeMomentumBounce: !0,
  freeModeMomentumBounceRatio: 1,
  freeModeMomentumVelocityRatio: 1,
  freeModeSticky: !1,
  freeModeMinimumVelocity: .02,
  autoHeight: !1,
  setWrapperSize: !1,
  virtualTranslate: !1,
  effect: "slide",
  breakpoints: void 0,
  spaceBetween: 0,
  slidesPerView: 1,
  slidesPerColumn: 1,
  slidesPerColumnFill: "column",
  slidesPerGroup: 1,
  slidesPerGroupSkip: 0,
  centeredSlides: !1,
  centeredSlidesBounds: !1,
  slidesOffsetBefore: 0,
  slidesOffsetAfter: 0,
  normalizeSlideIndex: !0,
  centerInsufficientSlides: !1,
  watchOverflow: !1,
  roundLengths: !1,
  touchRatio: 1,
  touchAngle: 45,
  simulateTouch: !0,
  shortSwipes: !0,
  longSwipes: !0,
  longSwipesRatio: .5,
  longSwipesMs: 300,
  followFinger: !0,
  allowTouchMove: !0,
  threshold: 0,
  touchMoveStopPropagation: !1,
  touchStartPreventDefault: !0,
  touchStartForcePreventDefault: !1,
  touchReleaseOnEdges: !1,
  uniqueNavElements: !0,
  resistance: !0,
  resistanceRatio: .85,
  watchSlidesProgress: !1,
  watchSlidesVisibility: !1,
  grabCursor: !1,
  preventClicks: !0,
  preventClicksPropagation: !0,
  slideToClickedSlide: !1,
  preloadImages: !0,
  updateOnImagesReady: !0,
  loop: !1,
  loopAdditionalSlides: 0,
  loopedSlides: null,
  loopFillGroupWithBlank: !1,
  loopPreventsSlide: !0,
  allowSlidePrev: !0,
  allowSlideNext: !0,
  swipeHandler: null,
  noSwiping: !0,
  noSwipingClass: "swiper-no-swiping",
  noSwipingSelector: null,
  passiveListeners: !0,
  containerModifierClass: "swiper-container-",
  slideClass: "swiper-slide",
  slideBlankClass: "swiper-slide-invisible-blank",
  slideActiveClass: "swiper-slide-active",
  slideDuplicateActiveClass: "swiper-slide-duplicate-active",
  slideVisibleClass: "swiper-slide-visible",
  slideDuplicateClass: "swiper-slide-duplicate",
  slideNextClass: "swiper-slide-next",
  slideDuplicateNextClass: "swiper-slide-duplicate-next",
  slidePrevClass: "swiper-slide-prev",
  slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
  wrapperClass: "swiper-wrapper",
  runCallbacksOnInit: !0,
  _emitClasses: !1
},
    prototypes = {
  modular: modular,
  eventsEmitter: eventsEmitter,
  update: update,
  translate: translate,
  transition: transition$1,
  slide: slide,
  loop: loop,
  grabCursor: grabCursor,
  manipulation: manipulation,
  events: events,
  breakpoints: breakpoints,
  checkOverflow: checkOverflow$1,
  classes: classes,
  images: images
},
    extendedDefaults = {},
    Swiper = function () {
  function a() {
    for (var e, c, m = arguments.length, s = Array(m), g = 0; g < m; g++) s[g] = arguments[g];

    1 === s.length && s[0].constructor && s[0].constructor === Object ? c = s[0] : (e = s[0], c = s[1]), c || (c = {}), c = extend$1({}, c), e && !c.el && (c.el = e);
    var v = this;
    v.support = getSupport(), v.device = getDevice({
      userAgent: c.userAgent
    }), v.browser = getBrowser(), v.eventsListeners = {}, v.eventsAnyListeners = [], void 0 === v.modules && (v.modules = {}), Object.keys(v.modules).forEach(function (i) {
      var e = v.modules[i];

      if (e.params) {
        var t = Object.keys(e.params)[0],
            s = e.params[t];
        if ("object" != typeof s || null === s) return;
        if (!(t in c) || !("enabled" in s)) return;
        !0 === c[t] && (c[t] = {
          enabled: !0
        }), "object" != typeof c[t] || "enabled" in c[t] || (c[t].enabled = !0), c[t] || (c[t] = {
          enabled: !1
        });
      }
    });
    var n = extend$1({}, defaults);
    v.useParams(n), v.params = extend$1({}, n, extendedDefaults, c), v.originalParams = extend$1({}, v.params), v.passedParams = extend$1({}, c), v.params && v.params.on && Object.keys(v.params.on).forEach(function (a) {
      v.on(a, v.params.on[a]);
    }), v.params && v.params.onAny && v.onAny(v.params.onAny), v.$ = $;
    var o = $(v.params.el);

    if (e = o[0]) {
      if (1 < o.length) {
        var l = [];
        return o.each(function (e) {
          var t = extend$1({}, c, {
            el: e
          });
          l.push(new a(t));
        }), l;
      }

      var d, f, w;
      return e.swiper = v, e && e.shadowRoot && e.shadowRoot.querySelector ? (d = $(e.shadowRoot.querySelector("." + v.params.wrapperClass))).children = function (a) {
        return o.children(a);
      } : d = o.children("." + v.params.wrapperClass), extend$1(v, {
        $el: o,
        el: e,
        $wrapperEl: d,
        wrapperEl: d[0],
        classNames: [],
        slides: $(),
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],
        isHorizontal: function () {
          return "horizontal" === v.params.direction;
        },
        isVertical: function () {
          return "vertical" === v.params.direction;
        },
        rtl: "rtl" === e.dir.toLowerCase() || "rtl" === o.css("direction"),
        rtlTranslate: "horizontal" === v.params.direction && ("rtl" === e.dir.toLowerCase() || "rtl" === o.css("direction")),
        wrongRTL: "-webkit-box" === d.css("display"),
        activeIndex: 0,
        realIndex: 0,
        isBeginning: !0,
        isEnd: !1,
        translate: 0,
        previousTranslate: 0,
        progress: 0,
        velocity: 0,
        animating: !1,
        allowSlideNext: v.params.allowSlideNext,
        allowSlidePrev: v.params.allowSlidePrev,
        touchEvents: (f = ["touchstart", "touchmove", "touchend", "touchcancel"], w = ["mousedown", "mousemove", "mouseup"], v.support.pointerEvents && (w = ["pointerdown", "pointermove", "pointerup"]), v.touchEventsTouch = {
          start: f[0],
          move: f[1],
          end: f[2],
          cancel: f[3]
        }, v.touchEventsDesktop = {
          start: w[0],
          move: w[1],
          end: w[2]
        }, v.support.touch || !v.params.simulateTouch ? v.touchEventsTouch : v.touchEventsDesktop),
        touchEventsData: {
          isTouched: void 0,
          isMoved: void 0,
          allowTouchCallbacks: void 0,
          touchStartTime: void 0,
          isScrolling: void 0,
          currentTranslate: void 0,
          startTranslate: void 0,
          allowThresholdMove: void 0,
          formElements: "input, select, option, textarea, button, video, label",
          lastClickTime: now(),
          clickTimeout: void 0,
          velocities: [],
          allowMomentumBounce: void 0,
          isTouchEvent: void 0,
          startMoving: void 0
        },
        allowClick: !0,
        allowTouchMove: v.params.allowTouchMove,
        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0
        },
        imagesToLoad: [],
        imagesLoaded: 0
      }), v.useModules(), v.emit("_swiper"), v.params.init && v.init(), v;
    }
  }

  var e = a.prototype;
  return e.emitContainerClasses = function () {
    var a = this;

    if (a.params._emitClasses && a.el) {
      var e = a.el.className.split(" ").filter(function (e) {
        return 0 === e.indexOf("swiper-container") || 0 === e.indexOf(a.params.containerModifierClass);
      });
      a.emit("_containerClasses", e.join(" "));
    }
  }, e.getSlideClasses = function (a) {
    var s = this;
    return a.className.split(" ").filter(function (a) {
      return 0 === a.indexOf("swiper-slide") || 0 === a.indexOf(s.params.slideClass);
    }).join(" ");
  }, e.emitSlidesClasses = function () {
    var a = this;
    a.params._emitClasses && a.el && a.slides.each(function (e) {
      var t = a.getSlideClasses(e);
      a.emit("_slideClass", e, t);
    });
  }, e.slidesPerViewDynamic = function () {
    var p = this.params,
        e = this.slides,
        t = this.slidesGrid,
        i = this.size,
        s = this.activeIndex,
        a = 1;

    if (p.centeredSlides) {
      for (var c, u = e[s].swiperSlideSize, m = s + 1; m < e.length; m += 1) e[m] && !c && (a += 1, (u += e[m].swiperSlideSize) > i && (c = !0));

      for (var g = s - 1; 0 <= g; g -= 1) e[g] && !c && (a += 1, (u += e[g].swiperSlideSize) > i && (c = !0));
    } else for (var v = s + 1; v < e.length; v += 1) t[v] - t[s] < i && (a += 1);

    return a;
  }, e.update = function () {
    function a() {
      var e = s.rtlTranslate ? -1 * s.translate : s.translate,
          a = Math.min(Math.max(e, s.maxTranslate()), s.minTranslate());
      s.setTranslate(a), s.updateActiveIndex(), s.updateSlidesClasses();
    }

    var s = this;

    if (s && !s.destroyed) {
      var e = s.snapGrid,
          t = s.params;
      t.breakpoints && s.setBreakpoint(), s.updateSize(), s.updateSlides(), s.updateProgress(), s.updateSlidesClasses(), s.params.freeMode ? (a(), s.params.autoHeight && s.updateAutoHeight()) : (("auto" === s.params.slidesPerView || 1 < s.params.slidesPerView) && s.isEnd && !s.params.centeredSlides ? s.slideTo(s.slides.length - 1, 0, !1, !0) : s.slideTo(s.activeIndex, 0, !1, !0)) || a(), t.watchOverflow && e !== s.snapGrid && s.checkOverflow(), s.emit("update");
    }
  }, e.changeDirection = function (a, s) {
    void 0 === s && (s = !0);
    var r = this.params.direction;
    return a || (a = "horizontal" === r ? "vertical" : "horizontal"), a === r || "horizontal" !== a && "vertical" !== a || (this.$el.removeClass("" + this.params.containerModifierClass + r).addClass("" + this.params.containerModifierClass + a), this.emitContainerClasses(), this.params.direction = a, this.slides.each(function (e) {
      "vertical" === a ? e.style.width = "" : e.style.height = "";
    }), this.emit("changeDirection"), s && this.update()), this;
  }, e.init = function () {
    this.initialized || (this.emit("beforeInit"), this.params.breakpoints && this.setBreakpoint(), this.addClasses(), this.params.loop && this.loopCreate(), this.updateSize(), this.updateSlides(), this.params.watchOverflow && this.checkOverflow(), this.params.grabCursor && this.setGrabCursor(), this.params.preloadImages && this.preloadImages(), this.params.loop ? this.slideTo(this.params.initialSlide + this.loopedSlides, 0, this.params.runCallbacksOnInit) : this.slideTo(this.params.initialSlide, 0, this.params.runCallbacksOnInit), this.attachEvents(), this.initialized = !0, this.emit("init"), this.emit("afterInit"));
  }, e.destroy = function (l, o) {
    void 0 === l && (l = !0), void 0 === o && (o = !0);
    var d = this,
        i = d.params,
        s = d.$el,
        a = d.$wrapperEl,
        r = d.slides;
    return void 0 === d.params || d.destroyed || (d.emit("beforeDestroy"), d.initialized = !1, d.detachEvents(), i.loop && d.loopDestroy(), o && (d.removeClasses(), s.removeAttr("style"), a.removeAttr("style"), r && r.length && r.removeClass([i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), d.emit("destroy"), Object.keys(d.eventsListeners).forEach(function (a) {
      d.off(a);
    }), !1 !== l && (d.$el[0].swiper = null, deleteProps(d)), d.destroyed = !0), null;
  }, a.extendDefaults = function (a) {
    extend$1(extendedDefaults, a);
  }, a.installModule = function (e) {
    a.prototype.modules || (a.prototype.modules = {});
    var t = e.name || Object.keys(a.prototype.modules).length + "_" + now();
    a.prototype.modules[t] = e;
  }, a.use = function (e) {
    return Array.isArray(e) ? (e.forEach(function (e) {
      return a.installModule(e);
    }), a) : (a.installModule(e), a);
  }, _createClass(a, null, [{
    key: "extendedDefaults",
    get: function () {
      return extendedDefaults;
    }
  }, {
    key: "defaults",
    get: function () {
      return defaults;
    }
  }]), a;
}();

Object.keys(prototypes).forEach(function (a) {
  Object.keys(prototypes[a]).forEach(function (e) {
    Swiper.prototype[e] = prototypes[a][e];
  });
}), Swiper.use([Resize, Observer$1]);
var Virtual = {
  update: function (z) {
    function e() {
      T.updateSlides(), T.updateProgress(), T.updateSlidesClasses(), T.lazy && T.params.lazy.enabled && T.lazy.load();
    }

    var T = this,
        t = T.params,
        i = t.slidesPerView,
        s = t.slidesPerGroup,
        a = t.centeredSlides,
        r = T.params.virtual,
        n = r.addSlidesBefore,
        o = r.addSlidesAfter,
        l = T.virtual,
        d = l.from,
        h = l.to,
        p = l.slides,
        u = l.slidesGrid,
        c = l.renderSlide,
        v = l.offset;
    T.updateActiveIndex();
    var f,
        P,
        k,
        L = T.activeIndex || 0;
    f = T.rtlTranslate ? "right" : T.isHorizontal() ? "left" : "top", a ? (P = Math.floor(i / 2) + s + o, k = Math.floor(i / 2) + s + n) : (P = i + (s - 1) + o, k = s + n);
    var b = Math.max((L || 0) - k, 0),
        y = Math.min((L || 0) + P, p.length - 1),
        x = (T.slidesGrid[b] || 0) - (T.slidesGrid[0] || 0);
    if (extend$1(T.virtual, {
      from: b,
      to: y,
      offset: x,
      slidesGrid: T.slidesGrid
    }), d === b && h === y && !z) return T.slidesGrid !== u && x !== v && T.slides.css(f, x + "px"), void T.updateProgress();
    if (T.params.virtual.renderExternal) return T.params.virtual.renderExternal.call(T, {
      offset: x,
      from: b,
      to: y,
      slides: function () {
        for (var a = [], e = b; e <= y; e += 1) a.push(p[e]);

        return a;
      }()
    }), void (T.params.virtual.renderExternalUpdate && e());
    var E = [],
        C = [];
    if (z) T.$wrapperEl.find("." + T.params.slideClass).remove();else for (var S = d; S <= h; S += 1) (S < b || S > y) && T.$wrapperEl.find("." + T.params.slideClass + '[data-swiper-slide-index="' + S + '"]').remove();

    for (var I = 0; I < p.length; I += 1) I >= b && I <= y && (void 0 === h || z ? C.push(I) : (I > h && C.push(I), I < d && E.push(I)));

    C.forEach(function (a) {
      T.$wrapperEl.append(c(p[a], a));
    }), E.sort(function (a, e) {
      return e - a;
    }).forEach(function (a) {
      T.$wrapperEl.prepend(c(p[a], a));
    }), T.$wrapperEl.children(".swiper-slide").css(f, x + "px"), e();
  },
  renderSlide: function (a, e) {
    var t = this.params.virtual;
    if (t.cache && this.virtual.cache[e]) return this.virtual.cache[e];
    var i = t.renderSlide ? $(t.renderSlide.call(this, a, e)) : $('<div class="' + this.params.slideClass + '" data-swiper-slide-index="' + e + '">' + a + "</div>");
    return i.attr("data-swiper-slide-index") || i.attr("data-swiper-slide-index", e), t.cache && (this.virtual.cache[e] = i), i;
  },
  appendSlide: function (a) {
    if ("object" == typeof a && "length" in a) for (var e = 0; e < a.length; e += 1) a[e] && this.virtual.slides.push(a[e]);else this.virtual.slides.push(a);
    this.virtual.update(!0);
  },
  prependSlide: function (l) {
    var e = this.activeIndex,
        t = e + 1,
        o = 1;

    if (Array.isArray(l)) {
      for (var d = 0; d < l.length; d += 1) l[d] && this.virtual.slides.unshift(l[d]);

      t = e + l.length, o = l.length;
    } else this.virtual.slides.unshift(l);

    if (this.params.virtual.cache) {
      var p = this.virtual.cache,
          r = {};
      Object.keys(p).forEach(function (a) {
        var e = p[a],
            t = e.attr("data-swiper-slide-index");
        t && e.attr("data-swiper-slide-index", parseInt(t, 10) + 1), r[parseInt(a, 10) + o] = e;
      }), this.virtual.cache = r;
    }

    this.virtual.update(!0), this.slideTo(t, 0);
  },
  removeSlide: function (a) {
    if (null != a) {
      var e = this.activeIndex;
      if (Array.isArray(a)) for (var s = a.length - 1; 0 <= s; s -= 1) this.virtual.slides.splice(a[s], 1), this.params.virtual.cache && delete this.virtual.cache[a[s]], a[s] < e && (e -= 1), e = Math.max(e, 0);else this.virtual.slides.splice(a, 1), this.params.virtual.cache && delete this.virtual.cache[a], a < e && (e -= 1), e = Math.max(e, 0);
      this.virtual.update(!0), this.slideTo(e, 0);
    }
  },
  removeAllSlides: function () {
    this.virtual.slides = [], this.params.virtual.cache && (this.virtual.cache = {}), this.virtual.update(!0), this.slideTo(0, 0);
  }
},
    Virtual$1 = {
  name: "virtual",
  params: {
    virtual: {
      enabled: !1,
      slides: [],
      cache: !0,
      renderSlide: null,
      renderExternal: null,
      renderExternalUpdate: !0,
      addSlidesBefore: 0,
      addSlidesAfter: 0
    }
  },
  create: function () {
    bindModuleMethods(this, {
      virtual: _extends(_extends({}, Virtual), {}, {
        slides: this.params.virtual.slides,
        cache: {}
      })
    });
  },
  on: {
    beforeInit: function (a) {
      if (a.params.virtual.enabled) {
        a.classNames.push(a.params.containerModifierClass + "virtual");
        var e = {
          watchSlidesProgress: !0
        };
        extend$1(a.params, e), extend$1(a.originalParams, e), a.params.initialSlide || a.virtual.update();
      }
    },
    setTranslate: function (a) {
      a.params.virtual.enabled && a.virtual.update();
    }
  }
},
    Keyboard = {
  handle: function (y) {
    var e = getWindow(),
        t = getDocument(),
        i = this.rtlTranslate,
        s = y;
    s.originalEvent && (s = s.originalEvent);
    var E = s.keyCode || s.charCode,
        r = this.params.keyboard.pageUpDown,
        n = r && 33 === E,
        o = r && 34 === E,
        l = 37 === E,
        d = 39 === E,
        h = 38 === E,
        p = 40 === E;
    if (!this.allowSlideNext && (this.isHorizontal() && d || this.isVertical() && p || o)) return !1;
    if (!this.allowSlidePrev && (this.isHorizontal() && l || this.isVertical() && h || n)) return !1;

    if (!(s.shiftKey || s.altKey || s.ctrlKey || s.metaKey || t.activeElement && t.activeElement.nodeName && ("input" === t.activeElement.nodeName.toLowerCase() || "textarea" === t.activeElement.nodeName.toLowerCase()))) {
      if (this.params.keyboard.onlyInViewport && (n || o || l || d || h || p)) {
        var u = !1;
        if (0 < this.$el.parents("." + this.params.slideClass).length && 0 === this.$el.parents("." + this.params.slideActiveClass).length) return;
        var x = e.innerWidth,
            v = e.innerHeight,
            f = this.$el.offset();
        i && (f.left -= this.$el[0].scrollLeft);

        for (var m, T = [[f.left, f.top], [f.left + this.width, f.top], [f.left, f.top + this.height], [f.left + this.width, f.top + this.height]], g = 0; g < T.length; g += 1) m = T[g], 0 <= m[0] && m[0] <= x && 0 <= m[1] && m[1] <= v && (u = !0);

        if (!u) return;
      }

      this.isHorizontal() ? ((n || o || l || d) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1), ((o || d) && !i || (n || l) && i) && this.slideNext(), ((n || l) && !i || (o || d) && i) && this.slidePrev()) : ((n || o || h || p) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1), (o || p) && this.slideNext(), (n || h) && this.slidePrev()), this.emit("keyPress", E);
    }
  },
  enable: function () {
    var a = getDocument();
    this.keyboard.enabled || ($(a).on("keydown", this.keyboard.handle), this.keyboard.enabled = !0);
  },
  disable: function () {
    var a = getDocument();
    this.keyboard.enabled && ($(a).off("keydown", this.keyboard.handle), this.keyboard.enabled = !1);
  }
},
    Keyboard$1 = {
  name: "keyboard",
  params: {
    keyboard: {
      enabled: !1,
      onlyInViewport: !0,
      pageUpDown: !0
    }
  },
  create: function () {
    bindModuleMethods(this, {
      keyboard: _extends({
        enabled: !1
      }, Keyboard)
    });
  },
  on: {
    init: function (a) {
      a.params.keyboard.enabled && a.keyboard.enable();
    },
    destroy: function (a) {
      a.keyboard.enabled && a.keyboard.disable();
    }
  }
};

function isEventSupported() {
  var a = getDocument(),
      e = ("onwheel" in a);

  if (!e) {
    var s = a.createElement("div");
    s.setAttribute("onwheel", "return;"), e = "function" == typeof s.onwheel;
  }

  return !e && a.implementation && a.implementation.hasFeature && !0 !== a.implementation.hasFeature("", "") && (e = a.implementation.hasFeature("Events.wheel", "3.0")), e;
}

var Mousewheel = {
  lastScrollTime: now(),
  lastEventBeforeSnap: void 0,
  recentWheelEvents: [],
  event: function () {
    return -1 < getWindow().navigator.userAgent.indexOf("firefox") ? "DOMMouseScroll" : isEventSupported() ? "wheel" : "mousewheel";
  },
  normalize: function (r) {
    var e = 0,
        l = 0,
        n = 0,
        o = 0;
    return "detail" in r && (l = r.detail), "wheelDelta" in r && (l = -r.wheelDelta / 120), "wheelDeltaY" in r && (l = -r.wheelDeltaY / 120), "wheelDeltaX" in r && (e = -r.wheelDeltaX / 120), "axis" in r && r.axis === r.HORIZONTAL_AXIS && (e = l, l = 0), n = 10 * e, o = 10 * l, "deltaY" in r && (o = r.deltaY), "deltaX" in r && (n = r.deltaX), r.shiftKey && !n && (n = o, o = 0), (n || o) && r.deltaMode && (1 === r.deltaMode ? (n *= 40, o *= 40) : (n *= 800, o *= 800)), n && !e && (e = 1 > n ? -1 : 1), o && !l && (l = 1 > o ? -1 : 1), {
      spinX: e,
      spinY: l,
      pixelX: n,
      pixelY: o
    };
  },
  handleMouseEnter: function () {
    this.mouseEntered = !0;
  },
  handleMouseLeave: function () {
    this.mouseEntered = !1;
  },
  handle: function (E) {
    var e = E,
        x = this,
        i = x.params.mousewheel;
    x.params.cssMode && e.preventDefault();
    var s = x.$el;
    if ("container" !== x.params.mousewheel.eventsTarget && (s = $(x.params.mousewheel.eventsTarget)), !x.mouseEntered && !s[0].contains(e.target) && !i.releaseOnEdges) return !0;
    e.originalEvent && (e = e.originalEvent);
    var T = 0,
        C = x.rtlTranslate ? -1 : 1,
        n = Mousewheel.normalize(e);
    if (!i.forceToAxis) T = Math.abs(n.pixelX) > Math.abs(n.pixelY) ? -n.pixelX * C : -n.pixelY;else if (x.isHorizontal()) {
      if (!(Math.abs(n.pixelX) > Math.abs(n.pixelY))) return !0;
      T = -n.pixelX * C;
    } else {
      if (!(Math.abs(n.pixelY) > Math.abs(n.pixelX))) return !0;
      T = -n.pixelY;
    }
    if (0 == T) return !0;

    if (i.invert && (T = -T), x.params.freeMode) {
      var o = {
        time: now(),
        delta: Math.abs(T),
        direction: Math.sign(T)
      },
          l = x.mousewheel.lastEventBeforeSnap,
          d = l && o.time < l.time + 500 && o.delta <= l.delta && o.direction === l.direction;

      if (!d) {
        x.mousewheel.lastEventBeforeSnap = void 0, x.params.loop && x.loopFix();
        var h = x.getTranslate() + T * i.sensitivity,
            S = x.isBeginning,
            u = x.isEnd;

        if (h >= x.minTranslate() && (h = x.minTranslate()), h <= x.maxTranslate() && (h = x.maxTranslate()), x.setTransition(0), x.setTranslate(h), x.updateProgress(), x.updateActiveIndex(), x.updateSlidesClasses(), (!S && x.isBeginning || !u && x.isEnd) && x.updateSlidesClasses(), x.params.freeModeSticky) {
          clearTimeout(x.mousewheel.timeout), x.mousewheel.timeout = void 0;
          var c = x.mousewheel.recentWheelEvents;
          15 <= c.length && c.shift();
          var v = c.length ? c[c.length - 1] : void 0,
              f = c[0];
          if (c.push(o), v && (o.delta > v.delta || o.direction !== v.direction)) c.splice(0);else if (15 <= c.length && 500 > o.time - f.time && 1 <= f.delta - o.delta && 6 >= o.delta) {
            var m = 0 < T ? .8 : .2;
            x.mousewheel.lastEventBeforeSnap = o, c.splice(0), x.mousewheel.timeout = nextTick(function () {
              x.slideToClosest(x.params.speed, !0, void 0, m);
            }, 0);
          }
          x.mousewheel.timeout || (x.mousewheel.timeout = nextTick(function () {
            x.mousewheel.lastEventBeforeSnap = o, c.splice(0), x.slideToClosest(x.params.speed, !0, void 0, .5);
          }, 500));
        }

        if (d || x.emit("scroll", e), x.params.autoplay && x.params.autoplayDisableOnInteraction && x.autoplay.stop(), h === x.minTranslate() || h === x.maxTranslate()) return !0;
      }
    } else {
      var g = {
        time: now(),
        delta: Math.abs(T),
        direction: Math.sign(T),
        raw: E
      },
          w = x.mousewheel.recentWheelEvents;
      2 <= w.length && w.shift();
      var b = w.length ? w[w.length - 1] : void 0;
      if (w.push(g), b ? (g.direction !== b.direction || g.delta > b.delta || g.time > b.time + 150) && x.mousewheel.animateSlider(g) : x.mousewheel.animateSlider(g), x.mousewheel.releaseScroll(g)) return !0;
    }

    return e.preventDefault ? e.preventDefault() : e.returnValue = !1, !1;
  },
  animateSlider: function (a) {
    var e = getWindow();
    return !(this.params.mousewheel.thresholdDelta && a.delta < this.params.mousewheel.thresholdDelta) && !(this.params.mousewheel.thresholdTime && now() - this.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) && (6 <= a.delta && 60 > now() - this.mousewheel.lastScrollTime || (0 > a.direction ? this.isEnd && !this.params.loop || this.animating || (this.slideNext(), this.emit("scroll", a.raw)) : this.isBeginning && !this.params.loop || this.animating || (this.slidePrev(), this.emit("scroll", a.raw)), this.mousewheel.lastScrollTime = new e.Date().getTime(), !1));
  },
  releaseScroll: function (a) {
    var e = this.params.mousewheel;
    if (0 > a.direction) {
      if (this.isEnd && !this.params.loop && e.releaseOnEdges) return !0;
    } else if (this.isBeginning && !this.params.loop && e.releaseOnEdges) return !0;
    return !1;
  },
  enable: function () {
    var a = Mousewheel.event();
    if (this.params.cssMode) return this.wrapperEl.removeEventListener(a, this.mousewheel.handle), !0;
    if (!a) return !1;
    if (this.mousewheel.enabled) return !1;
    var e = this.$el;
    return "container" !== this.params.mousewheel.eventsTarget && (e = $(this.params.mousewheel.eventsTarget)), e.on("mouseenter", this.mousewheel.handleMouseEnter), e.on("mouseleave", this.mousewheel.handleMouseLeave), e.on(a, this.mousewheel.handle), this.mousewheel.enabled = !0, !0;
  },
  disable: function () {
    var a = Mousewheel.event();
    if (this.params.cssMode) return this.wrapperEl.addEventListener(a, this.mousewheel.handle), !0;
    if (!a) return !1;
    if (!this.mousewheel.enabled) return !1;
    var e = this.$el;
    return "container" !== this.params.mousewheel.eventsTarget && (e = $(this.params.mousewheel.eventsTarget)), e.off(a, this.mousewheel.handle), this.mousewheel.enabled = !1, !0;
  }
},
    Mousewheel$1 = {
  name: "mousewheel",
  params: {
    mousewheel: {
      enabled: !1,
      releaseOnEdges: !1,
      invert: !1,
      forceToAxis: !1,
      sensitivity: 1,
      eventsTarget: "container",
      thresholdDelta: null,
      thresholdTime: null
    }
  },
  create: function () {
    bindModuleMethods(this, {
      mousewheel: {
        enabled: !1,
        lastScrollTime: now(),
        lastEventBeforeSnap: void 0,
        recentWheelEvents: [],
        enable: Mousewheel.enable,
        disable: Mousewheel.disable,
        handle: Mousewheel.handle,
        handleMouseEnter: Mousewheel.handleMouseEnter,
        handleMouseLeave: Mousewheel.handleMouseLeave,
        animateSlider: Mousewheel.animateSlider,
        releaseScroll: Mousewheel.releaseScroll
      }
    });
  },
  on: {
    init: function (a) {
      !a.params.mousewheel.enabled && a.params.cssMode && a.mousewheel.disable(), a.params.mousewheel.enabled && a.mousewheel.enable();
    },
    destroy: function (a) {
      a.params.cssMode && a.mousewheel.enable(), a.mousewheel.enabled && a.mousewheel.disable();
    }
  }
},
    Navigation = {
  update: function () {
    var a = this.params.navigation;

    if (!this.params.loop) {
      var e = this.navigation,
          t = e.$nextEl,
          i = e.$prevEl;
      i && 0 < i.length && (this.isBeginning ? i.addClass(a.disabledClass) : i.removeClass(a.disabledClass), i[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](a.lockClass)), t && 0 < t.length && (this.isEnd ? t.addClass(a.disabledClass) : t.removeClass(a.disabledClass), t[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](a.lockClass));
    }
  },
  onPrevClick: function (a) {
    a.preventDefault(), this.isBeginning && !this.params.loop || this.slidePrev();
  },
  onNextClick: function (a) {
    a.preventDefault(), this.isEnd && !this.params.loop || this.slideNext();
  },
  init: function () {
    var a,
        s,
        r = this.params.navigation;
    (r.nextEl || r.prevEl) && (r.nextEl && (a = $(r.nextEl), this.params.uniqueNavElements && "string" == typeof r.nextEl && 1 < a.length && 1 === this.$el.find(r.nextEl).length && (a = this.$el.find(r.nextEl))), r.prevEl && (s = $(r.prevEl), this.params.uniqueNavElements && "string" == typeof r.prevEl && 1 < s.length && 1 === this.$el.find(r.prevEl).length && (s = this.$el.find(r.prevEl))), a && 0 < a.length && a.on("click", this.navigation.onNextClick), s && 0 < s.length && s.on("click", this.navigation.onPrevClick), extend$1(this.navigation, {
      $nextEl: a,
      nextEl: a && a[0],
      $prevEl: s,
      prevEl: s && s[0]
    }));
  },
  destroy: function () {
    var a = this.navigation,
        e = a.$nextEl,
        t = a.$prevEl;
    e && e.length && (e.off("click", this.navigation.onNextClick), e.removeClass(this.params.navigation.disabledClass)), t && t.length && (t.off("click", this.navigation.onPrevClick), t.removeClass(this.params.navigation.disabledClass));
  }
},
    Navigation$1 = {
  name: "navigation",
  params: {
    navigation: {
      nextEl: null,
      prevEl: null,
      hideOnClick: !1,
      disabledClass: "swiper-button-disabled",
      hiddenClass: "swiper-button-hidden",
      lockClass: "swiper-button-lock"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      navigation: _extends({}, Navigation)
    });
  },
  on: {
    init: function (a) {
      a.navigation.init(), a.navigation.update();
    },
    toEdge: function (a) {
      a.navigation.update();
    },
    fromEdge: function (a) {
      a.navigation.update();
    },
    destroy: function (a) {
      a.navigation.destroy();
    },
    click: function (l, e) {
      var t,
          n = l.navigation,
          s = n.$nextEl,
          a = n.$prevEl;
      !l.params.navigation.hideOnClick || $(e.target).is(a) || $(e.target).is(s) || (s ? t = s.hasClass(l.params.navigation.hiddenClass) : a && (t = a.hasClass(l.params.navigation.hiddenClass)), !0 === t ? l.emit("navigationShow") : l.emit("navigationHide"), s && s.toggleClass(l.params.navigation.hiddenClass), a && a.toggleClass(l.params.navigation.hiddenClass));
    }
  }
},
    Pagination = {
  update: function () {
    var T = this.rtl,
        C = this.params.pagination;

    if (C.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
      var t,
          e = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
          s = this.pagination.$el,
          a = this.params.loop ? Math.ceil((e - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length;

      if (this.params.loop ? ((t = Math.ceil((this.activeIndex - this.loopedSlides) / this.params.slidesPerGroup)) > e - 1 - 2 * this.loopedSlides && (t -= e - 2 * this.loopedSlides), t > a - 1 && (t -= a), 0 > t && "bullets" !== this.params.paginationType && (t = a + t)) : t = void 0 === this.snapIndex ? this.activeIndex || 0 : this.snapIndex, "bullets" === C.type && this.pagination.bullets && 0 < this.pagination.bullets.length) {
        var r,
            S,
            z,
            P = this.pagination.bullets;
        if (C.dynamicBullets && (this.pagination.bulletSize = P.eq(0)[this.isHorizontal() ? "outerWidth" : "outerHeight"](!0), s.css(this.isHorizontal() ? "width" : "height", this.pagination.bulletSize * (C.dynamicMainBullets + 4) + "px"), 1 < C.dynamicMainBullets && void 0 !== this.previousIndex && (this.pagination.dynamicBulletIndex += t - this.previousIndex, this.pagination.dynamicBulletIndex > C.dynamicMainBullets - 1 ? this.pagination.dynamicBulletIndex = C.dynamicMainBullets - 1 : 0 > this.pagination.dynamicBulletIndex && (this.pagination.dynamicBulletIndex = 0)), r = t - this.pagination.dynamicBulletIndex, z = ((S = r + (Math.min(P.length, C.dynamicMainBullets) - 1)) + r) / 2), P.removeClass(C.bulletActiveClass + " " + C.bulletActiveClass + "-next " + C.bulletActiveClass + "-next-next " + C.bulletActiveClass + "-prev " + C.bulletActiveClass + "-prev-prev " + C.bulletActiveClass + "-main"), 1 < s.length) P.each(function (i) {
          var e = $(i),
              s = e.index();
          s === t && e.addClass(C.bulletActiveClass), C.dynamicBullets && (s >= r && s <= S && e.addClass(C.bulletActiveClass + "-main"), s === r && e.prev().addClass(C.bulletActiveClass + "-prev").prev().addClass(C.bulletActiveClass + "-prev-prev"), s === S && e.next().addClass(C.bulletActiveClass + "-next").next().addClass(C.bulletActiveClass + "-next-next"));
        });else {
          var d = P.eq(t),
              h = d.index();

          if (d.addClass(C.bulletActiveClass), C.dynamicBullets) {
            for (var p = P.eq(r), u = P.eq(S), c = r; c <= S; c += 1) P.eq(c).addClass(C.bulletActiveClass + "-main");

            if (!this.params.loop) p.prev().addClass(C.bulletActiveClass + "-prev").prev().addClass(C.bulletActiveClass + "-prev-prev"), u.next().addClass(C.bulletActiveClass + "-next").next().addClass(C.bulletActiveClass + "-next-next");else if (h >= P.length - C.dynamicMainBullets) {
              for (var k = C.dynamicMainBullets; 0 <= k; k -= 1) P.eq(P.length - k).addClass(C.bulletActiveClass + "-main");

              P.eq(P.length - C.dynamicMainBullets - 1).addClass(C.bulletActiveClass + "-prev");
            } else p.prev().addClass(C.bulletActiveClass + "-prev").prev().addClass(C.bulletActiveClass + "-prev-prev"), u.next().addClass(C.bulletActiveClass + "-next").next().addClass(C.bulletActiveClass + "-next-next");
          }
        }

        if (C.dynamicBullets) {
          var M = Math.min(P.length, C.dynamicMainBullets + 4),
              m = (this.pagination.bulletSize * M - this.pagination.bulletSize) / 2 - z * this.pagination.bulletSize,
              g = T ? "right" : "left";
          P.css(this.isHorizontal() ? g : "top", m + "px");
        }
      }

      if ("fraction" === C.type && (s.find("." + C.currentClass).text(C.formatFractionCurrent(t + 1)), s.find("." + C.totalClass).text(C.formatFractionTotal(a))), "progressbar" === C.type) {
        var w = C.progressbarOpposite ? this.isHorizontal() ? "vertical" : "horizontal" : this.isHorizontal() ? "horizontal" : "vertical";
        var b = (t + 1) / a,
            y = 1,
            L = 1;
        "horizontal" === w ? y = b : L = b, s.find("." + C.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + y + ") scaleY(" + L + ")").transition(this.params.speed);
      }

      "custom" === C.type && C.renderCustom ? (s.html(C.renderCustom(this, t + 1, a)), this.emit("paginationRender", s[0])) : this.emit("paginationUpdate", s[0]), s[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](C.lockClass);
    }
  },
  render: function () {
    var l = this.params.pagination;

    if (l.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
      var e = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
          t = this.pagination.$el,
          i = "";

      if ("bullets" === l.type) {
        for (var n = this.params.loop ? Math.ceil((e - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length, a = 0; a < n; a += 1) i += l.renderBullet ? l.renderBullet.call(this, a, l.bulletClass) : "<" + l.bulletElement + ' class="' + l.bulletClass + '"></' + l.bulletElement + ">";

        t.html(i), this.pagination.bullets = t.find("." + l.bulletClass);
      }

      "fraction" === l.type && (i = l.renderFraction ? l.renderFraction.call(this, l.currentClass, l.totalClass) : '<span class="' + l.currentClass + '"></span> / <span class="' + l.totalClass + '"></span>', t.html(i)), "progressbar" === l.type && (i = l.renderProgressbar ? l.renderProgressbar.call(this, l.progressbarFillClass) : '<span class="' + l.progressbarFillClass + '"></span>', t.html(i)), "custom" !== l.type && this.emit("paginationRender", this.pagination.$el[0]);
    }
  },
  init: function () {
    var a = this,
        e = a.params.pagination;

    if (e.el) {
      var t = $(e.el);
      0 !== t.length && (a.params.uniqueNavElements && "string" == typeof e.el && 1 < t.length && (t = a.$el.find(e.el)), "bullets" === e.type && e.clickable && t.addClass(e.clickableClass), t.addClass(e.modifierClass + e.type), "bullets" === e.type && e.dynamicBullets && (t.addClass("" + e.modifierClass + e.type + "-dynamic"), a.pagination.dynamicBulletIndex = 0, 1 > e.dynamicMainBullets && (e.dynamicMainBullets = 1)), "progressbar" === e.type && e.progressbarOpposite && t.addClass(e.progressbarOppositeClass), e.clickable && t.on("click", "." + e.bulletClass, function (e) {
        e.preventDefault();
        var t = $(this).index() * a.params.slidesPerGroup;
        a.params.loop && (t += a.loopedSlides), a.slideTo(t);
      }), extend$1(a.pagination, {
        $el: t,
        el: t[0]
      }));
    }
  },
  destroy: function () {
    var a = this.params.pagination;

    if (a.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
      var e = this.pagination.$el;
      e.removeClass(a.hiddenClass), e.removeClass(a.modifierClass + a.type), this.pagination.bullets && this.pagination.bullets.removeClass(a.bulletActiveClass), a.clickable && e.off("click", "." + a.bulletClass);
    }
  }
},
    Pagination$1 = {
  name: "pagination",
  params: {
    pagination: {
      el: null,
      bulletElement: "span",
      clickable: !1,
      hideOnClick: !1,
      renderBullet: null,
      renderProgressbar: null,
      renderFraction: null,
      renderCustom: null,
      progressbarOpposite: !1,
      type: "bullets",
      dynamicBullets: !1,
      dynamicMainBullets: 1,
      formatFractionCurrent: function (a) {
        return a;
      },
      formatFractionTotal: function (a) {
        return a;
      },
      bulletClass: "swiper-pagination-bullet",
      bulletActiveClass: "swiper-pagination-bullet-active",
      modifierClass: "swiper-pagination-",
      currentClass: "swiper-pagination-current",
      totalClass: "swiper-pagination-total",
      hiddenClass: "swiper-pagination-hidden",
      progressbarFillClass: "swiper-pagination-progressbar-fill",
      progressbarOppositeClass: "swiper-pagination-progressbar-opposite",
      clickableClass: "swiper-pagination-clickable",
      lockClass: "swiper-pagination-lock"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      pagination: _extends({
        dynamicBulletIndex: 0
      }, Pagination)
    });
  },
  on: {
    init: function (a) {
      a.pagination.init(), a.pagination.render(), a.pagination.update();
    },
    activeIndexChange: function (a) {
      (a.params.loop || void 0 === a.snapIndex) && a.pagination.update();
    },
    snapIndexChange: function (a) {
      a.params.loop || a.pagination.update();
    },
    slidesLengthChange: function (a) {
      a.params.loop && (a.pagination.render(), a.pagination.update());
    },
    snapGridLengthChange: function (a) {
      a.params.loop || (a.pagination.render(), a.pagination.update());
    },
    destroy: function (a) {
      a.pagination.destroy();
    },
    click: function (a, e) {
      a.params.pagination.el && a.params.pagination.hideOnClick && 0 < a.pagination.$el.length && !$(e.target).hasClass(a.params.pagination.bulletClass) && (!0 === a.pagination.$el.hasClass(a.params.pagination.hiddenClass) ? a.emit("paginationShow") : a.emit("paginationHide"), a.pagination.$el.toggleClass(a.params.pagination.hiddenClass));
    }
  }
},
    Scrollbar = {
  setTranslate: function () {
    if (this.params.scrollbar.el && this.scrollbar.el) {
      var p = this.scrollbar,
          e = this.rtlTranslate,
          t = this.progress,
          i = p.dragSize,
          s = p.trackSize,
          a = p.$dragEl,
          r = p.$el,
          n = this.params.scrollbar,
          o = i,
          c = (s - i) * t;
      e ? 0 < (c = -c) ? (o = i - c, c = 0) : -c + i > s && (o = s + c) : 0 > c ? (o = i + c, c = 0) : c + i > s && (o = s - c), this.isHorizontal() ? (a.transform("translate3d(" + c + "px, 0, 0)"), a[0].style.width = o + "px") : (a.transform("translate3d(0px, " + c + "px, 0)"), a[0].style.height = o + "px"), n.hide && (clearTimeout(this.scrollbar.timeout), r[0].style.opacity = 1, this.scrollbar.timeout = setTimeout(function () {
        r[0].style.opacity = 0, r.transition(400);
      }, 1e3));
    }
  },
  setTransition: function (a) {
    this.params.scrollbar.el && this.scrollbar.el && this.scrollbar.$dragEl.transition(a);
  },
  updateSize: function () {
    if (this.params.scrollbar.el && this.scrollbar.el) {
      var l = this.scrollbar,
          e = l.$dragEl,
          t = l.$el;
      e[0].style.width = "", e[0].style.height = "";
      var i,
          o = this.isHorizontal() ? t[0].offsetWidth : t[0].offsetHeight,
          a = this.size / this.virtualSize,
          r = a * (o / this.size);
      i = "auto" === this.params.scrollbar.dragSize ? o * a : parseInt(this.params.scrollbar.dragSize, 10), this.isHorizontal() ? e[0].style.width = i + "px" : e[0].style.height = i + "px", t[0].style.display = 1 <= a ? "none" : "", this.params.scrollbar.hide && (t[0].style.opacity = 0), extend$1(l, {
        trackSize: o,
        divider: a,
        moveDivider: r,
        dragSize: i
      }), l.$el[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](this.params.scrollbar.lockClass);
    }
  },
  getPointerPosition: function (a) {
    return this.isHorizontal() ? "touchstart" === a.type || "touchmove" === a.type ? a.targetTouches[0].clientX : a.clientX : "touchstart" === a.type || "touchmove" === a.type ? a.targetTouches[0].clientY : a.clientY;
  },
  setDragPosition: function (d) {
    var e,
        p = this.scrollbar,
        i = this.rtlTranslate,
        s = p.$el,
        a = p.dragSize,
        r = p.trackSize,
        n = p.dragStartPos;
    e = (p.getPointerPosition(d) - s.offset()[this.isHorizontal() ? "left" : "top"] - (null === n ? a / 2 : n)) / (r - a), e = Math.max(Math.min(e, 1), 0), i && (e = 1 - e);
    var o = this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * e;
    this.updateProgress(o), this.setTranslate(o), this.updateActiveIndex(), this.updateSlidesClasses();
  },
  onDragStart: function (l) {
    var e = this.params.scrollbar,
        t = this.scrollbar,
        i = this.$wrapperEl,
        s = t.$el,
        a = t.$dragEl;
    this.scrollbar.isTouched = !0, this.scrollbar.dragStartPos = l.target === a[0] || l.target === a ? t.getPointerPosition(l) - l.target.getBoundingClientRect()[this.isHorizontal() ? "left" : "top"] : null, l.preventDefault(), l.stopPropagation(), i.transition(100), a.transition(100), t.setDragPosition(l), clearTimeout(this.scrollbar.dragTimeout), s.transition(0), e.hide && s.css("opacity", 1), this.params.cssMode && this.$wrapperEl.css("scroll-snap-type", "none"), this.emit("scrollbarDragStart", l);
  },
  onDragMove: function (r) {
    var e = this.scrollbar,
        t = this.$wrapperEl,
        i = e.$el,
        s = e.$dragEl;
    this.scrollbar.isTouched && (r.preventDefault ? r.preventDefault() : r.returnValue = !1, e.setDragPosition(r), t.transition(0), i.transition(0), s.transition(0), this.emit("scrollbarDragMove", r));
  },
  onDragEnd: function (r) {
    var e = this.params.scrollbar,
        t = this.scrollbar,
        i = this.$wrapperEl,
        s = t.$el;
    this.scrollbar.isTouched && (this.scrollbar.isTouched = !1, this.params.cssMode && (this.$wrapperEl.css("scroll-snap-type", ""), i.transition("")), e.hide && (clearTimeout(this.scrollbar.dragTimeout), this.scrollbar.dragTimeout = nextTick(function () {
      s.css("opacity", 0), s.transition(400);
    }, 1e3)), this.emit("scrollbarDragEnd", r), e.snapOnRelease && this.slideToClosest());
  },
  enableDraggable: function () {
    if (this.params.scrollbar.el) {
      var d = getDocument(),
          e = this.scrollbar,
          t = this.touchEventsTouch,
          i = this.touchEventsDesktop,
          s = this.params,
          a = this.support,
          r = e.$el[0],
          n = a.passiveListener && s.passiveListeners && {
        passive: !1,
        capture: !1
      },
          o = a.passiveListener && s.passiveListeners && {
        passive: !0,
        capture: !1
      };
      a.touch ? (r.addEventListener(t.start, this.scrollbar.onDragStart, n), r.addEventListener(t.move, this.scrollbar.onDragMove, n), r.addEventListener(t.end, this.scrollbar.onDragEnd, o)) : (r.addEventListener(i.start, this.scrollbar.onDragStart, n), d.addEventListener(i.move, this.scrollbar.onDragMove, n), d.addEventListener(i.end, this.scrollbar.onDragEnd, o));
    }
  },
  disableDraggable: function () {
    if (this.params.scrollbar.el) {
      var d = getDocument(),
          e = this.scrollbar,
          t = this.touchEventsTouch,
          i = this.touchEventsDesktop,
          s = this.params,
          a = this.support,
          r = e.$el[0],
          n = a.passiveListener && s.passiveListeners && {
        passive: !1,
        capture: !1
      },
          o = a.passiveListener && s.passiveListeners && {
        passive: !0,
        capture: !1
      };
      a.touch ? (r.removeEventListener(t.start, this.scrollbar.onDragStart, n), r.removeEventListener(t.move, this.scrollbar.onDragMove, n), r.removeEventListener(t.end, this.scrollbar.onDragEnd, o)) : (r.removeEventListener(i.start, this.scrollbar.onDragStart, n), d.removeEventListener(i.move, this.scrollbar.onDragMove, n), d.removeEventListener(i.end, this.scrollbar.onDragEnd, o));
    }
  },
  init: function () {
    if (this.params.scrollbar.el) {
      var r = this.scrollbar,
          e = this.$el,
          t = this.params.scrollbar,
          i = $(t.el);
      this.params.uniqueNavElements && "string" == typeof t.el && 1 < i.length && 1 === e.find(t.el).length && (i = e.find(t.el));
      var l = i.find("." + this.params.scrollbar.dragClass);
      0 === l.length && (l = $('<div class="' + this.params.scrollbar.dragClass + '"></div>'), i.append(l)), extend$1(r, {
        $el: i,
        el: i[0],
        $dragEl: l,
        dragEl: l[0]
      }), t.draggable && r.enableDraggable();
    }
  },
  destroy: function () {
    this.scrollbar.disableDraggable();
  }
},
    Scrollbar$1 = {
  name: "scrollbar",
  params: {
    scrollbar: {
      el: null,
      dragSize: "auto",
      hide: !1,
      draggable: !1,
      snapOnRelease: !0,
      lockClass: "swiper-scrollbar-lock",
      dragClass: "swiper-scrollbar-drag"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      scrollbar: _extends({
        isTouched: !1,
        timeout: null,
        dragTimeout: null
      }, Scrollbar)
    });
  },
  on: {
    init: function (a) {
      a.scrollbar.init(), a.scrollbar.updateSize(), a.scrollbar.setTranslate();
    },
    update: function (a) {
      a.scrollbar.updateSize();
    },
    resize: function (a) {
      a.scrollbar.updateSize();
    },
    observerUpdate: function (a) {
      a.scrollbar.updateSize();
    },
    setTranslate: function (a) {
      a.scrollbar.setTranslate();
    },
    setTransition: function (a, e) {
      a.scrollbar.setTransition(e);
    },
    destroy: function (a) {
      a.scrollbar.destroy();
    }
  }
},
    Parallax = {
  setTransform: function (c, e) {
    var t = this.rtl,
        i = $(c),
        s = t ? -1 : 1,
        a = i.attr("data-swiper-parallax") || "0",
        r = i.attr("data-swiper-parallax-x"),
        u = i.attr("data-swiper-parallax-y"),
        m = i.attr("data-swiper-parallax-scale"),
        l = i.attr("data-swiper-parallax-opacity");

    if (r || u ? (r = r || "0", u = u || "0") : this.isHorizontal() ? (r = a, u = "0") : (u = a, r = "0"), r = 0 <= r.indexOf("%") ? parseInt(r, 10) * e * s + "%" : r * e * s + "px", u = 0 <= u.indexOf("%") ? parseInt(u, 10) * e + "%" : u * e + "px", null != l) {
      var d = l - (l - 1) * (1 - Math.abs(e));
      i[0].style.opacity = d;
    }

    if (null == m) i.transform("translate3d(" + r + ", " + u + ", 0px)");else {
      var h = m - (m - 1) * (1 - Math.abs(e));
      i.transform("translate3d(" + r + ", " + u + ", 0px) scale(" + h + ")");
    }
  },
  setTranslate: function () {
    var l = this,
        e = l.$el,
        t = l.slides,
        n = l.progress,
        s = l.snapGrid;
    e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (e) {
      l.parallax.setTransform(e, n);
    }), t.each(function (e, a) {
      var i = e.progress;
      1 < l.params.slidesPerGroup && "auto" !== l.params.slidesPerView && (i += Math.ceil(a / 2) - n * (s.length - 1)), i = Math.min(Math.max(i, -1), 1), $(e).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (e) {
        l.parallax.setTransform(e, i);
      });
    });
  },
  setTransition: function (a) {
    void 0 === a && (a = this.params.speed), this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (e) {
      var t = $(e),
          i = parseInt(t.attr("data-swiper-parallax-duration"), 10) || a;
      0 === a && (i = 0), t.transition(i);
    });
  }
},
    Parallax$1 = {
  name: "parallax",
  params: {
    parallax: {
      enabled: !1
    }
  },
  create: function () {
    bindModuleMethods(this, {
      parallax: _extends({}, Parallax)
    });
  },
  on: {
    beforeInit: function (a) {
      a.params.parallax.enabled && (a.params.watchSlidesProgress = !0, a.originalParams.watchSlidesProgress = !0);
    },
    init: function (a) {
      a.params.parallax.enabled && a.parallax.setTranslate();
    },
    setTranslate: function (a) {
      a.params.parallax.enabled && a.parallax.setTranslate();
    },
    setTransition: function (a, e) {
      a.params.parallax.enabled && a.parallax.setTransition(e);
    }
  }
},
    Zoom = {
  getDistanceBetweenTouches: function (r) {
    if (2 > r.targetTouches.length) return 1;
    var e = r.targetTouches[0].pageX,
        t = r.targetTouches[0].pageY,
        i = r.targetTouches[1].pageX,
        s = r.targetTouches[1].pageY;
    return Math.sqrt(Math.pow(i - e, 2) + Math.pow(s - t, 2));
  },
  onGestureStart: function (r) {
    var e = this.support,
        t = this.params.zoom,
        i = this.zoom,
        s = i.gesture;

    if (i.fakeGestureTouched = !1, i.fakeGestureMoved = !1, !e.gestures) {
      if ("touchstart" !== r.type || "touchstart" === r.type && 2 > r.targetTouches.length) return;
      i.fakeGestureTouched = !0, s.scaleStart = Zoom.getDistanceBetweenTouches(r);
    }

    s.$slideEl && s.$slideEl.length || (s.$slideEl = $(r.target).closest("." + this.params.slideClass), 0 === s.$slideEl.length && (s.$slideEl = this.slides.eq(this.activeIndex)), s.$imageEl = s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), s.$imageWrapEl = s.$imageEl.parent("." + t.containerClass), s.maxRatio = s.$imageWrapEl.attr("data-swiper-zoom") || t.maxRatio, 0 !== s.$imageWrapEl.length) ? (s.$imageEl && s.$imageEl.transition(0), this.zoom.isScaling = !0) : s.$imageEl = void 0;
  },
  onGestureChange: function (r) {
    var e = this.support,
        t = this.params.zoom,
        i = this.zoom,
        s = i.gesture;

    if (!e.gestures) {
      if ("touchmove" !== r.type || "touchmove" === r.type && 2 > r.targetTouches.length) return;
      i.fakeGestureMoved = !0, s.scaleMove = Zoom.getDistanceBetweenTouches(r);
    }

    s.$imageEl && 0 !== s.$imageEl.length ? (i.scale = e.gestures ? r.scale * i.currentScale : s.scaleMove / s.scaleStart * i.currentScale, i.scale > s.maxRatio && (i.scale = s.maxRatio - 1 + Math.pow(i.scale - s.maxRatio + 1, .5)), i.scale < t.minRatio && (i.scale = t.minRatio + 1 - Math.pow(t.minRatio - i.scale + 1, .5)), s.$imageEl.transform("translate3d(0,0,0) scale(" + i.scale + ")")) : "gesturechange" === r.type && i.onGestureStart(r);
  },
  onGestureEnd: function (l) {
    var e = this.device,
        t = this.support,
        i = this.params.zoom,
        s = this.zoom,
        a = s.gesture;

    if (!t.gestures) {
      if (!s.fakeGestureTouched || !s.fakeGestureMoved) return;
      if ("touchend" !== l.type || "touchend" === l.type && 2 > l.changedTouches.length && !e.android) return;
      s.fakeGestureTouched = !1, s.fakeGestureMoved = !1;
    }

    a.$imageEl && 0 !== a.$imageEl.length && (s.scale = Math.max(Math.min(s.scale, a.maxRatio), i.minRatio), a.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale(" + s.scale + ")"), s.currentScale = s.scale, s.isScaling = !1, 1 === s.scale && (a.$slideEl = void 0));
  },
  onTouchStart: function (r) {
    var e = this.device,
        t = this.zoom,
        i = t.gesture,
        s = t.image;
    i.$imageEl && 0 !== i.$imageEl.length && (s.isTouched || (e.android && r.cancelable && r.preventDefault(), s.isTouched = !0, s.touchesStart.x = "touchstart" === r.type ? r.targetTouches[0].pageX : r.pageX, s.touchesStart.y = "touchstart" === r.type ? r.targetTouches[0].pageY : r.pageY));
  },
  onTouchMove: function (l) {
    var e = this.zoom,
        t = e.gesture,
        i = e.image,
        s = e.velocity;

    if (t.$imageEl && 0 !== t.$imageEl.length && (this.allowClick = !1, i.isTouched && t.$slideEl)) {
      i.isMoved || (i.width = t.$imageEl[0].offsetWidth, i.height = t.$imageEl[0].offsetHeight, i.startX = getTranslate(t.$imageWrapEl[0], "x") || 0, i.startY = getTranslate(t.$imageWrapEl[0], "y") || 0, t.slideWidth = t.$slideEl[0].offsetWidth, t.slideHeight = t.$slideEl[0].offsetHeight, t.$imageWrapEl.transition(0), this.rtl && (i.startX = -i.startX, i.startY = -i.startY));
      var a = i.width * e.scale,
          r = i.height * e.scale;

      if (!(a < t.slideWidth && r < t.slideHeight)) {
        if (i.minX = Math.min(t.slideWidth / 2 - a / 2, 0), i.maxX = -i.minX, i.minY = Math.min(t.slideHeight / 2 - r / 2, 0), i.maxY = -i.minY, i.touchesCurrent.x = "touchmove" === l.type ? l.targetTouches[0].pageX : l.pageX, i.touchesCurrent.y = "touchmove" === l.type ? l.targetTouches[0].pageY : l.pageY, !i.isMoved && !e.isScaling) {
          if (this.isHorizontal() && (Math.floor(i.minX) === Math.floor(i.startX) && i.touchesCurrent.x < i.touchesStart.x || Math.floor(i.maxX) === Math.floor(i.startX) && i.touchesCurrent.x > i.touchesStart.x)) return void (i.isTouched = !1);
          if (!this.isHorizontal() && (Math.floor(i.minY) === Math.floor(i.startY) && i.touchesCurrent.y < i.touchesStart.y || Math.floor(i.maxY) === Math.floor(i.startY) && i.touchesCurrent.y > i.touchesStart.y)) return void (i.isTouched = !1);
        }

        l.cancelable && l.preventDefault(), l.stopPropagation(), i.isMoved = !0, i.currentX = i.touchesCurrent.x - i.touchesStart.x + i.startX, i.currentY = i.touchesCurrent.y - i.touchesStart.y + i.startY, i.currentX < i.minX && (i.currentX = i.minX + 1 - Math.pow(i.minX - i.currentX + 1, .8)), i.currentX > i.maxX && (i.currentX = i.maxX - 1 + Math.pow(i.currentX - i.maxX + 1, .8)), i.currentY < i.minY && (i.currentY = i.minY + 1 - Math.pow(i.minY - i.currentY + 1, .8)), i.currentY > i.maxY && (i.currentY = i.maxY - 1 + Math.pow(i.currentY - i.maxY + 1, .8)), s.prevPositionX || (s.prevPositionX = i.touchesCurrent.x), s.prevPositionY || (s.prevPositionY = i.touchesCurrent.y), s.prevTime || (s.prevTime = Date.now()), s.x = (i.touchesCurrent.x - s.prevPositionX) / (Date.now() - s.prevTime) / 2, s.y = (i.touchesCurrent.y - s.prevPositionY) / (Date.now() - s.prevTime) / 2, 2 > Math.abs(i.touchesCurrent.x - s.prevPositionX) && (s.x = 0), 2 > Math.abs(i.touchesCurrent.y - s.prevPositionY) && (s.y = 0), s.prevPositionX = i.touchesCurrent.x, s.prevPositionY = i.touchesCurrent.y, s.prevTime = Date.now(), t.$imageWrapEl.transform("translate3d(" + i.currentX + "px, " + i.currentY + "px,0)");
      }
    }
  },
  onTouchEnd: function () {
    var c = this.zoom,
        e = c.gesture,
        t = c.image,
        i = c.velocity;

    if (e.$imageEl && 0 !== e.$imageEl.length) {
      if (!t.isTouched || !t.isMoved) return t.isTouched = !1, void (t.isMoved = !1);
      t.isTouched = !1, t.isMoved = !1;
      var s = 300,
          m = 300,
          g = i.x * s,
          n = t.currentX + g,
          o = i.y * m,
          l = t.currentY + o;
      0 !== i.x && (s = Math.abs((n - t.currentX) / i.x)), 0 !== i.y && (m = Math.abs((l - t.currentY) / i.y));
      var d = Math.max(s, m);
      t.currentX = n, t.currentY = l;
      var h = t.width * c.scale,
          p = t.height * c.scale;
      t.minX = Math.min(e.slideWidth / 2 - h / 2, 0), t.maxX = -t.minX, t.minY = Math.min(e.slideHeight / 2 - p / 2, 0), t.maxY = -t.minY, t.currentX = Math.max(Math.min(t.currentX, t.maxX), t.minX), t.currentY = Math.max(Math.min(t.currentY, t.maxY), t.minY), e.$imageWrapEl.transition(d).transform("translate3d(" + t.currentX + "px, " + t.currentY + "px,0)");
    }
  },
  onTransitionEnd: function () {
    var a = this.zoom,
        e = a.gesture;
    e.$slideEl && this.previousIndex !== this.activeIndex && (e.$imageEl && e.$imageEl.transform("translate3d(0,0,0) scale(1)"), e.$imageWrapEl && e.$imageWrapEl.transform("translate3d(0,0,0)"), a.scale = 1, a.currentScale = 1, e.$slideEl = void 0, e.$imageEl = void 0, e.$imageWrapEl = void 0);
  },
  toggle: function (a) {
    var e = this.zoom;
    e.scale && 1 !== e.scale ? e.out() : e.in(a);
  },
  in: function (E) {
    var e,
        x,
        T,
        C,
        S,
        z,
        P,
        k,
        $,
        M,
        L,
        I,
        D,
        A,
        O,
        G,
        N = this.zoom,
        g = this.params.zoom,
        w = N.gesture,
        b = N.image;
    (w.$slideEl || (w.$slideEl = this.params.virtual && this.params.virtual.enabled && this.virtual ? this.$wrapperEl.children("." + this.params.slideActiveClass) : this.slides.eq(this.activeIndex), w.$imageEl = w.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), w.$imageWrapEl = w.$imageEl.parent("." + g.containerClass)), w.$imageEl && 0 !== w.$imageEl.length) && (w.$slideEl.addClass("" + g.zoomedSlideClass), void 0 === b.touchesStart.x && E ? (e = "touchend" === E.type ? E.changedTouches[0].pageX : E.pageX, x = "touchend" === E.type ? E.changedTouches[0].pageY : E.pageY) : (e = b.touchesStart.x, x = b.touchesStart.y), N.scale = w.$imageWrapEl.attr("data-swiper-zoom") || g.maxRatio, N.currentScale = w.$imageWrapEl.attr("data-swiper-zoom") || g.maxRatio, E ? (O = w.$slideEl[0].offsetWidth, G = w.$slideEl[0].offsetHeight, T = w.$slideEl.offset().left + O / 2 - e, C = w.$slideEl.offset().top + G / 2 - x, P = w.$imageEl[0].offsetWidth, k = w.$imageEl[0].offsetHeight, $ = P * N.scale, M = k * N.scale, D = -(L = Math.min(O / 2 - $ / 2, 0)), A = -(I = Math.min(G / 2 - M / 2, 0)), (S = T * N.scale) < L && (S = L), S > D && (S = D), (z = C * N.scale) < I && (z = I), z > A && (z = A)) : (S = 0, z = 0), w.$imageWrapEl.transition(300).transform("translate3d(" + S + "px, " + z + "px,0)"), w.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + N.scale + ")"));
  },
  out: function () {
    var a = this.zoom,
        e = this.params.zoom,
        t = a.gesture;
    t.$slideEl || (t.$slideEl = this.params.virtual && this.params.virtual.enabled && this.virtual ? this.$wrapperEl.children("." + this.params.slideActiveClass) : this.slides.eq(this.activeIndex), t.$imageEl = t.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), t.$imageWrapEl = t.$imageEl.parent("." + e.containerClass)), t.$imageEl && 0 !== t.$imageEl.length && (a.scale = 1, a.currentScale = 1, t.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), t.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), t.$slideEl.removeClass("" + e.zoomedSlideClass), t.$slideEl = void 0);
  },
  toggleGestures: function (a) {
    var e = this.zoom,
        t = e.slideSelector,
        i = e.passiveListener;
    this.$wrapperEl[a]("gesturestart", t, e.onGestureStart, i), this.$wrapperEl[a]("gesturechange", t, e.onGestureChange, i), this.$wrapperEl[a]("gestureend", t, e.onGestureEnd, i);
  },
  enableGestures: function () {
    this.zoom.gesturesEnabled || (this.zoom.gesturesEnabled = !0, this.zoom.toggleGestures("on"));
  },
  disableGestures: function () {
    this.zoom.gesturesEnabled && (this.zoom.gesturesEnabled = !1, this.zoom.toggleGestures("off"));
  },
  enable: function () {
    var r = this.support,
        e = this.zoom;

    if (!e.enabled) {
      e.enabled = !0;
      var t = "touchstart" === this.touchEvents.start && r.passiveListener && this.params.passiveListeners && {
        passive: !0,
        capture: !1
      },
          i = !r.passiveListener || {
        passive: !1,
        capture: !0
      },
          s = "." + this.params.slideClass;
      this.zoom.passiveListener = t, this.zoom.slideSelector = s, r.gestures ? (this.$wrapperEl.on(this.touchEvents.start, this.zoom.enableGestures, t), this.$wrapperEl.on(this.touchEvents.end, this.zoom.disableGestures, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.on(this.touchEvents.start, s, e.onGestureStart, t), this.$wrapperEl.on(this.touchEvents.move, s, e.onGestureChange, i), this.$wrapperEl.on(this.touchEvents.end, s, e.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.on(this.touchEvents.cancel, s, e.onGestureEnd, t)), this.$wrapperEl.on(this.touchEvents.move, "." + this.params.zoom.containerClass, e.onTouchMove, i);
    }
  },
  disable: function () {
    var r = this.zoom;

    if (r.enabled) {
      var e = this.support;
      this.zoom.enabled = !1;
      var t = "touchstart" === this.touchEvents.start && e.passiveListener && this.params.passiveListeners && {
        passive: !0,
        capture: !1
      },
          i = !e.passiveListener || {
        passive: !1,
        capture: !0
      },
          s = "." + this.params.slideClass;
      e.gestures ? (this.$wrapperEl.off(this.touchEvents.start, this.zoom.enableGestures, t), this.$wrapperEl.off(this.touchEvents.end, this.zoom.disableGestures, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.off(this.touchEvents.start, s, r.onGestureStart, t), this.$wrapperEl.off(this.touchEvents.move, s, r.onGestureChange, i), this.$wrapperEl.off(this.touchEvents.end, s, r.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.off(this.touchEvents.cancel, s, r.onGestureEnd, t)), this.$wrapperEl.off(this.touchEvents.move, "." + this.params.zoom.containerClass, r.onTouchMove, i);
    }
  }
},
    Zoom$1 = {
  name: "zoom",
  params: {
    zoom: {
      enabled: !1,
      maxRatio: 3,
      minRatio: 1,
      toggle: !0,
      containerClass: "swiper-zoom-container",
      zoomedSlideClass: "swiper-slide-zoomed"
    }
  },
  create: function () {
    var r = this;
    bindModuleMethods(r, {
      zoom: _extends({
        enabled: !1,
        scale: 1,
        currentScale: 1,
        isScaling: !1,
        gesture: {
          $slideEl: void 0,
          slideWidth: void 0,
          slideHeight: void 0,
          $imageEl: void 0,
          $imageWrapEl: void 0,
          maxRatio: 3
        },
        image: {
          isTouched: void 0,
          isMoved: void 0,
          currentX: void 0,
          currentY: void 0,
          minX: void 0,
          minY: void 0,
          maxX: void 0,
          maxY: void 0,
          width: void 0,
          height: void 0,
          startX: void 0,
          startY: void 0,
          touchesStart: {},
          touchesCurrent: {}
        },
        velocity: {
          x: void 0,
          y: void 0,
          prevPositionX: void 0,
          prevPositionY: void 0,
          prevTime: void 0
        }
      }, Zoom)
    });
    var e = 1;
    Object.defineProperty(r.zoom, "scale", {
      get: function () {
        return e;
      },
      set: function (t) {
        if (e !== t) {
          var i = r.zoom.gesture.$imageEl ? r.zoom.gesture.$imageEl[0] : void 0,
              s = r.zoom.gesture.$slideEl ? r.zoom.gesture.$slideEl[0] : void 0;
          r.emit("zoomChange", t, i, s);
        }

        e = t;
      }
    });
  },
  on: {
    init: function (a) {
      a.params.zoom.enabled && a.zoom.enable();
    },
    destroy: function (a) {
      a.zoom.disable();
    },
    touchStart: function (a, e) {
      a.zoom.enabled && a.zoom.onTouchStart(e);
    },
    touchEnd: function (a, e) {
      a.zoom.enabled && a.zoom.onTouchEnd(e);
    },
    doubleTap: function (a, e) {
      a.params.zoom.enabled && a.zoom.enabled && a.params.zoom.toggle && a.zoom.toggle(e);
    },
    transitionEnd: function (a) {
      a.zoom.enabled && a.params.zoom.enabled && a.zoom.onTransitionEnd();
    },
    slideChange: function (a) {
      a.zoom.enabled && a.params.zoom.enabled && a.params.cssMode && a.zoom.onTransitionEnd();
    }
  }
},
    Lazy = {
  loadInSlide: function (l, c) {
    void 0 === c && (c = !0);
    var m = this,
        i = m.params.lazy;

    if (void 0 !== l && 0 !== m.slides.length) {
      var s = m.virtual && m.params.virtual.enabled ? m.$wrapperEl.children("." + m.params.slideClass + '[data-swiper-slide-index="' + l + '"]') : m.slides.eq(l),
          e = s.find("." + i.elementClass + ":not(." + i.loadedClass + "):not(." + i.loadingClass + ")");
      !s.hasClass(i.elementClass) || s.hasClass(i.loadedClass) || s.hasClass(i.loadingClass) || e.push(s[0]), 0 !== e.length && e.each(function (a) {
        var t = $(a);
        t.addClass(i.loadingClass);
        var r = t.attr("data-background"),
            n = t.attr("data-src"),
            o = t.attr("data-srcset"),
            l = t.attr("data-sizes"),
            d = t.parent("picture");
        m.loadImage(t[0], n || r, o, l, !1, function () {
          if (null != m && m && (!m || m.params) && !m.destroyed) {
            if (r ? (t.css("background-image", 'url("' + r + '")'), t.removeAttr("data-background")) : (o && (t.attr("srcset", o), t.removeAttr("data-srcset")), l && (t.attr("sizes", l), t.removeAttr("data-sizes")), d.length && d.children("source").each(function (a) {
              var e = $(a);
              e.attr("data-srcset") && (e.attr("srcset", e.attr("data-srcset")), e.removeAttr("data-srcset"));
            }), n && (t.attr("src", n), t.removeAttr("data-src"))), t.addClass(i.loadedClass).removeClass(i.loadingClass), s.find("." + i.preloaderClass).remove(), m.params.loop && c) {
              var a = s.attr("data-swiper-slide-index");

              if (s.hasClass(m.params.slideDuplicateClass)) {
                var e = m.$wrapperEl.children('[data-swiper-slide-index="' + a + '"]:not(.' + m.params.slideDuplicateClass + ")");
                m.lazy.loadInSlide(e.index(), !1);
              } else {
                var p = m.$wrapperEl.children("." + m.params.slideDuplicateClass + '[data-swiper-slide-index="' + a + '"]');
                m.lazy.loadInSlide(p.index(), !1);
              }
            }

            m.emit("lazyImageReady", s[0], t[0]), m.params.autoHeight && m.updateAutoHeight();
          }
        }), m.emit("lazyImageLoad", s[0], t[0]);
      });
    }
  },
  load: function () {
    function b(s) {
      if (a) {
        if (y.children("." + t.slideClass + '[data-swiper-slide-index="' + s + '"]').length) return !0;
      } else if (i[s]) return !0;
      return !1;
    }

    function l(t) {
      return a ? $(t).attr("data-swiper-slide-index") : $(t).index();
    }

    var d = this,
        y = d.$wrapperEl,
        t = d.params,
        i = d.slides,
        e = d.activeIndex,
        a = d.virtual && t.virtual.enabled,
        s = t.lazy,
        r = t.slidesPerView;
    if ("auto" === r && (r = 0), d.lazy.initialImageLoaded || (d.lazy.initialImageLoaded = !0), d.params.watchSlidesVisibility) y.children("." + t.slideVisibleClass).each(function (e) {
      var t = a ? $(e).attr("data-swiper-slide-index") : $(e).index();
      d.lazy.loadInSlide(t);
    });else if (1 < r) for (var n = e; n < e + r; n += 1) b(n) && d.lazy.loadInSlide(n);else d.lazy.loadInSlide(e);
    if (s.loadPrevNext) if (1 < r || s.loadPrevNextAmount && 1 < s.loadPrevNextAmount) {
      for (var E = s.loadPrevNextAmount, p = r, u = Math.min(e + p + Math.max(E, p), i.length), c = Math.max(e - Math.max(p, E), 0), v = e + r; v < u; v += 1) b(v) && d.lazy.loadInSlide(v);

      for (var x = c; x < e; x += 1) b(x) && d.lazy.loadInSlide(x);
    } else {
      var T = y.children("." + t.slideNextClass);
      0 < T.length && d.lazy.loadInSlide(l(T));
      var g = y.children("." + t.slidePrevClass);
      0 < g.length && d.lazy.loadInSlide(l(g));
    }
  }
},
    Lazy$1 = {
  name: "lazy",
  params: {
    lazy: {
      enabled: !1,
      loadPrevNext: !1,
      loadPrevNextAmount: 1,
      loadOnTransitionStart: !1,
      elementClass: "swiper-lazy",
      loadingClass: "swiper-lazy-loading",
      loadedClass: "swiper-lazy-loaded",
      preloaderClass: "swiper-lazy-preloader"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      lazy: _extends({
        initialImageLoaded: !1
      }, Lazy)
    });
  },
  on: {
    beforeInit: function (a) {
      a.params.lazy.enabled && a.params.preloadImages && (a.params.preloadImages = !1);
    },
    init: function (a) {
      a.params.lazy.enabled && !a.params.loop && 0 === a.params.initialSlide && a.lazy.load();
    },
    scroll: function (a) {
      a.params.freeMode && !a.params.freeModeSticky && a.lazy.load();
    },
    resize: function (a) {
      a.params.lazy.enabled && a.lazy.load();
    },
    scrollbarDragMove: function (a) {
      a.params.lazy.enabled && a.lazy.load();
    },
    transitionStart: function (a) {
      a.params.lazy.enabled && (a.params.lazy.loadOnTransitionStart || !a.params.lazy.loadOnTransitionStart && !a.lazy.initialImageLoaded) && a.lazy.load();
    },
    transitionEnd: function (a) {
      a.params.lazy.enabled && !a.params.lazy.loadOnTransitionStart && a.lazy.load();
    },
    slideChange: function (a) {
      a.params.lazy.enabled && a.params.cssMode && a.lazy.load();
    }
  }
},
    Controller = {
  LinearSpline: function (l, e) {
    var d,
        p,
        c,
        t,
        u,
        m = function (a, e) {
      for (p = -1, d = a.length; 1 < d - p;) a[c = d + p >> 1] <= e ? p = c : d = c;

      return d;
    };

    return this.x = l, this.y = e, this.lastIndex = l.length - 1, this.interpolate = function (a) {
      return a ? (u = m(this.x, a), t = u - 1, (a - this.x[t]) * (this.y[u] - this.y[t]) / (this.x[u] - this.x[t]) + this.y[t]) : 0;
    }, this;
  },
  getInterpolateFunction: function (a) {
    this.controller.spline || (this.controller.spline = this.params.loop ? new Controller.LinearSpline(this.slidesGrid, a.slidesGrid) : new Controller.LinearSpline(this.snapGrid, a.snapGrid));
  },
  setTranslate: function (d, e) {
    function t(a) {
      var e = c.rtlTranslate ? -c.translate : c.translate;
      "slide" === c.params.controller.by && (c.controller.getInterpolateFunction(a), p = -c.controller.spline.interpolate(-e)), p && "container" !== c.params.controller.by || (o = (a.maxTranslate() - a.minTranslate()) / (c.maxTranslate() - c.minTranslate()), p = (e - c.minTranslate()) * o + a.minTranslate()), c.params.controller.inverse && (p = a.maxTranslate() - p), a.updateProgress(p), a.setTranslate(p, c), a.updateActiveIndex(), a.updateSlidesClasses();
    }

    var o,
        p,
        c = this,
        a = c.controller.control,
        r = c.constructor;
    if (Array.isArray(a)) for (var n = 0; n < a.length; n += 1) a[n] !== e && a[n] instanceof r && t(a[n]);else a instanceof r && e !== a && t(a);
  },
  setTransition: function (l, e) {
    function t(e) {
      e.setTransition(l, o), 0 !== l && (e.transitionStart(), e.params.autoHeight && nextTick(function () {
        e.updateAutoHeight();
      }), e.$wrapperEl.transitionEnd(function () {
        a && (e.params.loop && "slide" === o.params.controller.by && e.loopFix(), e.transitionEnd());
      }));
    }

    var n,
        o = this,
        s = o.constructor,
        a = o.controller.control;
    if (Array.isArray(a)) for (n = 0; n < a.length; n += 1) a[n] !== e && a[n] instanceof s && t(a[n]);else a instanceof s && e !== a && t(a);
  }
},
    Controller$1 = {
  name: "controller",
  params: {
    controller: {
      control: void 0,
      inverse: !1,
      by: "slide"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      controller: _extends({
        control: this.params.controller.control
      }, Controller)
    });
  },
  on: {
    update: function (a) {
      a.controller.control && a.controller.spline && (a.controller.spline = void 0, delete a.controller.spline);
    },
    resize: function (a) {
      a.controller.control && a.controller.spline && (a.controller.spline = void 0, delete a.controller.spline);
    },
    observerUpdate: function (a) {
      a.controller.control && a.controller.spline && (a.controller.spline = void 0, delete a.controller.spline);
    },
    setTranslate: function (a, e, t) {
      a.controller.control && a.controller.setTranslate(e, t);
    },
    setTransition: function (a, e, t) {
      a.controller.control && a.controller.setTransition(e, t);
    }
  }
},
    A11y = {
  getRandomNumber: function (a) {
    return void 0 === a && (a = 16), "x".repeat(a).replace(/x/g, function () {
      return Math.round(16 * Math.random()).toString(16);
    });
  },
  makeElFocusable: function (a) {
    return a.attr("tabIndex", "0"), a;
  },
  makeElNotFocusable: function (a) {
    return a.attr("tabIndex", "-1"), a;
  },
  addElRole: function (a, e) {
    return a.attr("role", e), a;
  },
  addElRoleDescription: function (a, e) {
    return a.attr("aria-role-description", e), a;
  },
  addElControls: function (a, e) {
    return a.attr("aria-controls", e), a;
  },
  addElLabel: function (a, e) {
    return a.attr("aria-label", e), a;
  },
  addElId: function (a, e) {
    return a.attr("id", e), a;
  },
  addElLive: function (a, e) {
    return a.attr("aria-live", e), a;
  },
  disableEl: function (a) {
    return a.attr("aria-disabled", !0), a;
  },
  enableEl: function (a) {
    return a.attr("aria-disabled", !1), a;
  },
  onEnterKey: function (a) {
    var e = this.params.a11y;

    if (13 === a.keyCode) {
      var t = $(a.target);
      this.navigation && this.navigation.$nextEl && t.is(this.navigation.$nextEl) && (this.isEnd && !this.params.loop || this.slideNext(), this.isEnd ? this.a11y.notify(e.lastSlideMessage) : this.a11y.notify(e.nextSlideMessage)), this.navigation && this.navigation.$prevEl && t.is(this.navigation.$prevEl) && (this.isBeginning && !this.params.loop || this.slidePrev(), this.isBeginning ? this.a11y.notify(e.firstSlideMessage) : this.a11y.notify(e.prevSlideMessage)), this.pagination && t.is("." + this.params.pagination.bulletClass) && t[0].click();
    }
  },
  notify: function (a) {
    var e = this.a11y.liveRegion;
    0 !== e.length && (e.html(""), e.html(a));
  },
  updateNavigation: function () {
    if (!this.params.loop && this.navigation) {
      var a = this.navigation,
          e = a.$nextEl,
          t = a.$prevEl;
      t && 0 < t.length && (this.isBeginning ? (this.a11y.disableEl(t), this.a11y.makeElNotFocusable(t)) : (this.a11y.enableEl(t), this.a11y.makeElFocusable(t))), e && 0 < e.length && (this.isEnd ? (this.a11y.disableEl(e), this.a11y.makeElNotFocusable(e)) : (this.a11y.enableEl(e), this.a11y.makeElFocusable(e)));
    }
  },
  updatePagination: function () {
    var a = this,
        e = a.params.a11y;
    a.pagination && a.params.pagination.clickable && a.pagination.bullets && a.pagination.bullets.length && a.pagination.bullets.each(function (t) {
      var i = $(t);
      a.a11y.makeElFocusable(i), a.params.pagination.renderBullet || (a.a11y.addElRole(i, "button"), a.a11y.addElLabel(i, e.paginationBulletMessage.replace(/\{\{index\}\}/, i.index() + 1)));
    });
  },
  init: function () {
    var l = this,
        e = l.params.a11y;
    l.$el.append(l.a11y.liveRegion);
    var t = l.$el;
    e.containerRoleDescriptionMessage && l.a11y.addElRoleDescription(t, e.containerRoleDescriptionMessage), e.containerMessage && l.a11y.addElLabel(t, e.containerMessage);
    var i,
        d,
        p,
        c = l.$wrapperEl,
        n = c.attr("id") || "swiper-wrapper-" + l.a11y.getRandomNumber(16);
    l.a11y.addElId(c, n), i = l.params.autoplay && l.params.autoplay.enabled ? "off" : "polite", l.a11y.addElLive(c, i), e.itemRoleDescriptionMessage && l.a11y.addElRoleDescription($(l.slides), e.itemRoleDescriptionMessage), l.a11y.addElRole($(l.slides), "group"), l.slides.each(function (e) {
      var a = $(e);
      l.a11y.addElLabel(a, a.index() + 1 + " / " + l.slides.length);
    }), l.navigation && l.navigation.$nextEl && (d = l.navigation.$nextEl), l.navigation && l.navigation.$prevEl && (p = l.navigation.$prevEl), d && d.length && (l.a11y.makeElFocusable(d), "BUTTON" !== d[0].tagName && (l.a11y.addElRole(d, "button"), d.on("keydown", l.a11y.onEnterKey)), l.a11y.addElLabel(d, e.nextSlideMessage), l.a11y.addElControls(d, n)), p && p.length && (l.a11y.makeElFocusable(p), "BUTTON" !== p[0].tagName && (l.a11y.addElRole(p, "button"), p.on("keydown", l.a11y.onEnterKey)), l.a11y.addElLabel(p, e.prevSlideMessage), l.a11y.addElControls(p, n)), l.pagination && l.params.pagination.clickable && l.pagination.bullets && l.pagination.bullets.length && l.pagination.$el.on("keydown", "." + l.params.pagination.bulletClass, l.a11y.onEnterKey);
  },
  destroy: function () {
    var a, s;
    this.a11y.liveRegion && 0 < this.a11y.liveRegion.length && this.a11y.liveRegion.remove(), this.navigation && this.navigation.$nextEl && (a = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (s = this.navigation.$prevEl), a && a.off("keydown", this.a11y.onEnterKey), s && s.off("keydown", this.a11y.onEnterKey), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.off("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey);
  }
},
    A11y$1 = {
  name: "a11y",
  params: {
    a11y: {
      enabled: !0,
      notificationClass: "swiper-notification",
      prevSlideMessage: "Previous slide",
      nextSlideMessage: "Next slide",
      firstSlideMessage: "This is the first slide",
      lastSlideMessage: "This is the last slide",
      paginationBulletMessage: "Go to slide {{index}}",
      containerMessage: null,
      containerRoleDescriptionMessage: null,
      itemRoleDescriptionMessage: null
    }
  },
  create: function () {
    bindModuleMethods(this, {
      a11y: _extends(_extends({}, A11y), {}, {
        liveRegion: $('<span class="' + this.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>')
      })
    });
  },
  on: {
    afterInit: function (a) {
      a.params.a11y.enabled && (a.a11y.init(), a.a11y.updateNavigation());
    },
    toEdge: function (a) {
      a.params.a11y.enabled && a.a11y.updateNavigation();
    },
    fromEdge: function (a) {
      a.params.a11y.enabled && a.a11y.updateNavigation();
    },
    paginationUpdate: function (a) {
      a.params.a11y.enabled && a.a11y.updatePagination();
    },
    destroy: function (a) {
      a.params.a11y.enabled && a.a11y.destroy();
    }
  }
},
    History = {
  init: function () {
    var a = getWindow();

    if (this.params.history) {
      if (!a.history || !a.history.pushState) return this.params.history.enabled = !1, void (this.params.hashNavigation.enabled = !0);
      var e = this.history;
      e.initialized = !0, e.paths = History.getPathValues(this.params.url), (e.paths.key || e.paths.value) && (e.scrollToSlide(0, e.paths.value, this.params.runCallbacksOnInit), this.params.history.replaceState || a.addEventListener("popstate", this.history.setHistoryPopState));
    }
  },
  destroy: function () {
    var a = getWindow();
    this.params.history.replaceState || a.removeEventListener("popstate", this.history.setHistoryPopState);
  },
  setHistoryPopState: function () {
    this.history.paths = History.getPathValues(this.params.url), this.history.scrollToSlide(this.params.speed, this.history.paths.value, !1);
  },
  getPathValues: function (a) {
    var e = getWindow(),
        t = (a ? new URL(a) : e.location).pathname.slice(1).split("/").filter(function (a) {
      return "" !== a;
    }),
        i = t.length;
    return {
      key: t[i - 2],
      value: t[i - 1]
    };
  },
  setHistory: function (l, e) {
    var t = getWindow();

    if (this.history.initialized && this.params.history.enabled) {
      var i = this.params.url ? new URL(this.params.url) : t.location;
      var s = this.slides.eq(e),
          a = History.slugify(s.attr("data-history"));
      i.pathname.includes(l) || (a = l + "/" + a);
      var o = t.history.state;
      o && o.value === a || (this.params.history.replaceState ? t.history.replaceState({
        value: a
      }, null, a) : t.history.pushState({
        value: a
      }, null, a));
    }
  },
  slugify: function (a) {
    return a.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
  },
  scrollToSlide: function (l, e, t) {
    if (e) {
      for (var i, o = 0, d = this.slides.length; o < d; o += 1) if (i = this.slides.eq(o), History.slugify(i.attr("data-history")) === e && !i.hasClass(this.params.slideDuplicateClass)) {
        var a = i.index();
        this.slideTo(a, l, t);
      }
    } else this.slideTo(0, l, t);
  }
},
    History$1 = {
  name: "history",
  params: {
    history: {
      enabled: !1,
      replaceState: !1,
      key: "slides"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      history: _extends({}, History)
    });
  },
  on: {
    init: function (a) {
      a.params.history.enabled && a.history.init();
    },
    destroy: function (a) {
      a.params.history.enabled && a.history.destroy();
    },
    transitionEnd: function (a) {
      a.history.initialized && a.history.setHistory(a.params.history.key, a.activeIndex);
    },
    slideChange: function (a) {
      a.history.initialized && a.params.cssMode && a.history.setHistory(a.params.history.key, a.activeIndex);
    }
  }
},
    HashNavigation = {
  onHashCange: function () {
    var a = getDocument();
    this.emit("hashChange");
    var e = a.location.hash.replace("#", "");

    if (e !== this.slides.eq(this.activeIndex).attr("data-hash")) {
      var t = this.$wrapperEl.children("." + this.params.slideClass + '[data-hash="' + e + '"]').index();
      if (void 0 === t) return;
      this.slideTo(t);
    }
  },
  setHash: function () {
    var a = getWindow(),
        e = getDocument();
    if (this.hashNavigation.initialized && this.params.hashNavigation.enabled) if (this.params.hashNavigation.replaceState && a.history && a.history.replaceState) a.history.replaceState(null, null, "#" + this.slides.eq(this.activeIndex).attr("data-hash") || ""), this.emit("hashSet");else {
      var t = this.slides.eq(this.activeIndex),
          i = t.attr("data-hash") || t.attr("data-history");
      e.location.hash = i || "", this.emit("hashSet");
    }
  },
  init: function () {
    var l = getDocument(),
        e = getWindow();

    if (!(!this.params.hashNavigation.enabled || this.params.history && this.params.history.enabled)) {
      this.hashNavigation.initialized = !0;
      var t = l.location.hash.replace("#", "");
      if (t) for (var i, o = 0, d = this.slides.length; o < d; o += 1) if (i = this.slides.eq(o), (i.attr("data-hash") || i.attr("data-history")) === t && !i.hasClass(this.params.slideDuplicateClass)) {
        var a = i.index();
        this.slideTo(a, 0, this.params.runCallbacksOnInit, !0);
      }
      this.params.hashNavigation.watchState && $(e).on("hashchange", this.hashNavigation.onHashCange);
    }
  },
  destroy: function () {
    var a = getWindow();
    this.params.hashNavigation.watchState && $(a).off("hashchange", this.hashNavigation.onHashCange);
  }
},
    HashNavigation$1 = {
  name: "hash-navigation",
  params: {
    hashNavigation: {
      enabled: !1,
      replaceState: !1,
      watchState: !1
    }
  },
  create: function () {
    bindModuleMethods(this, {
      hashNavigation: _extends({
        initialized: !1
      }, HashNavigation)
    });
  },
  on: {
    init: function (a) {
      a.params.hashNavigation.enabled && a.hashNavigation.init();
    },
    destroy: function (a) {
      a.params.hashNavigation.enabled && a.hashNavigation.destroy();
    },
    transitionEnd: function (a) {
      a.hashNavigation.initialized && a.hashNavigation.setHash();
    },
    slideChange: function (a) {
      a.hashNavigation.initialized && a.params.cssMode && a.hashNavigation.setHash();
    }
  }
},
    Autoplay = {
  run: function () {
    var a = this,
        e = a.slides.eq(a.activeIndex),
        t = a.params.autoplay.delay;
    e.attr("data-swiper-autoplay") && (t = e.attr("data-swiper-autoplay") || a.params.autoplay.delay), clearTimeout(a.autoplay.timeout), a.autoplay.timeout = nextTick(function () {
      var e;
      a.params.autoplay.reverseDirection ? a.params.loop ? (a.loopFix(), e = a.slidePrev(a.params.speed, !0, !0), a.emit("autoplay")) : a.isBeginning ? a.params.autoplay.stopOnLastSlide ? a.autoplay.stop() : (e = a.slideTo(a.slides.length - 1, a.params.speed, !0, !0), a.emit("autoplay")) : (e = a.slidePrev(a.params.speed, !0, !0), a.emit("autoplay")) : a.params.loop ? (a.loopFix(), e = a.slideNext(a.params.speed, !0, !0), a.emit("autoplay")) : a.isEnd ? a.params.autoplay.stopOnLastSlide ? a.autoplay.stop() : (e = a.slideTo(0, a.params.speed, !0, !0), a.emit("autoplay")) : (e = a.slideNext(a.params.speed, !0, !0), a.emit("autoplay")), (a.params.cssMode && a.autoplay.running || !1 === e) && a.autoplay.run();
    }, t);
  },
  start: function () {
    return void 0 === this.autoplay.timeout && !this.autoplay.running && (this.autoplay.running = !0, this.emit("autoplayStart"), this.autoplay.run(), !0);
  },
  stop: function () {
    return !!this.autoplay.running && void 0 !== this.autoplay.timeout && (this.autoplay.timeout && (clearTimeout(this.autoplay.timeout), this.autoplay.timeout = void 0), this.autoplay.running = !1, this.emit("autoplayStop"), !0);
  },
  pause: function (a) {
    this.autoplay.running && (this.autoplay.paused || (this.autoplay.timeout && clearTimeout(this.autoplay.timeout), this.autoplay.paused = !0, 0 !== a && this.params.autoplay.waitForTransition ? (this.$wrapperEl[0].addEventListener("transitionend", this.autoplay.onTransitionEnd), this.$wrapperEl[0].addEventListener("webkitTransitionEnd", this.autoplay.onTransitionEnd)) : (this.autoplay.paused = !1, this.autoplay.run())));
  },
  onVisibilityChange: function () {
    var a = getDocument();
    "hidden" === a.visibilityState && this.autoplay.running && this.autoplay.pause(), "visible" === a.visibilityState && this.autoplay.paused && (this.autoplay.run(), this.autoplay.paused = !1);
  },
  onTransitionEnd: function (a) {
    this && !this.destroyed && this.$wrapperEl && a.target === this.$wrapperEl[0] && (this.$wrapperEl[0].removeEventListener("transitionend", this.autoplay.onTransitionEnd), this.$wrapperEl[0].removeEventListener("webkitTransitionEnd", this.autoplay.onTransitionEnd), this.autoplay.paused = !1, this.autoplay.running ? this.autoplay.run() : this.autoplay.stop());
  }
},
    Autoplay$1 = {
  name: "autoplay",
  params: {
    autoplay: {
      enabled: !1,
      delay: 3e3,
      waitForTransition: !0,
      disableOnInteraction: !0,
      stopOnLastSlide: !1,
      reverseDirection: !1
    }
  },
  create: function () {
    bindModuleMethods(this, {
      autoplay: _extends(_extends({}, Autoplay), {}, {
        running: !1,
        paused: !1
      })
    });
  },
  on: {
    init: function (a) {
      a.params.autoplay.enabled && (a.autoplay.start(), getDocument().addEventListener("visibilitychange", a.autoplay.onVisibilityChange));
    },
    beforeTransitionStart: function (a, e, t) {
      a.autoplay.running && (t || !a.params.autoplay.disableOnInteraction ? a.autoplay.pause(e) : a.autoplay.stop());
    },
    sliderFirstMove: function (a) {
      a.autoplay.running && (a.params.autoplay.disableOnInteraction ? a.autoplay.stop() : a.autoplay.pause());
    },
    touchEnd: function (a) {
      a.params.cssMode && a.autoplay.paused && !a.params.autoplay.disableOnInteraction && a.autoplay.run();
    },
    destroy: function (a) {
      a.autoplay.running && a.autoplay.stop(), getDocument().removeEventListener("visibilitychange", a.autoplay.onVisibilityChange);
    }
  }
},
    Fade = {
  setTranslate: function () {
    for (var l = this.slides, e = 0; e < l.length; e += 1) {
      var n = this.slides.eq(e),
          i = -n[0].swiperSlideOffset;
      this.params.virtualTranslate || (i -= this.translate);
      var o = 0;
      this.isHorizontal() || (o = i, i = 0);
      var d = this.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(n[0].progress), 0) : 1 + Math.min(Math.max(n[0].progress, -1), 0);
      n.css({
        opacity: d
      }).transform("translate3d(" + i + "px, " + o + "px, 0px)");
    }
  },
  setTransition: function (r) {
    var l = this,
        e = l.slides,
        t = l.$wrapperEl;

    if (e.transition(r), l.params.virtualTranslate && 0 !== r) {
      var s = !1;
      e.transitionEnd(function () {
        if (!s && l && !l.destroyed) {
          s = !0, l.animating = !1;

          for (var a = ["webkitTransitionEnd", "transitionend"], e = 0; e < a.length; e += 1) t.trigger(a[e]);
        }
      });
    }
  }
},
    EffectFade = {
  name: "effect-fade",
  params: {
    fadeEffect: {
      crossFade: !1
    }
  },
  create: function () {
    bindModuleMethods(this, {
      fadeEffect: _extends({}, Fade)
    });
  },
  on: {
    beforeInit: function (a) {
      if ("fade" === a.params.effect) {
        a.classNames.push(a.params.containerModifierClass + "fade");
        var e = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: !0,
          spaceBetween: 0,
          virtualTranslate: !0
        };
        extend$1(a.params, e), extend$1(a.originalParams, e);
      }
    },
    setTranslate: function (a) {
      "fade" === a.params.effect && a.fadeEffect.setTranslate();
    },
    setTransition: function (a, e) {
      "fade" === a.params.effect && a.fadeEffect.setTransition(e);
    }
  }
},
    Cube = {
  setTranslate: function () {
    var I,
        D = this.$el,
        t = this.$wrapperEl,
        i = this.slides,
        s = this.width,
        a = this.height,
        r = this.rtlTranslate,
        n = this.size,
        o = this.browser,
        l = this.params.cubeEffect,
        d = this.isHorizontal(),
        h = this.virtual && this.params.virtual.enabled,
        p = 0;
    l.shadow && (d ? (0 === (I = t.find(".swiper-cube-shadow")).length && (I = $('<div class="swiper-cube-shadow"></div>'), t.append(I)), I.css({
      height: s + "px"
    })) : 0 === (I = D.find(".swiper-cube-shadow")).length && (I = $('<div class="swiper-cube-shadow"></div>'), D.append(I)));

    for (var A = 0; A < i.length; A += 1) {
      var O = i.eq(A),
          v = A;
      h && (v = parseInt(O.attr("data-swiper-slide-index"), 10));
      var G = 90 * v,
          N = Math.floor(G / 360);
      r && (G = -G, N = Math.floor(-G / 360));
      var B = Math.max(Math.min(O[0].progress, 1), -1),
          w = 0,
          H = 0,
          X = 0;
      0 == v % 4 ? (w = 4 * -N * n, X = 0) : 0 == (v - 1) % 4 ? (w = 0, X = 4 * -N * n) : 0 == (v - 2) % 4 ? (w = n + 4 * N * n, X = n) : 0 == (v - 3) % 4 && (w = -n, X = 3 * n + 4 * n * N), r && (w = -w), d || (H = w, w = 0);
      var Y = "rotateX(" + (d ? 0 : -G) + "deg) rotateY(" + (d ? G : 0) + "deg) translate3d(" + w + "px, " + H + "px, " + X + "px)";

      if (1 >= B && -1 < B && (p = 90 * v + 90 * B, r && (p = 90 * -v - 90 * B)), O.transform(Y), l.slideShadows) {
        var E = d ? O.find(".swiper-slide-shadow-left") : O.find(".swiper-slide-shadow-top"),
            V = d ? O.find(".swiper-slide-shadow-right") : O.find(".swiper-slide-shadow-bottom");
        0 === E.length && (E = $('<div class="swiper-slide-shadow-' + (d ? "left" : "top") + '"></div>'), O.append(E)), 0 === V.length && (V = $('<div class="swiper-slide-shadow-' + (d ? "right" : "bottom") + '"></div>'), O.append(V)), E.length && (E[0].style.opacity = Math.max(-B, 0)), V.length && (V[0].style.opacity = Math.max(B, 0));
      }
    }

    if (t.css({
      "-webkit-transform-origin": "50% 50% -" + n / 2 + "px",
      "-moz-transform-origin": "50% 50% -" + n / 2 + "px",
      "-ms-transform-origin": "50% 50% -" + n / 2 + "px",
      "transform-origin": "50% 50% -" + n / 2 + "px"
    }), l.shadow) if (d) I.transform("translate3d(0px, " + (s / 2 + l.shadowOffset) + "px, " + -s / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + l.shadowScale + ")");else {
      var R = Math.abs(p) - 90 * Math.floor(Math.abs(p) / 90),
          S = 1.5 - (Math.sin(2 * R * Math.PI / 360) / 2 + Math.cos(2 * R * Math.PI / 360) / 2),
          M = l.shadowScale,
          P = l.shadowScale / S,
          z = l.shadowOffset;
      I.transform("scale3d(" + M + ", 1, " + P + ") translate3d(0px, " + (a / 2 + z) + "px, " + -a / 2 / P + "px) rotateX(-90deg)");
    }
    var k = o.isSafari || o.isWebView ? -n / 2 : 0;
    t.transform("translate3d(0px,0," + k + "px) rotateX(" + (this.isHorizontal() ? 0 : p) + "deg) rotateY(" + (this.isHorizontal() ? -p : 0) + "deg)");
  },
  setTransition: function (a) {
    var e = this.$el;
    this.slides.transition(a).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(a), this.params.cubeEffect.shadow && !this.isHorizontal() && e.find(".swiper-cube-shadow").transition(a);
  }
},
    EffectCube = {
  name: "effect-cube",
  params: {
    cubeEffect: {
      slideShadows: !0,
      shadow: !0,
      shadowOffset: 20,
      shadowScale: .94
    }
  },
  create: function () {
    bindModuleMethods(this, {
      cubeEffect: _extends({}, Cube)
    });
  },
  on: {
    beforeInit: function (a) {
      if ("cube" === a.params.effect) {
        a.classNames.push(a.params.containerModifierClass + "cube"), a.classNames.push(a.params.containerModifierClass + "3d");
        var e = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: !0,
          resistanceRatio: 0,
          spaceBetween: 0,
          centeredSlides: !1,
          virtualTranslate: !0
        };
        extend$1(a.params, e), extend$1(a.originalParams, e);
      }
    },
    setTranslate: function (a) {
      "cube" === a.params.effect && a.cubeEffect.setTranslate();
    },
    setTransition: function (a, e) {
      "cube" === a.params.effect && a.cubeEffect.setTransition(e);
    }
  }
},
    Flip = {
  setTranslate: function () {
    for (var p = this.slides, e = this.rtlTranslate, t = 0; t < p.length; t += 1) {
      var c = p.eq(t),
          s = c[0].progress;
      this.params.flipEffect.limitRotation && (s = Math.max(Math.min(c[0].progress, 1), -1));
      var u = -180 * s,
          m = 0,
          g = -c[0].swiperSlideOffset,
          v = 0;

      if (this.isHorizontal() ? e && (u = -u) : (v = g, g = 0, m = -u, u = 0), c[0].style.zIndex = -Math.abs(Math.round(s)) + p.length, this.params.flipEffect.slideShadows) {
        var f = this.isHorizontal() ? c.find(".swiper-slide-shadow-left") : c.find(".swiper-slide-shadow-top"),
            w = this.isHorizontal() ? c.find(".swiper-slide-shadow-right") : c.find(".swiper-slide-shadow-bottom");
        0 === f.length && (f = $('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "left" : "top") + '"></div>'), c.append(f)), 0 === w.length && (w = $('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "right" : "bottom") + '"></div>'), c.append(w)), f.length && (f[0].style.opacity = Math.max(-s, 0)), w.length && (w[0].style.opacity = Math.max(s, 0));
      }

      c.transform("translate3d(" + g + "px, " + v + "px, 0px) rotateX(" + m + "deg) rotateY(" + u + "deg)");
    }
  },
  setTransition: function (l) {
    var n = this,
        e = n.slides,
        t = n.activeIndex,
        s = n.$wrapperEl;

    if (e.transition(l).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(l), n.params.virtualTranslate && 0 !== l) {
      var a = !1;
      e.eq(t).transitionEnd(function () {
        if (!a && n && !n.destroyed) {
          a = !0, n.animating = !1;

          for (var t = ["webkitTransitionEnd", "transitionend"], e = 0; e < t.length; e += 1) s.trigger(t[e]);
        }
      });
    }
  }
},
    EffectFlip = {
  name: "effect-flip",
  params: {
    flipEffect: {
      slideShadows: !0,
      limitRotation: !0
    }
  },
  create: function () {
    bindModuleMethods(this, {
      flipEffect: _extends({}, Flip)
    });
  },
  on: {
    beforeInit: function (a) {
      if ("flip" === a.params.effect) {
        a.classNames.push(a.params.containerModifierClass + "flip"), a.classNames.push(a.params.containerModifierClass + "3d");
        var e = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: !0,
          spaceBetween: 0,
          virtualTranslate: !0
        };
        extend$1(a.params, e), extend$1(a.originalParams, e);
      }
    },
    setTranslate: function (a) {
      "flip" === a.params.effect && a.flipEffect.setTranslate();
    },
    setTransition: function (a, e) {
      "flip" === a.params.effect && a.flipEffect.setTransition(e);
    }
  }
},
    Coverflow = {
  setTranslate: function () {
    for (var S = this.width, e = this.height, t = this.slides, i = this.slidesSizesGrid, s = this.params.coverflowEffect, a = this.isHorizontal(), r = this.translate, n = a ? S / 2 - r : e / 2 - r, o = a ? s.rotate : -s.rotate, l = s.depth, d = 0, z = t.length; d < z; d += 1) {
      var p = t.eq(d),
          u = i[d],
          c = (n - p[0].swiperSlideOffset - u / 2) / u * s.modifier,
          v = a ? o * c : 0,
          P = a ? 0 : o * c,
          k = -l * Math.abs(c),
          M = s.stretch;
      "string" == typeof M && -1 !== M.indexOf("%") && (M = parseFloat(s.stretch) / 100 * u);
      var L = a ? 0 : M * c,
          I = a ? M * c : 0,
          D = 1 - (1 - s.scale) * Math.abs(c);
      .001 > Math.abs(I) && (I = 0), .001 > Math.abs(L) && (L = 0), .001 > Math.abs(k) && (k = 0), .001 > Math.abs(v) && (v = 0), .001 > Math.abs(P) && (P = 0), .001 > Math.abs(D) && (D = 0);
      var A = "translate3d(" + I + "px," + L + "px," + k + "px)  rotateX(" + P + "deg) rotateY(" + v + "deg) scale(" + D + ")";

      if (p.transform(A), p[0].style.zIndex = 1 - Math.abs(Math.round(c)), s.slideShadows) {
        var E = a ? p.find(".swiper-slide-shadow-left") : p.find(".swiper-slide-shadow-top"),
            O = a ? p.find(".swiper-slide-shadow-right") : p.find(".swiper-slide-shadow-bottom");
        0 === E.length && (E = $('<div class="swiper-slide-shadow-' + (a ? "left" : "top") + '"></div>'), p.append(E)), 0 === O.length && (O = $('<div class="swiper-slide-shadow-' + (a ? "right" : "bottom") + '"></div>'), p.append(O)), E.length && (E[0].style.opacity = 0 < c ? c : 0), O.length && (O[0].style.opacity = 0 < -c ? -c : 0);
      }
    }
  },
  setTransition: function (a) {
    this.slides.transition(a).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(a);
  }
},
    EffectCoverflow = {
  name: "effect-coverflow",
  params: {
    coverflowEffect: {
      rotate: 50,
      stretch: 0,
      depth: 100,
      scale: 1,
      modifier: 1,
      slideShadows: !0
    }
  },
  create: function () {
    bindModuleMethods(this, {
      coverflowEffect: _extends({}, Coverflow)
    });
  },
  on: {
    beforeInit: function (a) {
      "coverflow" === a.params.effect && (a.classNames.push(a.params.containerModifierClass + "coverflow"), a.classNames.push(a.params.containerModifierClass + "3d"), a.params.watchSlidesProgress = !0, a.originalParams.watchSlidesProgress = !0);
    },
    setTranslate: function (a) {
      "coverflow" === a.params.effect && a.coverflowEffect.setTranslate();
    },
    setTransition: function (a, e) {
      "coverflow" === a.params.effect && a.coverflowEffect.setTransition(e);
    }
  }
},
    Thumbs = {
  init: function () {
    var a = this.params.thumbs;
    if (this.thumbs.initialized) return !1;
    this.thumbs.initialized = !0;
    var e = this.constructor;
    return a.swiper instanceof e ? (this.thumbs.swiper = a.swiper, extend$1(this.thumbs.swiper.originalParams, {
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    }), extend$1(this.thumbs.swiper.params, {
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    })) : isObject$1(a.swiper) && (this.thumbs.swiper = new e(extend$1({}, a.swiper, {
      watchSlidesVisibility: !0,
      watchSlidesProgress: !0,
      slideToClickedSlide: !1
    })), this.thumbs.swiperCreated = !0), this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass), this.thumbs.swiper.on("tap", this.thumbs.onThumbClick), !0;
  },
  onThumbClick: function () {
    var l = this.thumbs.swiper;

    if (l) {
      var e = l.clickedIndex,
          t = l.clickedSlide;

      if (!(t && $(t).hasClass(this.params.thumbs.slideThumbActiveClass) || null == e)) {
        var i;

        if (i = l.params.loop ? parseInt($(l.clickedSlide).attr("data-swiper-slide-index"), 10) : e, this.params.loop) {
          var o = this.activeIndex;
          this.slides.eq(o).hasClass(this.params.slideDuplicateClass) && (this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft, o = this.activeIndex);
          var d = this.slides.eq(o).prevAll('[data-swiper-slide-index="' + i + '"]').eq(0).index(),
              r = this.slides.eq(o).nextAll('[data-swiper-slide-index="' + i + '"]').eq(0).index();
          i = void 0 === d ? r : void 0 === r ? d : r - o < o - d ? r : d;
        }

        this.slideTo(i);
      }
    }
  },
  update: function (m) {
    var e = this.thumbs.swiper;

    if (e) {
      var t = "auto" === e.params.slidesPerView ? e.slidesPerViewDynamic() : e.params.slidesPerView,
          i = this.params.thumbs.autoScrollOffset,
          s = i && !e.params.loop;

      if (this.realIndex !== e.realIndex || s) {
        var a,
            g,
            v = e.activeIndex;

        if (e.params.loop) {
          e.slides.eq(v).hasClass(e.params.slideDuplicateClass) && (e.loopFix(), e._clientLeft = e.$wrapperEl[0].clientLeft, v = e.activeIndex);
          var f = e.slides.eq(v).prevAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index(),
              l = e.slides.eq(v).nextAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index();
          a = void 0 === f ? l : void 0 === l ? f : l - v == v - f ? v : l - v < v - f ? l : f, g = this.activeIndex > this.previousIndex ? "next" : "prev";
        } else g = (a = this.realIndex) > this.previousIndex ? "next" : "prev";

        s && (a += "next" === g ? i : -1 * i), e.visibleSlidesIndexes && 0 > e.visibleSlidesIndexes.indexOf(a) && (e.params.centeredSlides ? a = a > v ? a - Math.floor(t / 2) + 1 : a + Math.floor(t / 2) - 1 : a > v && (a = a - t + 1), e.slideTo(a, m ? 0 : void 0));
      }

      var d = 1,
          w = this.params.thumbs.slideThumbActiveClass;
      if (1 < this.params.slidesPerView && !this.params.centeredSlides && (d = this.params.slidesPerView), this.params.thumbs.multipleActiveThumbs || (d = 1), d = Math.floor(d), e.slides.removeClass(w), e.params.loop || e.params.virtual && e.params.virtual.enabled) for (var p = 0; p < d; p += 1) e.$wrapperEl.children('[data-swiper-slide-index="' + (this.realIndex + p) + '"]').addClass(w);else for (var b = 0; b < d; b += 1) e.slides.eq(this.realIndex + b).addClass(w);
    }
  }
},
    Thumbs$1 = {
  name: "thumbs",
  params: {
    thumbs: {
      swiper: null,
      multipleActiveThumbs: !0,
      autoScrollOffset: 0,
      slideThumbActiveClass: "swiper-slide-thumb-active",
      thumbsContainerClass: "swiper-container-thumbs"
    }
  },
  create: function () {
    bindModuleMethods(this, {
      thumbs: _extends({
        swiper: null,
        initialized: !1
      }, Thumbs)
    });
  },
  on: {
    beforeInit: function (a) {
      var e = a.params.thumbs;
      e && e.swiper && (a.thumbs.init(), a.thumbs.update(!0));
    },
    slideChange: function (a) {
      a.thumbs.swiper && a.thumbs.update();
    },
    update: function (a) {
      a.thumbs.swiper && a.thumbs.update();
    },
    resize: function (a) {
      a.thumbs.swiper && a.thumbs.update();
    },
    observerUpdate: function (a) {
      a.thumbs.swiper && a.thumbs.update();
    },
    setTransition: function (a, e) {
      var t = a.thumbs.swiper;
      t && t.setTransition(e);
    },
    beforeDestroy: function (a) {
      var e = a.thumbs.swiper;
      e && a.thumbs.swiperCreated && e && e.destroy();
    }
  }
},
    components = [Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y$1, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];
Swiper.use(components);
export default Swiper;
export { Swiper };